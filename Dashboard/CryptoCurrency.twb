<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='ETH' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ETH.csv&quot;'>
        <calculation class='tableau' formula='&quot;hourly_ETH.csv&quot;' />
        <aliases>
          <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
          <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
          <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
          <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
          <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
          <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
          <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
          <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
          <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
          <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
        </aliases>
        <members>
          <member alias='ADA' value='&quot;hourly_ADA.csv&quot;' />
          <member alias='BTC' value='&quot;hourly_BTC.csv&quot;' />
          <member alias='BUSD' value='&quot;hourly_BUSD.csv&quot;' />
          <member alias='DOGE' value='&quot;hourly_DOGE.csv&quot;' />
          <member alias='ETH' value='&quot;hourly_ETH.csv&quot;' />
          <member alias='LTC' value='&quot;hourly_LTC.csv&quot;' />
          <member alias='USDT' value='&quot;hourly_USDT.csv&quot;' />
          <member alias='XLM' value='&quot;hourly_XLM.csv&quot;' />
          <member alias='XMR' value='&quot;hourly_XMR.csv&quot;' />
          <member alias='XRP' value='&quot;hourly_XRP.csv&quot;' />
        </members>
      </column>
      <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
        <calculation class='tableau' formula='&quot;day&quot;' />
        <aliases>
          <alias key='&quot;day&quot;' value='Daily' />
          <alias key='&quot;month&quot;' value='Month' />
          <alias key='&quot;year&quot;' value='Year' />
        </aliases>
        <members>
          <member alias='Daily' value='&quot;day&quot;' />
          <member alias='Month' value='&quot;month&quot;' />
          <member alias='Year' value='&quot;year&quot;' />
        </members>
      </column>
      <column alias='Bitcoin' caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;bitcoin(fiveyears).csv&quot;'>
        <calculation class='tableau' formula='&quot;bitcoin(fiveyears).csv&quot;' />
        <aliases>
          <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
          <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
          <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
          <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
          <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
        </aliases>
        <members>
          <member value='&quot;All&quot;' />
          <member alias='Bitcoin' value='&quot;bitcoin(fiveyears).csv&quot;' />
          <member alias='Cardano' value='&quot;Cardano(fiveyears).csv&quot;' />
          <member alias='Ethereum' value='&quot;Ethereum(fiveyears).csv&quot;' />
          <member alias='Tether' value='&quot;Tether(fiveyears).csv&quot;' />
          <member alias='XRP' value='&quot;XRP(fiveyears).csv&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='hourly' inline='true' name='federated.0x59u1l0oequig19cc57o1pualhn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='hourly_XRP' name='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz'>
            <connection class='textscan' directory='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Data/Hourly' filename='hourly_XRP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='hourly_BTC.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='time' />
            <column datatype='real' name='high' />
            <column datatype='real' name='low' />
            <column datatype='real' name='open' />
            <column datatype='real' name='volumefrom' />
            <column datatype='real' name='volumeto' />
            <column datatype='real' name='close' />
            <column datatype='string' name='conversionType' />
            <column datatype='string' name='conversionSymbol' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ADA.csv' table='[hourly_ADA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BTC.csv' table='[hourly_BTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BUSD.csv' table='[hourly_BUSD#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_DOGE.csv' table='[hourly_DOGE#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ETH.csv' table='[hourly_ETH#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_LTC.csv' table='[hourly_LTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_USDT.csv' table='[hourly_USDT#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XLM.csv' table='[hourly_XLM#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XMR.csv' table='[hourly_XMR#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XRP.csv' table='[hourly_XRP#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='hourly_BTC.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='time' />
            <column datatype='real' name='high' />
            <column datatype='real' name='low' />
            <column datatype='real' name='open' />
            <column datatype='real' name='volumefrom' />
            <column datatype='real' name='volumeto' />
            <column datatype='real' name='close' />
            <column datatype='string' name='conversionType' />
            <column datatype='string' name='conversionSymbol' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ADA.csv' table='[hourly_ADA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BTC.csv' table='[hourly_BTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BUSD.csv' table='[hourly_BUSD#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_DOGE.csv' table='[hourly_DOGE#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ETH.csv' table='[hourly_ETH#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_LTC.csv' table='[hourly_LTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_USDT.csv' table='[hourly_USDT#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XLM.csv' table='[hourly_XLM#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XMR.csv' table='[hourly_XMR#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XRP.csv' table='[hourly_XRP#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>high</remote-name>
            <remote-type>5</remote-type>
            <local-name>[high]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>high</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[low]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>low</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[open]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>open</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volumefrom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volumefrom]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>volumefrom</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volumeto</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volumeto]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>volumeto</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[close]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>close</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conversionType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conversionType]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>conversionType</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conversionSymbol</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conversionSymbol]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>conversionSymbol</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column datatype='string' name='[:Measure Names]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[avg:close:qk]&quot;' value='Price' />
          <alias key='&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:volumeto:qk]&quot;' value='Volumn' />
        </aliases>
      </column>
      <column caption='Volatility' datatype='real' name='[Calculation_1836061336625209345]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='WINDOW_STDEV(([Calculation_927178635449126917]),-1,0)'>
          <table-calc ordering-type='Rows' />
        </calculation>
      </column>
      <column caption='Volumn-day' datatype='real' name='[Calculation_1836061336720871437]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;, [Calculation_927178635434487809]) &#13;&#10;: SUM([volumeto])}' />
      </column>
      <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
      </column>
      <column caption='Volumn diff.' datatype='real' name='[Calculation_927178635438608387]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([volumeto])-SUM([volumefrom])' />
      </column>
      <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
      </column>
      <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([low-day (copy 2)_927178635470815246]) - SUM([Open-day (copy)_927178635465723916])' />
      </column>
      <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([Open-day (copy)_927178635464036362])-SUM([Calculation_927178635460292617])' />
      </column>
      <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
      </column>
      <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
      </column>
      <column caption='date range for chart' datatype='boolean' name='[Calculation_927178636136554512]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] =&apos;day&apos;&#13;&#10;THEN   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=30&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;month&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=12&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;year&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=5&#13;&#10;END' />
      </column>
      <column caption='choose date range' datatype='string' name='[Calculation_927178636140728337]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
      </column>
      <column caption='High Low (copy)' datatype='real' name='[High Low (copy)_1836061336707878922]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([high-day (copy)_1836061336706686985]) - MIN([low-day (copy)_927178635467497485])' />
      </column>
      <column caption='Open Close (copy)' datatype='real' name='[Open Close (copy)_1836061336708149259]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([close-day (copy)_1836061336706588680])-SUM([Open-day (copy)_927178635471024143])' />
      </column>
      <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
      </column>
      <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
      </column>
      <column caption='Open-day (copy)' datatype='real' name='[Open-day (copy)_927178635471024143]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='( IF  [time] = &#13;&#10;    { FIXED DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;        MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END)' />
      </column>
      <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
          <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
          <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
          <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
          <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
          <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
          <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
          <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
          <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
          <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='hourly_BTC.csv' datatype='table' name='[__tableau_internal_object_id__].[hourly_BTC.csv_213357325BF042829A40664338F2D328]' role='measure' type='quantitative' />
      <column caption='close-day (copy)' datatype='real' name='[close-day (copy)_1836061336706588680]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED  DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
      </column>
      <column datatype='real' name='[close]' role='measure' type='quantitative' />
      <column caption='high-day (copy)' datatype='real' name='[high-day (copy)_1836061336706686985]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
      <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
      </column>
      <column caption='low-day (copy)' datatype='real' name='[low-day (copy)_927178635467497485]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MIN([low])}&#13;&#10;&#13;&#10;// THEN    [open]&#13;&#10;// END' />
      </column>
      <column datatype='real' name='[low]' role='measure' type='quantitative' />
      <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
      <column datatype='real' default-format='N' name='[volumeto]' role='measure' type='quantitative' />
      <column-instance column='[close]' derivation='Avg' name='[avg:close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_1836061336720871437]' derivation='Sum' name='[sum:Calculation_1836061336720871437:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
      <column-instance column='[high]' derivation='Sum' name='[sum:high:qk]' pivot='key' type='quantitative' />
      <column-instance column='[low]' derivation='Sum' name='[sum:low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[volumeto]' derivation='Sum' name='[sum:volumeto:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_927178635438608387]' derivation='User' name='[usr:Calculation_927178635438608387:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:high:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635437637634:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_1836061336720871437:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:volumeto:qk]&quot;</bucket>
            </map>
            <map to='#cdcecd'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635438608387:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[avg:close:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:low:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='ETH' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ETH.csv&quot;'>
          <calculation class='tableau' formula='&quot;hourly_ETH.csv&quot;' />
          <aliases>
            <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
            <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
            <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
            <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
            <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
            <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
            <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
            <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
            <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
            <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
          </aliases>
        </column>
        <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
          <aliases>
            <alias key='&quot;day&quot;' value='Daily' />
            <alias key='&quot;month&quot;' value='Month' />
            <alias key='&quot;year&quot;' value='Year' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='hourly_BTC.csv' id='hourly_BTC.csv_213357325BF042829A40664338F2D328'>
            <properties context=''>
              <relation all='true' name='hourly_BTC.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='time' />
                  <column datatype='real' name='high' />
                  <column datatype='real' name='low' />
                  <column datatype='real' name='open' />
                  <column datatype='real' name='volumefrom' />
                  <column datatype='real' name='volumeto' />
                  <column datatype='real' name='close' />
                  <column datatype='string' name='conversionType' />
                  <column datatype='string' name='conversionSymbol' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ADA.csv' table='[hourly_ADA#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BTC.csv' table='[hourly_BTC#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BUSD.csv' table='[hourly_BUSD#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_DOGE.csv' table='[hourly_DOGE#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ETH.csv' table='[hourly_ETH#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_LTC.csv' table='[hourly_LTC#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_USDT.csv' table='[hourly_USDT#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XLM.csv' table='[hourly_XLM#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XMR.csv' table='[hourly_XMR#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XRP.csv' table='[hourly_XRP#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='bitcoin(fiveyears)' inline='true' name='federated.146cu550l6pdah1bfylyq1xsxtmd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bitcoin(fiveyears)' name='textscan.1tozeoh1tbdo31108e22t006nqx4'>
            <connection class='textscan' directory='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Data' filename='bitcoin(fiveyears).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='bitcoin(fiveyears).csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' />
            <column datatype='datetime' name='Date' />
            <column datatype='real' name='High' />
            <column datatype='real' name='Low' />
            <column datatype='real' name='Open' />
            <column datatype='real' name='Close' />
            <column datatype='real' name='Volume' />
            <column datatype='real' name='Marketcap' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='bitcoin(fiveyears).csv' table='[bitcoin(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Cardano(fiveyears).csv' table='[Cardano(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Ethereum(fiveyears).csv' table='[Ethereum(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Tether(fiveyears).csv' table='[Tether(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='XRP(fiveyears).csv' table='[XRP(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='bitcoin(fiveyears).csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' />
            <column datatype='datetime' name='Date' />
            <column datatype='real' name='High' />
            <column datatype='real' name='Low' />
            <column datatype='real' name='Open' />
            <column datatype='real' name='Close' />
            <column datatype='real' name='Volume' />
            <column datatype='real' name='Marketcap' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='bitcoin(fiveyears).csv' table='[bitcoin(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Cardano(fiveyears).csv' table='[Cardano(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Ethereum(fiveyears).csv' table='[Ethereum(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Tether(fiveyears).csv' table='[Tether(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='XRP(fiveyears).csv' table='[XRP(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Volume]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketcap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketcap]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Marketcap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='last day of year' datatype='datetime' default-format='*m/d/yyyy' name='[Calculation_237001990502227968]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date]) : MAX([Date]) }' />
      </column>
      <column caption='year end close' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_237001990505455619]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF      [Date] = [Calculation_237001990502227968]&#13;&#10;THEN    [Close]&#13;&#10;END' />
      </column>
      <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Close]' role='measure' type='quantitative' />
      <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Marketcap]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Open]' role='measure' type='quantitative' />
      <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
          <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
          <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
          <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
          <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
        </aliases>
      </column>
      <column datatype='real' name='[Volume]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='bitcoin(fiveyears).csv' datatype='table' name='[__tableau_internal_object_id__].[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]' role='measure' type='quantitative' />
      <column-instance column='[Close]' derivation='Avg' name='[avg:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketcap]' derivation='Avg' name='[avg:Marketcap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Volume]' derivation='Avg' name='[avg:Volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close]' derivation='Median' name='[med:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Volume]' derivation='Sum' name='[pcdf:sum:Volume:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Volume]' derivation='Sum' name='[pcdf:sum:Volume:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Volume]' derivation='Sum' name='[pcdf:sum:Volume:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Close]' derivation='Sum' name='[sum:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketcap]' derivation='Sum' name='[sum:Marketcap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close]' derivation='Var' name='[var:Close:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Table Name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bitcoin(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;XRP(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tether(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethereum(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cardano(fiveyears).csv&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Marketcap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Marketcap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[var:Close:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Volume:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[med:Close:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[pcdf:sum:Volume:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[pcdf:sum:Volume:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[pcdf:sum:Volume:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]:1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Bitcoin' caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;bitcoin(fiveyears).csv&quot;'>
          <calculation class='tableau' formula='&quot;bitcoin(fiveyears).csv&quot;' />
          <aliases>
            <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
            <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
            <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
            <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
            <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='bitcoin(fiveyears).csv' id='bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264'>
            <properties context=''>
              <relation all='true' name='bitcoin(fiveyears).csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' />
                  <column datatype='datetime' name='Date' />
                  <column datatype='real' name='High' />
                  <column datatype='real' name='Low' />
                  <column datatype='real' name='Open' />
                  <column datatype='real' name='Close' />
                  <column datatype='real' name='Volume' />
                  <column datatype='real' name='Marketcap' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='bitcoin(fiveyears).csv' table='[bitcoin(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Cardano(fiveyears).csv' table='[Cardano(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Ethereum(fiveyears).csv' table='[Ethereum(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Tether(fiveyears).csv' table='[Tether(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='XRP(fiveyears).csv' table='[XRP(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Close'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>Close</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bitcoin(fiveyears)' name='federated.146cu550l6pdah1bfylyq1xsxtmd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Bitcoin' caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;bitcoin(fiveyears).csv&quot;'>
              <calculation class='tableau' formula='&quot;bitcoin(fiveyears).csv&quot;' />
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.146cu550l6pdah1bfylyq1xsxtmd'>
            <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Close]' role='measure' type='quantitative' />
            <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column-instance column='[Close]' derivation='Avg' name='[avg:Close:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_237001990512586757]' derivation='None' name='[none:Calculation_237001990512586757:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]'>
            <groupfilter function='member' level='[none:Calculation_237001990512586757:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]' scope='rows' value=' ' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]' value='124' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#ffffff' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Table Name Parameter]' value='Pick a CryptoCurrency' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#898989' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk] * [federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk])</rows>
        <cols>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{E73C06DC-8DB5-4463-B2B0-B50FD64BF4F6}' />
    </worksheet>
    <worksheet name='Vol(hrly)'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontname='Tableau Book' fontsize='12'>Volumn</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ETH' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ETH.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ETH.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='Volumn-day' datatype='real' name='[Calculation_1836061336720871437]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;, [Calculation_927178635434487809]) &#13;&#10;: SUM([volumeto])}' />
            </column>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='date range for chart' datatype='boolean' name='[Calculation_927178636136554512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] =&apos;day&apos;&#13;&#10;THEN   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=30&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;month&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=12&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;year&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=5&#13;&#10;END' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column-instance column='[Calculation_927178635434487809]' derivation='MDY' name='[md:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636136554512]' derivation='None' name='[none:Calculation_927178636136554512:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_1836061336720871437]' derivation='Sum' name='[sum:Calculation_1836061336720871437:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column datatype='real' default-format='N' name='[volumeto]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[md:Calculation_927178635434487809:ok]' member='20220115' />
            </groupfilter>
            <preset type='last-values' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636136554512:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='display' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:qk]' scope='cols' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_1836061336720871437:qk]</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{5149454D-5B9E-483E-811B-522D6AC8AEB9}' />
    </worksheet>
    <worksheet name='Volumn'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>Volumn</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bitcoin(fiveyears)' name='federated.146cu550l6pdah1bfylyq1xsxtmd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Bitcoin' caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;bitcoin(fiveyears).csv&quot;'>
              <calculation class='tableau' formula='&quot;bitcoin(fiveyears).csv&quot;' />
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.146cu550l6pdah1bfylyq1xsxtmd'>
            <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column-instance column='[Calculation_237001990512586757]' derivation='None' name='[none:Calculation_237001990512586757:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]'>
            <groupfilter function='member' level='[none:Calculation_237001990512586757:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Table Name Parameter]' value='Pick a CryptoCurrency' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f5f5f5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{61033E30-BA93-4F41-B70E-96F9AE0D3D99}' />
    </worksheet>
    <worksheet name='price chart-day'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ETH' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ETH.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ETH.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([low-day (copy 2)_927178635470815246]) - SUM([Open-day (copy)_927178635465723916])' />
            </column>
            <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Open-day (copy)_927178635464036362])-SUM([Calculation_927178635460292617])' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='date range for chart' datatype='boolean' name='[Calculation_927178636136554512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] =&apos;day&apos;&#13;&#10;THEN   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=30&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;month&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=12&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;year&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=5&#13;&#10;END' />
            </column>
            <column caption='choose date range' datatype='string' name='[Calculation_927178636140728337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='MDY' name='[md:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636136554512]' derivation='None' name='[none:Calculation_927178636136554512:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636140728337]' derivation='None' name='[none:Calculation_927178636140728337:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635460292617]' derivation='Sum' name='[sum:Calculation_927178635460292617:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
            <column-instance column='[low-day (copy 2)_927178635470815246]' derivation='Sum' name='[sum:low-day (copy 2)_927178635470815246:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635449126917]' derivation='User' name='[usr:Calculation_927178635449126917:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449282566]' derivation='User' name='[usr:Calculation_927178635449282566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[md:Calculation_927178635434487809:ok]' member='20220115' />
            </groupfilter>
            <preset type='last-values' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636136554512:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636140728337:nk]' member='&quot;day&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_927178635434487809:ok]' member='#2022-01-15 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]' field-type='quantitative' scope='rows' type='space' />
            <format attr='display' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' scope='rows' value='false' />
            <format attr='title' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#1b1b1b' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <tooltip column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:low-day (copy 2)_927178635470815246:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <color column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:qk]' />
              <tooltip column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:low-day (copy 2)_927178635470815246:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449126917:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' />
              <tooltip column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:low-day (copy 2)_927178635470815246:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk] + [federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk])</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{A1162680-1D48-447F-B63C-07969159D927}' />
    </worksheet>
    <worksheet name='price chart-day (copy)'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ETH' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ETH.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ETH.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='date range for chart' datatype='boolean' name='[Calculation_927178636136554512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] =&apos;day&apos;&#13;&#10;THEN   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=30&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;month&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=12&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;year&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=5&#13;&#10;END' />
            </column>
            <column caption='High Low (copy)' datatype='real' name='[High Low (copy)_1836061336707878922]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([high-day (copy)_1836061336706686985]) - MIN([low-day (copy)_927178635467497485])' />
            </column>
            <column caption='Open Close (copy)' datatype='real' name='[Open Close (copy)_1836061336708149259]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([close-day (copy)_1836061336706588680])-SUM([Open-day (copy)_927178635471024143])' />
            </column>
            <column caption='Open-day (copy)' datatype='real' name='[Open-day (copy)_927178635471024143]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='( IF  [time] = &#13;&#10;    { FIXED DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;        MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END)' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column caption='close-day (copy)' datatype='real' name='[close-day (copy)_1836061336706588680]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED  DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column caption='high-day (copy)' datatype='real' name='[high-day (copy)_1836061336706686985]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='low-day (copy)' datatype='real' name='[low-day (copy)_927178635467497485]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MIN([low])}&#13;&#10;&#13;&#10;// THEN    [open]&#13;&#10;// END' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='MDY' name='[md:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636136554512]' derivation='None' name='[none:Calculation_927178636136554512:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635471024143]' derivation='Sum' name='[sum:Open-day (copy)_927178635471024143:qk]' pivot='key' type='quantitative' />
            <column-instance column='[low-day (copy)_927178635467497485]' derivation='Sum' name='[sum:low-day (copy)_927178635467497485:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[High Low (copy)_1836061336707878922]' derivation='User' name='[usr:High Low (copy)_1836061336707878922:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open Close (copy)_1836061336708149259]' derivation='User' name='[usr:Open Close (copy)_1836061336708149259:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[md:Calculation_927178635434487809:ok]' member='20220115' />
            </groupfilter>
            <preset type='last-values' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636136554512:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:low-day (copy)_927178635467497485:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Open Close (copy)_1836061336708149259:qk]' num-steps='2' type='custom-interpolated'>
              <color-palette custom='true' name='' type='ordered-diverging'>
                <color>#ae123a</color>
                <color>#b12046</color>
                <color>#b53052</color>
                <color>#b9405f</color>
                <color>#bd516d</color>
                <color>#c1627b</color>
                <color>#c57489</color>
                <color>#c98798</color>
                <color>#cd9ba7</color>
                <color>#d1afb7</color>
                <color>#d5c3c8</color>
                <color>#d9d9d9</color>
                <color>#99d788</color>
                <color>#88cd7a</color>
                <color>#7bc26f</color>
                <color>#6fb663</color>
                <color>#64ab59</color>
                <color>#57a153</color>
                <color>#499550</color>
                <color>#3b8a4a</color>
                <color>#2d7f42</color>
                <color>#27753d</color>
                <color>#24693d</color>
              </color-palette>
            </encoding>
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635471024143:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Open Close (copy)_1836061336708149259:qk]' />
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Open Close (copy)_1836061336708149259:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.3293370008468628' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:low-day (copy)_927178635467497485:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:High Low (copy)_1836061336707878922:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635471024143:qk] + [federated.0x59u1l0oequig19cc57o1pualhn].[sum:low-day (copy)_927178635467497485:qk])</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{331556A1-6327-41C9-8F65-A85691B9A759}' />
    </worksheet>
    <worksheet name='price chart-month'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ETH' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ETH.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ETH.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([low-day (copy 2)_927178635470815246]) - SUM([Open-day (copy)_927178635465723916])' />
            </column>
            <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Open-day (copy)_927178635464036362])-SUM([Calculation_927178635460292617])' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='date range for chart' datatype='boolean' name='[Calculation_927178636136554512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] =&apos;day&apos;&#13;&#10;THEN   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=30&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;month&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=12&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;year&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=5&#13;&#10;END' />
            </column>
            <column caption='choose date range' datatype='string' name='[Calculation_927178636140728337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636136554512]' derivation='None' name='[none:Calculation_927178636136554512:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636140728337]' derivation='None' name='[none:Calculation_927178636140728337:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635460292617]' derivation='Sum' name='[sum:Calculation_927178635460292617:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Month-Trunc' name='[tmn:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449126917]' derivation='User' name='[usr:Calculation_927178635449126917:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449282566]' derivation='User' name='[usr:Calculation_927178635449282566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636136554512:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636140728337:nk]' member='&quot;month&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449126917:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk] + [federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk])</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tmn:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{3500CB59-A1AE-4DC1-AE09-E67358AE0863}' />
    </worksheet>
    <worksheet name='price chart-quarter'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ETH' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ETH.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ETH.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([low-day (copy 2)_927178635470815246]) - SUM([Open-day (copy)_927178635465723916])' />
            </column>
            <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Open-day (copy)_927178635464036362])-SUM([Calculation_927178635460292617])' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='choose date range' datatype='string' name='[Calculation_927178636140728337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636140728337]' derivation='None' name='[none:Calculation_927178636140728337:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635460292617]' derivation='Sum' name='[sum:Calculation_927178635460292617:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Quarter-Trunc' name='[tqr:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449126917]' derivation='User' name='[usr:Calculation_927178635449126917:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449282566]' derivation='User' name='[usr:Calculation_927178635449282566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636140728337:nk]' member='&quot;quarter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_927178635434487809:ok]' member='#2022-01-15 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449126917:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk] + [federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk])</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tqr:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{60472D8B-A64B-401F-8683-256975493521}' />
    </worksheet>
    <worksheet name='price chart-year'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ETH' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ETH.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ETH.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([low-day (copy 2)_927178635470815246]) - SUM([Open-day (copy)_927178635465723916])' />
            </column>
            <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([Open-day (copy)_927178635464036362])-SUM([Calculation_927178635460292617])' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='date range for chart' datatype='boolean' name='[Calculation_927178636136554512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] =&apos;day&apos;&#13;&#10;THEN   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=30&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;month&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=12&#13;&#10;ELSEIF [Parameters].[Parameter 2] = &apos;year&apos;&#13;&#10;THEN&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=5&#13;&#10;END' />
            </column>
            <column caption='choose date range' datatype='string' name='[Calculation_927178636140728337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='MDY' name='[md:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636136554512]' derivation='None' name='[none:Calculation_927178636136554512:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636140728337]' derivation='None' name='[none:Calculation_927178636140728337:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635460292617]' derivation='Sum' name='[sum:Calculation_927178635460292617:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year-Trunc' name='[tyr:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449126917]' derivation='User' name='[usr:Calculation_927178635449126917:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449282566]' derivation='User' name='[usr:Calculation_927178635449282566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[md:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[md:Calculation_927178635434487809:ok]' member='20220115' />
            </groupfilter>
            <preset type='last-values' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636136554512:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636140728337:nk]' member='&quot;year&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_927178635434487809:ok]' member='#2022-01-15 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449126917:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk] + [federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk])</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tyr:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{4275BB6F-868F-4342-AAAD-70EF9FC86017}' />
    </worksheet>
    <worksheet name='vol vs price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>Volumn</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bitcoin(fiveyears)' name='federated.146cu550l6pdah1bfylyq1xsxtmd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='Bitcoin' caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;bitcoin(fiveyears).csv&quot;'>
              <calculation class='tableau' formula='&quot;bitcoin(fiveyears).csv&quot;' />
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.146cu550l6pdah1bfylyq1xsxtmd'>
            <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[Volume]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_237001990512586757]' derivation='None' name='[none:Calculation_237001990512586757:nk]' pivot='key' type='nominal' />
            <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]'>
            <groupfilter function='member' level='[none:Calculation_237001990512586757:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]' scope='rows' value=' ' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Table Name Parameter]' value='Pick a CryptoCurrency' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c0c0c0' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]</rows>
        <cols>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{4DB5CB71-9E3A-489E-A36C-D8069E85F965}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CryptoCurrency' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98566' id='1' param='vert' removable='false' w='99286' x='357' y='717'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4480' id='3' w='99286' x='357' y='717' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9050' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='99286' x='357' y='5197' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='85036' id='5' paired-zone-id='4' removable='false' w='99286' x='357' y='14247'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Cover' captured-sheet='Cv' id='1' />
                  <story-point captured-sheet='Historical Data' id='2' />
                  <story-point captured-sheet='price chart' id='3' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{1E49B18B-94DD-4677-86B7-D994E77171CF}' />
    </dashboard>
    <dashboard name='Cv'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_6' value='top' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98566' id='3' param='horz' w='99286' x='357' y='717'>
            <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='98566' id='5' is-centered='0' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/Cryptocurrency-Bitcoin-Blockchian-Dice.jpg' w='99286' x='357' y='717'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='54301' id='6' w='29006' x='46869' y='31631'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='22'>CryptoCurrency Analysis</run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='18'>by</run>
            <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Lavina Jagwani</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jordan Levy</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Robert Yokabaskas</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Yutai Lee</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Richard Barber</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jacqueline Guo</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='54' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='53' param='vert' w='84000' x='8000' y='8000'>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='98566' id='5' is-centered='0' is-fixed='true' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/Cryptocurrency-Bitcoin-Blockchian-Dice.jpg' w='99286' x='357' y='717'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='54301' id='6' w='29006' x='46869' y='31631'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='22'>CryptoCurrency Analysis</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='18'>by</run>
                    <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Lavina Jagwani</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jordan Levy</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Robert Yokabaskas</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Yutai Lee</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Richard Barber</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jacqueline Guo</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EA167222-1082-4CF9-878A-9F19C09FC5C9}' />
    </dashboard>
    <dashboard name='Historical Data'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Times New Roman' />
          <format attr='font-size' value='10' />
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#666666' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-family' value='Times New Roman' />
          <format attr='font-size' value='10' />
          <format attr='color' value='#ffffff' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='Bitcoin' caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;bitcoin(fiveyears).csv&quot;'>
          <calculation class='tableau' formula='&quot;bitcoin(fiveyears).csv&quot;' />
          <aliases>
            <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
            <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
            <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
            <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
            <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
          </aliases>
          <members>
            <member value='&quot;All&quot;' />
            <member alias='Bitcoin' value='&quot;bitcoin(fiveyears).csv&quot;' />
            <member alias='Cardano' value='&quot;Cardano(fiveyears).csv&quot;' />
            <member alias='Ethereum' value='&quot;Ethereum(fiveyears).csv&quot;' />
            <member alias='Tether' value='&quot;Tether(fiveyears).csv&quot;' />
            <member alias='XRP' value='&quot;XRP(fiveyears).csv&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='13' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='100000' id='12' is-centered='0' is-scaled='1' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/background2.jpg' w='100000' x='0' y='0'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='64785' id='3' name='Volumn' w='38536' x='4604' y='15233' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6272' id='4' leg-item-layout='horz' name='Volumn' pane-specification-id='0' param='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]' w='33149' x='34576' y='86380' />
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7796' id='5' mode='compact' param='[Parameters].[Table Name Parameter]' w='20672' x='2808' y='87007'>
          <formatted-text>
            <run fontsize='12'>Pick a Currency</run>
          </formatted-text>
        </zone>
        <zone h='62724' id='9' name='Close' w='33333' x='49217' y='15233' />
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='5556' id='14' w='35539' x='33403' y='2957'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='28'>Crypto Currency </run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='60' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98566' id='59' param='vert' w='99166' x='417' y='717'>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='100000' id='12' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/background2.jpg' w='100000' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='5556' id='14' w='35539' x='33403' y='2957'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='28'>Crypto Currency </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='64785' id='3' is-fixed='true' name='Volumn' w='38536' x='4604' y='15233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6272' id='4' leg-item-layout='horz' name='Volumn' pane-specification-id='0' param='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]' w='33149' x='34576' y='86380'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62724' id='9' is-fixed='true' name='Close' w='33333' x='49217' y='15233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7796' id='5' mode='compact' param='[Parameters].[Table Name Parameter]' w='20672' x='2808' y='87007'>
                  <formatted-text>
                    <run fontsize='12'>Pick a Currency</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F63289C2-25B3-4944-822A-0656BF9A45C2}' />
    </dashboard>
    <dashboard name='price chart'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='color' value='#1b1b1b' />
          <format attr='font-weight' value='bold' />
          <format attr='font-family' value='Tableau Medium' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='color' value='#1b1b1b' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size maxheight='900' maxwidth='1600' minheight='900' minwidth='1600' preset-index='8' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='ETH' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ETH.csv&quot;'>
          <calculation class='tableau' formula='&quot;hourly_ETH.csv&quot;' />
          <aliases>
            <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
            <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
            <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
            <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
            <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
            <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
            <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
            <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
            <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
            <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
          </aliases>
          <members>
            <member alias='ADA' value='&quot;hourly_ADA.csv&quot;' />
            <member alias='BTC' value='&quot;hourly_BTC.csv&quot;' />
            <member alias='BUSD' value='&quot;hourly_BUSD.csv&quot;' />
            <member alias='DOGE' value='&quot;hourly_DOGE.csv&quot;' />
            <member alias='ETH' value='&quot;hourly_ETH.csv&quot;' />
            <member alias='LTC' value='&quot;hourly_LTC.csv&quot;' />
            <member alias='USDT' value='&quot;hourly_USDT.csv&quot;' />
            <member alias='XLM' value='&quot;hourly_XLM.csv&quot;' />
            <member alias='XMR' value='&quot;hourly_XMR.csv&quot;' />
            <member alias='XRP' value='&quot;hourly_XRP.csv&quot;' />
          </members>
        </column>
        <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
          <aliases>
            <alias key='&quot;day&quot;' value='Daily' />
            <alias key='&quot;month&quot;' value='Month' />
            <alias key='&quot;year&quot;' value='Year' />
          </aliases>
          <members>
            <member alias='Daily' value='&quot;day&quot;' />
            <member alias='Month' value='&quot;month&quot;' />
            <member alias='Year' value='&quot;year&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='43' param='horz' w='99000' x='500' y='889'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='27' param='horz' w='89000' x='500' y='889'>
              <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='98222' id='25' w='89000' x='500' y='889'>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='98222' id='22' is-centered='0' is-scaled='1' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Data/Hourly/Test/Results/Predictions/BTCout.png' w='32563' x='56937' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='23' param='horz' w='56437' x='500' y='889'>
                  <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='40' param='vert' w='56437' x='500' y='889'>
                    <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='5445' id='55' param='vert' w='56437' x='500' y='889'>
                      <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='5445' id='56' w='56437' x='500' y='889'>
                        <formatted-text>
                          <run fontalignment='1' fontcolor='#1b1b1b' fontname='Tableau Medium' fontsize='15'>Price &amp; Volumn</run>
                        </formatted-text>
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='649' h='72111' id='50' is-fixed='true' param='horz' w='56437' x='500' y='6334'>
                      <zone h='72111' id='51' name='price chart-day' show-title='false' w='56311' x='500' y='6334'>
                        <layout-cache minheight='133' minwidth='190' type-h='scalable' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='72111' id='53' name='price chart-month' show-title='false' w='63' x='56811' y='6334'>
                        <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                      <zone h='72111' id='54' name='price chart-year' show-title='false' w='63' x='56874' y='6334'>
                        <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                        <zone-style>
                          <format attr='border-color' value='#000000' />
                          <format attr='border-style' value='none' />
                          <format attr='border-width' value='0' />
                          <format attr='margin' value='4' />
                        </zone-style>
                      </zone>
                    </zone>
                    <zone h='20666' id='49' name='Vol(hrly)' show-title='false' w='56437' x='500' y='78445'>
                      <layout-cache minheight='100' minwidth='168' type-h='scalable' type-w='scalable' />
                      <zone-style>
                        <format attr='border-color' value='#000000' />
                        <format attr='border-style' value='none' />
                        <format attr='border-width' value='0' />
                        <format attr='margin' value='4' />
                      </zone-style>
                    </zone>
                  </zone>
                </zone>
              </zone>
            </zone>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' fixed-size='160' h='98222' id='42' is-fixed='true' param='vert' w='10000' x='89500' y='889'>
              <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' fixed-size='110' h='13111' id='9' is-fixed='true' mode='compact' param='[Parameters].[Parameter 1]' w='10000' x='89500' y='889'>
                <formatted-text>
                  <run>Coin List</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' fixed-size='125' h='14778' id='10' is-fixed='true' mode='compact' param='[Parameters].[Parameter 2]' w='10000' x='89500' y='14000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1550' minheight='1550' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='68' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98222' id='67' param='vert' w='99000' x='500' y='889'>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='5445' id='56' w='56437' x='500' y='889'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#1b1b1b' fontname='Tableau Medium' fontsize='15'>Price &amp; Volumn</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='98222' id='22' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Data/Hourly/Test/Results/Predictions/BTCout.png' w='32563' x='56937' y='889'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' fixed-size='110' h='13111' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='10000' x='89500' y='889'>
                  <formatted-text>
                    <run>Coin List</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72111' id='51' is-fixed='true' name='price chart-day' show-title='false' w='56311' x='500' y='6334'>
                  <layout-cache minheight='133' minwidth='190' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72111' id='53' is-fixed='true' name='price chart-month' show-title='false' w='63' x='56811' y='6334'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='72111' id='54' is-fixed='true' name='price chart-year' show-title='false' w='63' x='56874' y='6334'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='1' maxwidth='1' minheight='1' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' fixed-size='125' h='14778' id='10' mode='compact' param='[Parameters].[Parameter 2]' w='10000' x='89500' y='14000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='178' h='20666' id='49' is-fixed='true' name='Vol(hrly)' show-title='false' w='56437' x='500' y='78445'>
                  <layout-cache minheight='100' minwidth='168' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{994DC3ED-ED4D-410E-9067-D9FDABA0D227}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='dashboard' name='CryptoCurrency'>
      <viewpoints />
      <active id='4' />
      <simple-id uuid='{F9C75935-F000-4E14-A374-938A8729364D}' />
    </window>
    <window class='dashboard' name='Cv'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{7DF344DA-F95F-455D-B473-B6AE12323DD5}' />
    </window>
    <window class='dashboard' name='Historical Data'>
      <viewpoints>
        <viewpoint name='Close'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Volumn'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='14' />
      <simple-id uuid='{D42489CD-0334-49A7-B67D-4D60A2A8981A}' />
    </window>
    <window class='worksheet' name='Volumn'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Table Name Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70AC933F-D15D-4A96-80E5-87A509FE7578}' />
    </window>
    <window class='worksheet' name='vol vs price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Table Name Parameter]' type='parameter' />
            <card pane-specification-id='2' param='[federated.146cu550l6pdah1bfylyq1xsxtmd].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[mn:Date:ok]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:High:qk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:ok]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07B0689D-5529-4951-B09E-567F944F5043}' />
    </window>
    <window class='worksheet' name='Close'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Table Name Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7F3B342-2D0E-4976-B39C-6A176AA5D5B2}' />
    </window>
    <window class='dashboard' maximized='true' name='price chart'>
      <viewpoints>
        <viewpoint name='Vol(hrly)'>
          <zoom type='entire-view' />
          <selection-collection>
            <node-selection select-tuples='false'>
              <oriented-node-reference orientation='horizontal'>
                <node-reference>
                  <axis>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:qk]</axis>
                </node-reference>
                <page-reference />
              </oriented-node-reference>
            </node-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='price chart-day'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='price chart-month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='price chart-year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='22' />
      <simple-id uuid='{BA1D0BEC-BD00-40A1-B6F3-4A77B2EDB7A6}' />
    </window>
    <window class='worksheet' name='price chart-quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{487EDFA3-8FD7-4494-8DF4-7311A1813E39}' />
    </window>
    <window class='worksheet' name='price chart-day (copy)'>
      <cards>
        <edge name='left'>
          <strip size='205'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='1' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Open Close (copy)_1836061336708149259:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{4665703C-8525-4C1B-AE80-47BF15A9BE80}' />
    </window>
    <window class='worksheet' hidden='true' name='Vol(hrly)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A1FC7373-F1E6-479C-B196-D22DF8A57408}' />
    </window>
    <window class='worksheet' hidden='true' name='price chart-day'>
      <cards>
        <edge name='left'>
          <strip size='259'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{301F8E8A-E6E9-4B50-9E89-CB4114C68088}' />
    </window>
    <window class='worksheet' hidden='true' name='price chart-month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{341F76F1-B451-46E5-9475-B420B6D6A0A2}' />
    </window>
    <window class='worksheet' hidden='true' name='price chart-year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[md:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97EB08C7-4D58-4609-86FB-F7A46A1EB9D5}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Close' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CryptoCurrency' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAHoUlEQVR4nO3aa3BU9R3G8WeTsGBCyi1hAoYgEQKGuzFQLh1EyIBABVpeqLTaOp0yYyti
      cLSlltLodAodEWmRgtylyKWtEMQqQrgVQriZ0hZNiCQNSZTElCAQQhI2fcGUaWDaAl4YeL6f
      d2f37Dm/OXu++5+d3UBDQ0ODAFNhN3oA4EYiAFgjAFgjAFiLuPyBUxUlevXVRSooPqFeA9P0
      +CPfuO6DV5QVK9giTi2igv9zv9zsrfrd2g06r6aa+Ngk9e/Z+brPCVyLRgE01J/Tj3/0nL49
      eZrSe96pvPyCz3TwHW+uVrvBj2hQctx/3edY7nbNX7NNL8z4haIj6lX2z+rPdE7gWoTPmDFj
      xr83ju7PUmlYBz00ZogCgTDFxsRIktLTpyiyvkoZM5eoVfPTytxTqP69klR7qkRPZ8zTyJR4
      jXv0Ce3bs0PLl69QeOsEBU4WaM6ClTq4P0fvbt+vEfcP087MVcr45WxlZmbqfLCNundJ0NJ5
      L+mhydPVqW20IoLN1KpFtI7s3qQ39h1XSnKiCg9u1Wtb31f/3glKn/JT1Vcd08wlGzW2f0dN
      mbVCJw5v05qtuRraL1kZP3lWq9b9QZt37NfgIUN0Mj9bP5g2U7uyNmvp0qW6LS5JSR3j9Pa6
      JXp+1st6+09v6Y7ufTX92WkaMWaUwgPSnJ8/o5jkgWr9f1Yt3BoarQAVn5QrvkPiFTudLS/S
      P+pGa9Hi2VJ9tV6fPE31E0drT9ZmDRkxWpJ0e1JfzX5+quprPtWkJ5/T2AVz9fDXcy6tAKHq
      Cq3Z/BctXLxEEQ11mvrDJ5Q2bLAqyuvUIT76qoYtL/qr6kY/oMWzvy9VFSr/wC6N/9kLejSl
      m3auX6qkex/UjPu/qt1vvqbMLTka3klK6HaPMqZ+V6eLczVz7X4N7Ral9dnFWrJsmcIDDQqF
      GpSWmqDtBwo0vFeMiqsj1blt1OdwaXEzaPQlOKZNrEpKSq/YKTK2o741Lk0BSYGISA3r2147
      c4u060C+0gb1lCQ1adJEkhTR7CtqfVu46i47xtnKMsUmdlWTsIAC4UF16dhS5VW1iomNUEnp
      6asaNrZjD41LG3Bpu0vK1zQkpZskqbS0TPmH92nhwoV67+jHCg9dnCA6OloBScFgUKFQSJVl
      perSo4/CA5IUUFhYmEaNn6B3N67X4T1ZSh066qpmwa2hUQBJKYNVlL1Jew8fVSh0QR/k5UmS
      AoFAoxeNGj9BG5e/pLCYJEVFXHyuprpaF0Ih5R3aqepgKwUlRUVF6nhxsepraxXVrrMqjuSo
      pKJKJz8u0qGCM0qICWrMuAf0mxdn6ZOqs6o5U6XC4x8pPCxMlZWVqqs9p9zDf7903svn+M/t
      rt2S1LR5G33nse/p4YkTdXf3K1cySWrXOVnvZ2/WR5Wf6kxVhU6erlFkTKLa6oRWvLVPI++9
      5/qvJm46jb4DBMKDGjwgRW+sWqaVq3+vc+HRSu19lwo+LFC/1H6XXtQkspUObPmjhj84SfEx
      zaWaKi1asUZ7d25VfulppT/1pKIjg2ofH68Nry/Whi0HlDZiuPokxeuVX7+sbXsPa9LkpxQf
      00Ix7RMVF1mn385/Re9sz1biXb3UPbmr/rxprda/s0Nx7dqrVVwHJd95uz4sKFZqv5SLQ9TX
      qKDslPr1SZYktevUVeV5OZq/YLEOHSlQjz4patk0pIrqMPXseodCtdUqrqhW6t19ldwpVvPm
      zlHW7vfUt/8gtYgKKjbygg6WhjT2vv5f6huAGytwzf8FqjunvftytHp9ll78VYbCJamqUFPm
      btSc6ZO/kCG/aMXH8rRu5TINmPC4BiZ3uNHj4Et07T+EXTivv31QpKefSb9480tSs5YaOeTm
      /eQ8XnhUve/7Jje/oWtfAYBbCH+FgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgLV/AT2S2IsWJxkTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cv' width='192'>
      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
      fw4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Historical Data' width='192'>
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='91' name='Volumn' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABbCAYAAAAlfYqHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAABTklEQVR4nO3cQQqDQBAAQQ05+f+3ztU8wUBQMV11lnUQml0Puu77vi8Q9bp7ALiTAEgT
      AGkCIE0ApAmANAGQdhjAzFwxB9zCDkCaAEgTwA9m5tQj4pPXf8rsAiBNAKQJgDQBkCYA0gRA
      mgBIEwBpAiBNAKQJgDQBkCYA0tajH2PNzLJt21XzwKXsAKS9v7nIZ5H8q68COOsIdPbx6sz1
      nzz7Ffd4yvNxBCLt8CUY/pkdgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBp
      AiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA
      0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBNAKQJgDQBkCYA0gRAmgBIEwBpAiBN
      AKQJgDQBkCYA0gRA2gesqkdi76ULvAAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='price chart' width='192'>
      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
      4sXvHpz3Nf8feQfkH6U3OcMAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='price chart-day (copy)' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='vol vs price' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
