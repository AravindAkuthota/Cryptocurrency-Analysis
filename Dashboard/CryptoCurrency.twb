<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <ISO8601PeriodTypes />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='BTC' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_BTC.csv&quot;'>
        <calculation class='tableau' formula='&quot;hourly_BTC.csv&quot;' />
        <aliases>
          <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
          <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
          <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
          <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
          <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
          <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
          <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
          <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
          <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
          <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
        </aliases>
        <members>
          <member alias='ADA' value='&quot;hourly_ADA.csv&quot;' />
          <member alias='BTC' value='&quot;hourly_BTC.csv&quot;' />
          <member alias='BUSD' value='&quot;hourly_BUSD.csv&quot;' />
          <member alias='DOGE' value='&quot;hourly_DOGE.csv&quot;' />
          <member alias='ETH' value='&quot;hourly_ETH.csv&quot;' />
          <member alias='LTC' value='&quot;hourly_LTC.csv&quot;' />
          <member alias='USDT' value='&quot;hourly_USDT.csv&quot;' />
          <member alias='XLM' value='&quot;hourly_XLM.csv&quot;' />
          <member alias='XMR' value='&quot;hourly_XMR.csv&quot;' />
          <member alias='XRP' value='&quot;hourly_XRP.csv&quot;' />
        </members>
      </column>
      <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <aliases>
          <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
          <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
          <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
          <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
          <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
        </aliases>
        <members>
          <member value='&quot;All&quot;' />
          <member alias='Bitcoin' value='&quot;bitcoin(fiveyears).csv&quot;' />
          <member alias='Cardano' value='&quot;Cardano(fiveyears).csv&quot;' />
          <member alias='Ethereum' value='&quot;Ethereum(fiveyears).csv&quot;' />
          <member alias='Tether' value='&quot;Tether(fiveyears).csv&quot;' />
          <member alias='XRP' value='&quot;XRP(fiveyears).csv&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='bitcoin(fiveyears)' inline='true' name='federated.146cu550l6pdah1bfylyq1xsxtmd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bitcoin(fiveyears)' name='textscan.1tozeoh1tbdo31108e22t006nqx4'>
            <connection class='textscan' directory='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Data' filename='bitcoin(fiveyears).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='bitcoin(fiveyears).csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' />
            <column datatype='datetime' name='Date' />
            <column datatype='real' name='High' />
            <column datatype='real' name='Low' />
            <column datatype='real' name='Open' />
            <column datatype='real' name='Close' />
            <column datatype='real' name='Volume' />
            <column datatype='real' name='Marketcap' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='bitcoin(fiveyears).csv' table='[bitcoin(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Cardano(fiveyears).csv' table='[Cardano(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Ethereum(fiveyears).csv' table='[Ethereum(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Tether(fiveyears).csv' table='[Tether(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='XRP(fiveyears).csv' table='[XRP(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='bitcoin(fiveyears).csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' />
            <column datatype='datetime' name='Date' />
            <column datatype='real' name='High' />
            <column datatype='real' name='Low' />
            <column datatype='real' name='Open' />
            <column datatype='real' name='Close' />
            <column datatype='real' name='Volume' />
            <column datatype='real' name='Marketcap' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='bitcoin(fiveyears).csv' table='[bitcoin(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Cardano(fiveyears).csv' table='[Cardano(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Ethereum(fiveyears).csv' table='[Ethereum(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Tether(fiveyears).csv' table='[Tether(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='XRP(fiveyears).csv' table='[XRP(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Volume]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketcap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketcap]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Marketcap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='last day of year' datatype='datetime' default-format='*m/d/yyyy' name='[Calculation_237001990502227968]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date]) : MAX([Date]) }' />
      </column>
      <column caption='year end close' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_237001990505455619]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF      [Date] = [Calculation_237001990502227968]&#13;&#10;THEN    [Close]&#13;&#10;END' />
      </column>
      <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Close]' role='measure' type='quantitative' />
      <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Marketcap]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Open]' role='measure' type='quantitative' />
      <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
          <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
          <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
          <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
          <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
        </aliases>
      </column>
      <column datatype='real' name='[Volume]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='bitcoin(fiveyears).csv' datatype='table' name='[__tableau_internal_object_id__].[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]' role='measure' type='quantitative' />
      <column-instance column='[Close]' derivation='Avg' name='[avg:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketcap]' derivation='Avg' name='[avg:Marketcap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Volume]' derivation='Avg' name='[avg:Volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close]' derivation='Median' name='[med:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Volume]' derivation='Sum' name='[pcdf:sum:Volume:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Volume]' derivation='Sum' name='[pcdf:sum:Volume:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Volume]' derivation='Sum' name='[pcdf:sum:Volume:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Close]' derivation='Sum' name='[sum:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketcap]' derivation='Sum' name='[sum:Marketcap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close]' derivation='Var' name='[var:Close:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Marketcap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Marketcap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[var:Close:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Volume:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[med:Close:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[pcdf:sum:Volume:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[pcdf:sum:Volume:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[pcdf:sum:Volume:qk:4]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:Table Name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bitcoin(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;XRP(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tether(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethereum(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cardano(fiveyears).csv&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
            <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
            <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
            <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
            <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='bitcoin(fiveyears).csv' id='bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264'>
            <properties context=''>
              <relation all='true' name='bitcoin(fiveyears).csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' />
                  <column datatype='datetime' name='Date' />
                  <column datatype='real' name='High' />
                  <column datatype='real' name='Low' />
                  <column datatype='real' name='Open' />
                  <column datatype='real' name='Close' />
                  <column datatype='real' name='Volume' />
                  <column datatype='real' name='Marketcap' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='bitcoin(fiveyears).csv' table='[bitcoin(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Cardano(fiveyears).csv' table='[Cardano(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Ethereum(fiveyears).csv' table='[Ethereum(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Tether(fiveyears).csv' table='[Tether(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='XRP(fiveyears).csv' table='[XRP(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='hourly' inline='true' name='federated.0x59u1l0oequig19cc57o1pualhn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='hourly_XRP' name='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz'>
            <connection class='textscan' directory='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Data/Hourly' filename='hourly_XRP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='hourly_BTC.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='time' />
            <column datatype='real' name='high' />
            <column datatype='real' name='low' />
            <column datatype='real' name='open' />
            <column datatype='real' name='volumefrom' />
            <column datatype='real' name='volumeto' />
            <column datatype='real' name='close' />
            <column datatype='string' name='conversionType' />
            <column datatype='string' name='conversionSymbol' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ADA.csv' table='[hourly_ADA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BTC.csv' table='[hourly_BTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BUSD.csv' table='[hourly_BUSD#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_DOGE.csv' table='[hourly_DOGE#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ETH.csv' table='[hourly_ETH#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_LTC.csv' table='[hourly_LTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_USDT.csv' table='[hourly_USDT#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XLM.csv' table='[hourly_XLM#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XMR.csv' table='[hourly_XMR#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XRP.csv' table='[hourly_XRP#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='hourly_BTC.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='time' />
            <column datatype='real' name='high' />
            <column datatype='real' name='low' />
            <column datatype='real' name='open' />
            <column datatype='real' name='volumefrom' />
            <column datatype='real' name='volumeto' />
            <column datatype='real' name='close' />
            <column datatype='string' name='conversionType' />
            <column datatype='string' name='conversionSymbol' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ADA.csv' table='[hourly_ADA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BTC.csv' table='[hourly_BTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BUSD.csv' table='[hourly_BUSD#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_DOGE.csv' table='[hourly_DOGE#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ETH.csv' table='[hourly_ETH#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_LTC.csv' table='[hourly_LTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_USDT.csv' table='[hourly_USDT#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XLM.csv' table='[hourly_XLM#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XMR.csv' table='[hourly_XMR#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XRP.csv' table='[hourly_XRP#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>high</remote-name>
            <remote-type>5</remote-type>
            <local-name>[high]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>high</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[low]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>low</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[open]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>open</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volumefrom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volumefrom]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>volumefrom</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volumeto</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volumeto]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>volumeto</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[close]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>close</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conversionType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conversionType]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>conversionType</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conversionSymbol</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conversionSymbol]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>conversionSymbol</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
      </column>
      <column caption='Volumn diff.' datatype='real' name='[Calculation_927178635438608387]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([volumeto])-SUM([volumefrom])' />
      </column>
      <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
      </column>
      <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([low-day (copy 2)_927178635470815246]) - MIN([Open-day (copy)_927178635465723916])' />
      </column>
      <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([close])-SUM([open])' />
      </column>
      <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
      </column>
      <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
      </column>
      <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
      </column>
      <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
      </column>
      <column caption='Open-day (copy)' datatype='real' name='[Open-day (copy)_927178635471024143]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [time] = &#13;&#10;    { FIXED DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;        MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
          <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
          <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
          <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
          <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
          <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
          <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
          <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
          <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
          <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='hourly_BTC.csv' datatype='table' name='[__tableau_internal_object_id__].[hourly_BTC.csv_213357325BF042829A40664338F2D328]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
      <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
      </column>
      <column caption='low-day (copy)' datatype='real' name='[low-day (copy)_927178635467497485]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MIN([low])}&#13;&#10;&#13;&#10;// THEN    [open]&#13;&#10;// END' />
      </column>
      <column datatype='real' name='[low]' role='measure' type='quantitative' />
      <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
      <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
      <column-instance column='[high]' derivation='Sum' name='[sum:high:qk]' pivot='key' type='quantitative' />
      <column-instance column='[low]' derivation='Sum' name='[sum:low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_927178635438608387]' derivation='User' name='[usr:Calculation_927178635438608387:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:high:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635437637634:qk]&quot;</bucket>
            </map>
            <map to='#cdcecd'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635438608387:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:low:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='BTC' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_BTC.csv&quot;'>
          <calculation class='tableau' formula='&quot;hourly_BTC.csv&quot;' />
          <aliases>
            <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
            <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
            <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
            <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
            <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
            <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
            <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
            <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
            <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
            <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='hourly_BTC.csv' id='hourly_BTC.csv_213357325BF042829A40664338F2D328'>
            <properties context=''>
              <relation all='true' name='hourly_BTC.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='time' />
                  <column datatype='real' name='high' />
                  <column datatype='real' name='low' />
                  <column datatype='real' name='open' />
                  <column datatype='real' name='volumefrom' />
                  <column datatype='real' name='volumeto' />
                  <column datatype='real' name='close' />
                  <column datatype='string' name='conversionType' />
                  <column datatype='string' name='conversionSymbol' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ADA.csv' table='[hourly_ADA#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BTC.csv' table='[hourly_BTC#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BUSD.csv' table='[hourly_BUSD#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_DOGE.csv' table='[hourly_DOGE#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ETH.csv' table='[hourly_ETH#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_LTC.csv' table='[hourly_LTC#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_USDT.csv' table='[hourly_USDT#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XLM.csv' table='[hourly_XLM#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XMR.csv' table='[hourly_XMR#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XRP.csv' table='[hourly_XRP#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Close'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>Close</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bitcoin(fiveyears)' name='federated.146cu550l6pdah1bfylyq1xsxtmd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.146cu550l6pdah1bfylyq1xsxtmd'>
            <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Close]' role='measure' type='quantitative' />
            <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column-instance column='[Close]' derivation='Avg' name='[avg:Close:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_237001990512586757]' derivation='None' name='[none:Calculation_237001990512586757:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]'>
            <groupfilter function='member' level='[none:Calculation_237001990512586757:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]' scope='rows' value=' ' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]' value='124' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Table Name Parameter]' value='Pick a CryptoCurrency' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f5f5f5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk] * [federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk])</rows>
        <cols>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{E73C06DC-8DB5-4463-B2B0-B50FD64BF4F6}' />
    </worksheet>
    <worksheet name='Sheet 4 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='BTC' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_BTC.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_BTC.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='low-day (copy)' datatype='real' name='[low-day (copy)_927178635467497485]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MIN([low])}&#13;&#10;&#13;&#10;// THEN    [open]&#13;&#10;// END' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='None' name='[none:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635460292617]' derivation='None' name='[none:Calculation_927178635460292617:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='None' name='[none:time:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:ok]' pivot='key' type='ordinal' />
            <column-instance column='[low-day (copy)_927178635467497485]' derivation='Sum' name='[sum:low-day (copy)_927178635467497485:ok]' pivot='key' type='ordinal' />
            <column-instance column='[low]' derivation='Sum' name='[sum:low:ok]' pivot='key' type='ordinal' />
            <column-instance column='[open]' derivation='Sum' name='[sum:open:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]' first-period='-8' include-future='true' include-null='false' last-period='0' period-type-v2='day' />
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_927178635434487809:ok]' member='#2022-01-15 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]' value='*m/d/yy' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[none:time:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635460292617:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[sum:open:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[sum:low:ok] / [federated.0x59u1l0oequig19cc57o1pualhn].[sum:low-day (copy)_927178635467497485:ok])))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{F412945B-1351-4CBF-9ECD-EE8A4F286CD4}' />
    </worksheet>
    <worksheet name='Volumn'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>Volumn</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bitcoin(fiveyears)' name='federated.146cu550l6pdah1bfylyq1xsxtmd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.146cu550l6pdah1bfylyq1xsxtmd'>
            <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column-instance column='[Calculation_237001990512586757]' derivation='None' name='[none:Calculation_237001990512586757:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]'>
            <groupfilter function='member' level='[none:Calculation_237001990512586757:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Table Name Parameter]' value='Pick a CryptoCurrency' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f5f5f5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{61033E30-BA93-4F41-B70E-96F9AE0D3D99}' />
    </worksheet>
    <worksheet name='price chart'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='BTC' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_BTC.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_BTC.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([low-day (copy 2)_927178635470815246]) - MIN([Open-day (copy)_927178635465723916])' />
            </column>
            <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([close])-SUM([open])' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='None' name='[none:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635460292617]' derivation='Sum' name='[sum:Calculation_927178635460292617:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635449126917]' derivation='User' name='[usr:Calculation_927178635449126917:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449282566]' derivation='User' name='[usr:Calculation_927178635449282566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]' first-period='-2' include-future='true' include-null='false' last-period='0' period-type-v2='year' />
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_927178635434487809:ok]' member='#2022-01-15 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449126917:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk] + [federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk])</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{A1162680-1D48-447F-B63C-07969159D927}' />
    </worksheet>
    <worksheet name='vol vs price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>Volumn</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bitcoin(fiveyears)' name='federated.146cu550l6pdah1bfylyq1xsxtmd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.146cu550l6pdah1bfylyq1xsxtmd'>
            <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Close]' role='measure' type='quantitative' />
            <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[Volume]' role='measure' type='quantitative' />
            <column-instance column='[Close]' derivation='Avg' name='[avg:Close:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_237001990512586757]' derivation='None' name='[none:Calculation_237001990512586757:nk]' pivot='key' type='nominal' />
            <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]'>
            <groupfilter function='member' level='[none:Calculation_237001990512586757:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' domain-expand='false' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]' field-type='quantitative' fold='true' range-type='independent' scale='log' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]' scope='rows' value=' ' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Table Name Parameter]' value='Pick a CryptoCurrency' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c0c0c0' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c0c0c0' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c0c0c0' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk] + [federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk])</rows>
        <cols>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{4DB5CB71-9E3A-489E-A36C-D8069E85F965}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CryptoCurrency' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98566' id='1' param='vert' removable='false' w='99286' x='357' y='717'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4480' id='3' w='99286' x='357' y='717' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9050' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='99286' x='357' y='5197' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='85036' id='5' paired-zone-id='4' removable='false' w='99286' x='357' y='14247'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Cover' captured-sheet='Cv' id='1' />
                  <story-point captured-sheet='Historical Data' id='2' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{1E49B18B-94DD-4677-86B7-D994E77171CF}' />
    </dashboard>
    <dashboard name='Cv'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_6' value='top' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98566' id='3' param='horz' w='99286' x='357' y='717'>
            <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='98566' id='5' is-centered='0' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/Cryptocurrency-Bitcoin-Blockchian-Dice.jpg' w='99286' x='357' y='717'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='54301' id='6' w='29006' x='46869' y='31631'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='22'>CryptoCurrency Analysis</run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='18'>by</run>
            <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Lavina Jagwani</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jordan Levy</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Robert Yokabaskas</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Yutai Lee</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Richard Barber</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jacqueline Guo</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='28' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='27' param='vert' w='84000' x='8000' y='8000'>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='98566' id='5' is-centered='0' is-fixed='true' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/Cryptocurrency-Bitcoin-Blockchian-Dice.jpg' w='99286' x='357' y='717'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='54301' id='6' w='29006' x='46869' y='31631'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='22'>CryptoCurrency Analysis</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='18'>by</run>
                    <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Lavina Jagwani</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jordan Levy</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Robert Yokabaskas</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Yutai Lee</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Richard Barber</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jacqueline Guo</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EA167222-1082-4CF9-878A-9F19C09FC5C9}' />
    </dashboard>
    <dashboard name='Historical Data'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Times New Roman' />
          <format attr='font-size' value='10' />
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#666666' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-family' value='Times New Roman' />
          <format attr='font-size' value='10' />
          <format attr='color' value='#ffffff' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
            <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
            <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
            <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
            <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
          </aliases>
          <members>
            <member value='&quot;All&quot;' />
            <member alias='Bitcoin' value='&quot;bitcoin(fiveyears).csv&quot;' />
            <member alias='Cardano' value='&quot;Cardano(fiveyears).csv&quot;' />
            <member alias='Ethereum' value='&quot;Ethereum(fiveyears).csv&quot;' />
            <member alias='Tether' value='&quot;Tether(fiveyears).csv&quot;' />
            <member alias='XRP' value='&quot;XRP(fiveyears).csv&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='13' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='100000' id='12' is-centered='0' is-scaled='1' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/background2.jpg' w='100000' x='0' y='0'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='64785' id='3' name='Volumn' w='38536' x='4604' y='15233' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6272' id='4' leg-item-layout='horz' name='Volumn' pane-specification-id='0' param='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]' w='33149' x='34576' y='86380' />
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7796' id='5' mode='compact' param='[Parameters].[Table Name Parameter]' w='20672' x='2808' y='87007'>
          <formatted-text>
            <run fontsize='12'>Pick a Currency</run>
          </formatted-text>
        </zone>
        <zone h='62724' id='9' name='Close' w='33333' x='49217' y='15233' />
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='5556' id='14' w='17772' x='33425' y='2957'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='28'>Crypto Currency </run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='34' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98566' id='33' param='vert' w='99286' x='357' y='717'>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='100000' id='12' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/background2.jpg' w='100000' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='5556' id='14' w='17772' x='33425' y='2957'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='28'>Crypto Currency </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='64785' id='3' is-fixed='true' name='Volumn' w='38536' x='4604' y='15233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6272' id='4' leg-item-layout='horz' name='Volumn' pane-specification-id='0' param='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]' w='33149' x='34576' y='86380'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62724' id='9' is-fixed='true' name='Close' w='33333' x='49217' y='15233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7796' id='5' mode='compact' param='[Parameters].[Table Name Parameter]' w='20672' x='2808' y='87007'>
                  <formatted-text>
                    <run fontsize='12'>Pick a Currency</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F63289C2-25B3-4944-822A-0656BF9A45C2}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='dashboard' name='CryptoCurrency'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F9C75935-F000-4E14-A374-938A8729364D}' />
    </window>
    <window class='dashboard' name='Cv'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{7DF344DA-F95F-455D-B473-B6AE12323DD5}' />
    </window>
    <window class='dashboard' name='Historical Data'>
      <viewpoints>
        <viewpoint name='Close'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Volumn'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D42489CD-0334-49A7-B67D-4D60A2A8981A}' />
    </window>
    <window class='worksheet' name='Volumn'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Table Name Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70AC933F-D15D-4A96-80E5-87A509FE7578}' />
    </window>
    <window class='worksheet' name='vol vs price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Table Name Parameter]' type='parameter' />
            <card pane-specification-id='1' param='[federated.146cu550l6pdah1bfylyq1xsxtmd].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[mn:Date:ok]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:High:qk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:ok]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07B0689D-5529-4951-B09E-567F944F5043}' />
    </window>
    <window class='worksheet' name='Close'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Table Name Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7F3B342-2D0E-4976-B39C-6A176AA5D5B2}' />
    </window>
    <window class='worksheet' maximized='true' name='price chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{301F8E8A-E6E9-4B50-9E89-CB4114C68088}' />
    </window>
    <window class='worksheet' name='Sheet 4 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635460292617:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:time:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635460292617:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[tyr:Calculation_927178635460292617:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BBF3C1A-CBC6-42C3-86B5-A54D59485FBC}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Close' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CryptoCurrency' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAHoUlEQVR4nO3aa3BU9R3G8WeTsGBCyi1hAoYgEQKGuzFQLh1EyIBABVpeqLTaOp0yYyti
      cLSlltLodAodEWmRgtylyKWtEMQqQrgVQriZ0hZNiCQNSZTElCAQQhI2fcGUaWDaAl4YeL6f
      d2f37Dm/OXu++5+d3UBDQ0ODAFNhN3oA4EYiAFgjAFgjAFiLuPyBUxUlevXVRSooPqFeA9P0
      +CPfuO6DV5QVK9giTi2igv9zv9zsrfrd2g06r6aa+Ngk9e/Z+brPCVyLRgE01J/Tj3/0nL49
      eZrSe96pvPyCz3TwHW+uVrvBj2hQctx/3edY7nbNX7NNL8z4haIj6lX2z+rPdE7gWoTPmDFj
      xr83ju7PUmlYBz00ZogCgTDFxsRIktLTpyiyvkoZM5eoVfPTytxTqP69klR7qkRPZ8zTyJR4
      jXv0Ce3bs0PLl69QeOsEBU4WaM6ClTq4P0fvbt+vEfcP087MVcr45WxlZmbqfLCNundJ0NJ5
      L+mhydPVqW20IoLN1KpFtI7s3qQ39h1XSnKiCg9u1Wtb31f/3glKn/JT1Vcd08wlGzW2f0dN
      mbVCJw5v05qtuRraL1kZP3lWq9b9QZt37NfgIUN0Mj9bP5g2U7uyNmvp0qW6LS5JSR3j9Pa6
      JXp+1st6+09v6Y7ufTX92WkaMWaUwgPSnJ8/o5jkgWr9f1Yt3BoarQAVn5QrvkPiFTudLS/S
      P+pGa9Hi2VJ9tV6fPE31E0drT9ZmDRkxWpJ0e1JfzX5+quprPtWkJ5/T2AVz9fDXcy6tAKHq
      Cq3Z/BctXLxEEQ11mvrDJ5Q2bLAqyuvUIT76qoYtL/qr6kY/oMWzvy9VFSr/wC6N/9kLejSl
      m3auX6qkex/UjPu/qt1vvqbMLTka3klK6HaPMqZ+V6eLczVz7X4N7Ral9dnFWrJsmcIDDQqF
      GpSWmqDtBwo0vFeMiqsj1blt1OdwaXEzaPQlOKZNrEpKSq/YKTK2o741Lk0BSYGISA3r2147
      c4u060C+0gb1lCQ1adJEkhTR7CtqfVu46i47xtnKMsUmdlWTsIAC4UF16dhS5VW1iomNUEnp
      6asaNrZjD41LG3Bpu0vK1zQkpZskqbS0TPmH92nhwoV67+jHCg9dnCA6OloBScFgUKFQSJVl
      perSo4/CA5IUUFhYmEaNn6B3N67X4T1ZSh066qpmwa2hUQBJKYNVlL1Jew8fVSh0QR/k5UmS
      AoFAoxeNGj9BG5e/pLCYJEVFXHyuprpaF0Ih5R3aqepgKwUlRUVF6nhxsepraxXVrrMqjuSo
      pKJKJz8u0qGCM0qICWrMuAf0mxdn6ZOqs6o5U6XC4x8pPCxMlZWVqqs9p9zDf7903svn+M/t
      rt2S1LR5G33nse/p4YkTdXf3K1cySWrXOVnvZ2/WR5Wf6kxVhU6erlFkTKLa6oRWvLVPI++9
      5/qvJm46jb4DBMKDGjwgRW+sWqaVq3+vc+HRSu19lwo+LFC/1H6XXtQkspUObPmjhj84SfEx
      zaWaKi1asUZ7d25VfulppT/1pKIjg2ofH68Nry/Whi0HlDZiuPokxeuVX7+sbXsPa9LkpxQf
      00Ix7RMVF1mn385/Re9sz1biXb3UPbmr/rxprda/s0Nx7dqrVVwHJd95uz4sKFZqv5SLQ9TX
      qKDslPr1SZYktevUVeV5OZq/YLEOHSlQjz4patk0pIrqMPXseodCtdUqrqhW6t19ldwpVvPm
      zlHW7vfUt/8gtYgKKjbygg6WhjT2vv5f6huAGytwzf8FqjunvftytHp9ll78VYbCJamqUFPm
      btSc6ZO/kCG/aMXH8rRu5TINmPC4BiZ3uNHj4Et07T+EXTivv31QpKefSb9480tSs5YaOeTm
      /eQ8XnhUve/7Jje/oWtfAYBbCH+FgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgLV/AT2S2IsWJxkTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cv' width='192'>
      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
      fw4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Historical Data' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4 (2)' width='192'>
      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
      TkSuQmCC
    </thumbnail>
    <thumbnail height='91' name='Volumn' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABbCAYAAAAlfYqHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAABTElEQVR4nO3cMY6DQBAAQft0Ef9/66T4CTjxINFVMdIsQWuHwH6f53m+IOrv7gPAnQRA
      mgBIEwBpAiBNAKQJgLTLAGZm4xxwCzcAaQIgTQA/MjNr6+PTZm2+jwBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgLT31R9jzczrOI6t88AqNwBp/9885GeRPNVXAfx6Bdpcs7Zm
      PW3O5qzNOVYg0i4/guHJ3ACkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAm
      ANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIg
      TQCkCYA0AZAmANI+dGtBgG0XKiQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='price chart' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='vol vs price' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
