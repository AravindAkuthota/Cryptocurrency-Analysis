<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20211.21.0320.1853                               -->
<workbook original-version='18.1' source-build='2021.1.0 (20211.21.0320.1853)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <ISO8601PeriodTypes />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <_.fcp.SetMembershipControl.true...SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column alias='ADA' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ADA.csv&quot;'>
        <calculation class='tableau' formula='&quot;hourly_ADA.csv&quot;' />
        <aliases>
          <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
          <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
          <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
          <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
          <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
          <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
          <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
          <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
          <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
          <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
        </aliases>
        <members>
          <member alias='ADA' value='&quot;hourly_ADA.csv&quot;' />
          <member alias='BTC' value='&quot;hourly_BTC.csv&quot;' />
          <member alias='BUSD' value='&quot;hourly_BUSD.csv&quot;' />
          <member alias='DOGE' value='&quot;hourly_DOGE.csv&quot;' />
          <member alias='ETH' value='&quot;hourly_ETH.csv&quot;' />
          <member alias='LTC' value='&quot;hourly_LTC.csv&quot;' />
          <member alias='USDT' value='&quot;hourly_USDT.csv&quot;' />
          <member alias='XLM' value='&quot;hourly_XLM.csv&quot;' />
          <member alias='XMR' value='&quot;hourly_XMR.csv&quot;' />
          <member alias='XRP' value='&quot;hourly_XRP.csv&quot;' />
        </members>
      </column>
      <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
        <calculation class='tableau' formula='&quot;day&quot;' />
        <aliases>
          <alias key='&quot;day&quot;' value='Daily' />
          <alias key='&quot;month&quot;' value='Month' />
          <alias key='&quot;quarter&quot;' value='Quarter' />
          <alias key='&quot;year&quot;' value='Year' />
        </aliases>
        <members>
          <member alias='Daily' value='&quot;day&quot;' />
          <member alias='Month' value='&quot;month&quot;' />
          <member alias='Quarter' value='&quot;quarter&quot;' />
          <member alias='Year' value='&quot;year&quot;' />
        </members>
      </column>
      <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
        <calculation class='tableau' formula='&quot;All&quot;' />
        <aliases>
          <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
          <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
          <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
          <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
          <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
        </aliases>
        <members>
          <member value='&quot;All&quot;' />
          <member alias='Bitcoin' value='&quot;bitcoin(fiveyears).csv&quot;' />
          <member alias='Cardano' value='&quot;Cardano(fiveyears).csv&quot;' />
          <member alias='Ethereum' value='&quot;Ethereum(fiveyears).csv&quot;' />
          <member alias='Tether' value='&quot;Tether(fiveyears).csv&quot;' />
          <member alias='XRP' value='&quot;XRP(fiveyears).csv&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='bitcoin(fiveyears)' inline='true' name='federated.146cu550l6pdah1bfylyq1xsxtmd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='bitcoin(fiveyears)' name='textscan.1tozeoh1tbdo31108e22t006nqx4'>
            <connection class='textscan' directory='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Data' filename='bitcoin(fiveyears).csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='bitcoin(fiveyears).csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' />
            <column datatype='datetime' name='Date' />
            <column datatype='real' name='High' />
            <column datatype='real' name='Low' />
            <column datatype='real' name='Open' />
            <column datatype='real' name='Close' />
            <column datatype='real' name='Volume' />
            <column datatype='real' name='Marketcap' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='bitcoin(fiveyears).csv' table='[bitcoin(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Cardano(fiveyears).csv' table='[Cardano(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Ethereum(fiveyears).csv' table='[Ethereum(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Tether(fiveyears).csv' table='[Tether(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='XRP(fiveyears).csv' table='[XRP(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='bitcoin(fiveyears).csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='F1' />
            <column datatype='datetime' name='Date' />
            <column datatype='real' name='High' />
            <column datatype='real' name='Low' />
            <column datatype='real' name='Open' />
            <column datatype='real' name='Close' />
            <column datatype='real' name='Volume' />
            <column datatype='real' name='Marketcap' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='bitcoin(fiveyears).csv' table='[bitcoin(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Cardano(fiveyears).csv' table='[Cardano(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Ethereum(fiveyears).csv' table='[Ethereum(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Tether(fiveyears).csv' table='[Tether(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
          <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='XRP(fiveyears).csv' table='[XRP(fiveyears)#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='F1' ordinal='0' />
              <column datatype='datetime' name='Date' ordinal='1' />
              <column datatype='real' name='High' ordinal='2' />
              <column datatype='real' name='Low' ordinal='3' />
              <column datatype='real' name='Open' ordinal='4' />
              <column datatype='real' name='Close' ordinal='5' />
              <column datatype='real' name='Volume' ordinal='6' />
              <column datatype='real' name='Marketcap' ordinal='7' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>F1</remote-name>
            <remote-type>20</remote-type>
            <local-name>[F1]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>F1</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Date</remote-name>
            <remote-type>135</remote-type>
            <local-name>[Date]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Date</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>High</remote-name>
            <remote-type>5</remote-type>
            <local-name>[High]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>High</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Low]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Low</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Open]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Open</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Close]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Close</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Volume</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Volume]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Volume</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Marketcap</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Marketcap]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Marketcap</remote-alias>
            <ordinal>7</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[bitcoin(fiveyears).csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='last day of year' datatype='datetime' default-format='*m/d/yyyy' name='[Calculation_237001990502227968]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='{ FIXED YEAR([Date]) : MAX([Date]) }' />
      </column>
      <column caption='year end close' datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Calculation_237001990505455619]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF      [Date] = [Calculation_237001990502227968]&#13;&#10;THEN    [Close]&#13;&#10;END' />
      </column>
      <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
      </column>
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Close]' role='measure' type='quantitative' />
      <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
      <column datatype='real' name='[Marketcap]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Open]' role='measure' type='quantitative' />
      <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
          <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
          <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
          <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
          <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
        </aliases>
      </column>
      <column datatype='real' name='[Volume]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='bitcoin(fiveyears).csv' datatype='table' name='[__tableau_internal_object_id__].[bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264]' role='measure' type='quantitative' />
      <column-instance column='[Close]' derivation='Avg' name='[avg:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketcap]' derivation='Avg' name='[avg:Marketcap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Volume]' derivation='Avg' name='[avg:Volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close]' derivation='Median' name='[med:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Forecast Indicator]' derivation='None' forecast-column-base='[Forecast Indicator]' forecast-column-type='forecast-indicator' name='[none:Forecast Indicator:nk]' pivot='key' type='nominal' />
      <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
      <column-instance column='[Volume]' derivation='Sum' name='[pcdf:sum:Volume:qk:1]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative,Compounded' ordering-field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-2</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Volume]' derivation='Sum' name='[pcdf:sum:Volume:qk:2]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-type='Rows' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Volume]' derivation='Sum' name='[pcdf:sum:Volume:qk:4]' pivot='key' type='quantitative'>
        <table-calc diff-options='Relative' ordering-field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[Date]' ordering-type='Field' type='PctDiff'>
          <address>
            <value>-1</value>
          </address>
        </table-calc>
      </column-instance>
      <column-instance column='[Close]' derivation='Sum' name='[sum:Close:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Marketcap]' derivation='Sum' name='[sum:Marketcap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Close]' derivation='Var' name='[var:Close:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[none:Table Name:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;bitcoin(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;XRP(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Tether(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;Ethereum(fiveyears).csv&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;Cardano(fiveyears).csv&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Marketcap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Marketcap:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[var:Close:qk]&quot;</bucket>
            </map>
            <map to='#bab0ac'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]&quot;</bucket>
            </map>
            <map to='#c85200'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Close:qk]&quot;</bucket>
            </map>
            <map to='#c8d0d9'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Volume:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[med:Close:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[pcdf:sum:Volume:qk:1]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[pcdf:sum:Volume:qk:2]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[pcdf:sum:Volume:qk:4]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]:1&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <default-sorts>
        <manual-sort column='[none:Forecast Indicator:nk]' direction='ASC'>
          <dictionary>
            <bucket>&quot;Actual&quot;</bucket>
            <bucket>&quot;Estimate&quot;</bucket>
          </dictionary>
        </manual-sort>
      </default-sorts>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
            <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
            <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
            <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
            <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='bitcoin(fiveyears).csv' id='bitcoin(fiveyears).csv_2575A2B7108449499FC69A60C7AA0264'>
            <properties context=''>
              <relation all='true' name='bitcoin(fiveyears).csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='F1' />
                  <column datatype='datetime' name='Date' />
                  <column datatype='real' name='High' />
                  <column datatype='real' name='Low' />
                  <column datatype='real' name='Open' />
                  <column datatype='real' name='Close' />
                  <column datatype='real' name='Volume' />
                  <column datatype='real' name='Marketcap' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='bitcoin(fiveyears).csv' table='[bitcoin(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Cardano(fiveyears).csv' table='[Cardano(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Ethereum(fiveyears).csv' table='[Ethereum(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='Tether(fiveyears).csv' table='[Tether(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
                <relation connection='textscan.1tozeoh1tbdo31108e22t006nqx4' name='XRP(fiveyears).csv' table='[XRP(fiveyears)#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='F1' ordinal='0' />
                    <column datatype='datetime' name='Date' ordinal='1' />
                    <column datatype='real' name='High' ordinal='2' />
                    <column datatype='real' name='Low' ordinal='3' />
                    <column datatype='real' name='Open' ordinal='4' />
                    <column datatype='real' name='Close' ordinal='5' />
                    <column datatype='real' name='Volume' ordinal='6' />
                    <column datatype='real' name='Marketcap' ordinal='7' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
    <datasource caption='hourly' inline='true' name='federated.0x59u1l0oequig19cc57o1pualhn' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='hourly_XRP' name='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz'>
            <connection class='textscan' directory='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Data/Hourly' filename='hourly_XRP.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation all='true' name='hourly_BTC.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='time' />
            <column datatype='real' name='high' />
            <column datatype='real' name='low' />
            <column datatype='real' name='open' />
            <column datatype='real' name='volumefrom' />
            <column datatype='real' name='volumeto' />
            <column datatype='real' name='close' />
            <column datatype='string' name='conversionType' />
            <column datatype='string' name='conversionSymbol' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ADA.csv' table='[hourly_ADA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BTC.csv' table='[hourly_BTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BUSD.csv' table='[hourly_BUSD#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_DOGE.csv' table='[hourly_DOGE#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ETH.csv' table='[hourly_ETH#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_LTC.csv' table='[hourly_LTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_USDT.csv' table='[hourly_USDT#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XLM.csv' table='[hourly_XLM#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XMR.csv' table='[hourly_XMR#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XRP.csv' table='[hourly_XRP#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation all='true' name='hourly_BTC.csv+' type='union'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='integer' name='time' />
            <column datatype='real' name='high' />
            <column datatype='real' name='low' />
            <column datatype='real' name='open' />
            <column datatype='real' name='volumefrom' />
            <column datatype='real' name='volumeto' />
            <column datatype='real' name='close' />
            <column datatype='string' name='conversionType' />
            <column datatype='string' name='conversionSymbol' />
            <column datatype='string' name='Table Name' />
          </columns>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ADA.csv' table='[hourly_ADA#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BTC.csv' table='[hourly_BTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BUSD.csv' table='[hourly_BUSD#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_DOGE.csv' table='[hourly_DOGE#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ETH.csv' table='[hourly_ETH#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_LTC.csv' table='[hourly_LTC#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_USDT.csv' table='[hourly_USDT#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XLM.csv' table='[hourly_XLM#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XMR.csv' table='[hourly_XMR#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
          <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XRP.csv' table='[hourly_XRP#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='integer' name='time' ordinal='0' />
              <column datatype='real' name='high' ordinal='1' />
              <column datatype='real' name='low' ordinal='2' />
              <column datatype='real' name='open' ordinal='3' />
              <column datatype='real' name='volumefrom' ordinal='4' />
              <column datatype='real' name='volumeto' ordinal='5' />
              <column datatype='real' name='close' ordinal='6' />
              <column datatype='string' name='conversionType' ordinal='7' />
              <column datatype='string' name='conversionSymbol' ordinal='8' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>time</remote-name>
            <remote-type>20</remote-type>
            <local-name>[time]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>time</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>high</remote-name>
            <remote-type>5</remote-type>
            <local-name>[high]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>high</remote-alias>
            <ordinal>1</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>low</remote-name>
            <remote-type>5</remote-type>
            <local-name>[low]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>low</remote-alias>
            <ordinal>2</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>open</remote-name>
            <remote-type>5</remote-type>
            <local-name>[open]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>open</remote-alias>
            <ordinal>3</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volumefrom</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volumefrom]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>volumefrom</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>volumeto</remote-name>
            <remote-type>5</remote-type>
            <local-name>[volumeto]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>volumeto</remote-alias>
            <ordinal>5</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>close</remote-name>
            <remote-type>5</remote-type>
            <local-name>[close]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>close</remote-alias>
            <ordinal>6</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conversionType</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conversionType]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>conversionType</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>conversionSymbol</remote-name>
            <remote-type>129</remote-type>
            <local-name>[conversionSymbol]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>conversionSymbol</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Table Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Table Name]</local-name>
            <parent-name>[hourly_BTC.csv+]</parent-name>
            <remote-alias>Table Name</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[hourly_BTC.csv_213357325BF042829A40664338F2D328]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
        <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
      </column>
      <column caption='Volumn diff.' datatype='real' name='[Calculation_927178635438608387]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([volumeto])-SUM([volumefrom])' />
      </column>
      <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
      </column>
      <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='MAX([low-day (copy 2)_927178635470815246]) - MIN([Open-day (copy)_927178635465723916])' />
      </column>
      <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='SUM([close])-SUM([open])' />
      </column>
      <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
      </column>
      <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
      </column>
      <column caption='date range for chart' datatype='boolean' name='[Calculation_927178636136554512]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Parameters].[Parameter 2] =&apos;day&apos;&#13;&#10;THEN   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=30&#13;&#10;ELSE&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=10&#13;&#10;END' />
      </column>
      <column caption='choose date range' datatype='string' name='[Calculation_927178636140728337]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
      </column>
      <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
      </column>
      <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
      </column>
      <column caption='Open-day (copy)' datatype='real' name='[Open-day (copy)_927178635471024143]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [time] = &#13;&#10;    { FIXED DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;        MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
      </column>
      <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
        <aliases>
          <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
          <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
          <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
          <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
          <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
          <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
          <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
          <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
          <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
          <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
        </aliases>
      </column>
      <_.fcp.ObjectModelTableType.true...column caption='hourly_BTC.csv' datatype='table' name='[__tableau_internal_object_id__].[hourly_BTC.csv_213357325BF042829A40664338F2D328]' role='measure' type='quantitative' />
      <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
      <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
      </column>
      <column caption='low-day (copy)' datatype='real' name='[low-day (copy)_927178635467497485]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MIN([low])}&#13;&#10;&#13;&#10;// THEN    [open]&#13;&#10;// END' />
      </column>
      <column datatype='real' name='[low]' role='measure' type='quantitative' />
      <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
      <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
      <column-instance column='[high]' derivation='Sum' name='[sum:high:qk]' pivot='key' type='quantitative' />
      <column-instance column='[low]' derivation='Sum' name='[sum:low:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_927178635438608387]' derivation='User' name='[usr:Calculation_927178635438608387:qk]' pivot='key' type='quantitative' />
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:high:qk]&quot;</bucket>
            </map>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635437637634:qk]&quot;</bucket>
            </map>
            <map to='#cdcecd'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635438608387:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:low:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column alias='ADA' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ADA.csv&quot;'>
          <calculation class='tableau' formula='&quot;hourly_ADA.csv&quot;' />
          <aliases>
            <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
            <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
            <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
            <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
            <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
            <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
            <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
            <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
            <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
            <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
          </aliases>
        </column>
        <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
          <aliases>
            <alias key='&quot;day&quot;' value='Daily' />
            <alias key='&quot;month&quot;' value='Month' />
            <alias key='&quot;quarter&quot;' value='Quarter' />
            <alias key='&quot;year&quot;' value='Year' />
          </aliases>
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='hourly_BTC.csv' id='hourly_BTC.csv_213357325BF042829A40664338F2D328'>
            <properties context=''>
              <relation all='true' name='hourly_BTC.csv+' type='union'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='integer' name='time' />
                  <column datatype='real' name='high' />
                  <column datatype='real' name='low' />
                  <column datatype='real' name='open' />
                  <column datatype='real' name='volumefrom' />
                  <column datatype='real' name='volumeto' />
                  <column datatype='real' name='close' />
                  <column datatype='string' name='conversionType' />
                  <column datatype='string' name='conversionSymbol' />
                  <column datatype='string' name='Table Name' />
                </columns>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ADA.csv' table='[hourly_ADA#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BTC.csv' table='[hourly_BTC#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_BUSD.csv' table='[hourly_BUSD#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_DOGE.csv' table='[hourly_DOGE#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_ETH.csv' table='[hourly_ETH#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_LTC.csv' table='[hourly_LTC#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_USDT.csv' table='[hourly_USDT#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XLM.csv' table='[hourly_XLM#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XMR.csv' table='[hourly_XMR#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
                <relation connection='textscan.1dj1ek81ul2hxy0zswvsi0pqjahz' name='hourly_XRP.csv' table='[hourly_XRP#csv]' type='table'>
                  <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                    <column datatype='integer' name='time' ordinal='0' />
                    <column datatype='real' name='high' ordinal='1' />
                    <column datatype='real' name='low' ordinal='2' />
                    <column datatype='real' name='open' ordinal='3' />
                    <column datatype='real' name='volumefrom' ordinal='4' />
                    <column datatype='real' name='volumeto' ordinal='5' />
                    <column datatype='real' name='close' ordinal='6' />
                    <column datatype='string' name='conversionType' ordinal='7' />
                    <column datatype='string' name='conversionSymbol' ordinal='8' />
                  </columns>
                </relation>
              </relation>
            </properties>
          </object>
        </objects>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Close'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>Close</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bitcoin(fiveyears)' name='federated.146cu550l6pdah1bfylyq1xsxtmd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.146cu550l6pdah1bfylyq1xsxtmd'>
            <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[Close]' role='measure' type='quantitative' />
            <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column-instance column='[Close]' derivation='Avg' name='[avg:Close:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_237001990512586757]' derivation='None' name='[none:Calculation_237001990512586757:nk]' pivot='key' type='nominal' />
            <column-instance column='[Table Name]' derivation='None' name='[none:Table Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]'>
            <groupfilter function='member' level='[none:Calculation_237001990512586757:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]' field-type='quantitative' range-type='independent' scope='rows' type='space' />
            <format attr='title' class='0' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk]' scope='rows' value=' ' />
          </style-rule>
          <style-rule element='header'>
            <format attr='width' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]' value='124' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Table Name Parameter]' value='Pick a CryptoCurrency' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f5f5f5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk] * [federated.146cu550l6pdah1bfylyq1xsxtmd].[avg:Close:qk])</rows>
        <cols>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{E73C06DC-8DB5-4463-B2B0-B50FD64BF4F6}' />
    </worksheet>
    <worksheet name='Sheet 4 (2)'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ADA' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ADA.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ADA.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;quarter&quot;' value='Quarter' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='low-day (copy)' datatype='real' name='[low-day (copy)_927178635467497485]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC(&apos;day&apos;,[Calculation_927178635434487809]): &#13;&#10;MIN([low])}&#13;&#10;&#13;&#10;// THEN    [open]&#13;&#10;// END' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='None' name='[none:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635460292617]' derivation='None' name='[none:Calculation_927178635460292617:ok]' pivot='key' type='ordinal' />
            <column-instance column='[time]' derivation='None' name='[none:time:ok]' pivot='key' type='ordinal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:ok]' pivot='key' type='ordinal' />
            <column-instance column='[low-day (copy)_927178635467497485]' derivation='Sum' name='[sum:low-day (copy)_927178635467497485:ok]' pivot='key' type='ordinal' />
            <column-instance column='[low]' derivation='Sum' name='[sum:low:ok]' pivot='key' type='ordinal' />
            <column-instance column='[open]' derivation='Sum' name='[sum:open:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='relative-date' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]' first-period='-8' include-future='true' include-null='false' last-period='0' period-type-v2='day' />
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_927178635434487809:ok]' member='#2022-01-15 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='label'>
            <format attr='text-format' field='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]' value='*m/d/yy' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[none:time:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635460292617:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[sum:open:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:ok] / ([federated.0x59u1l0oequig19cc57o1pualhn].[sum:low:ok] / [federated.0x59u1l0oequig19cc57o1pualhn].[sum:low-day (copy)_927178635467497485:ok])))))))</rows>
        <cols />
      </table>
      <simple-id uuid='{F412945B-1351-4CBF-9ECD-EE8A4F286CD4}' />
    </worksheet>
    <worksheet name='Volumn'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>Volumn</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bitcoin(fiveyears)' name='federated.146cu550l6pdah1bfylyq1xsxtmd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.146cu550l6pdah1bfylyq1xsxtmd'>
            <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column-instance column='[Calculation_237001990512586757]' derivation='None' name='[none:Calculation_237001990512586757:nk]' pivot='key' type='nominal' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]'>
            <groupfilter function='member' level='[none:Calculation_237001990512586757:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#ffffff' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Table Name Parameter]' value='Pick a CryptoCurrency' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#f5f5f5' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{61033E30-BA93-4F41-B70E-96F9AE0D3D99}' />
    </worksheet>
    <worksheet name='price chart-day'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ADA' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ADA.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ADA.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;quarter&quot;' value='Quarter' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([low-day (copy 2)_927178635470815246]) - MIN([Open-day (copy)_927178635465723916])' />
            </column>
            <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([close])-SUM([open])' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='date range for chart' datatype='boolean' name='[Calculation_927178636136554512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] =&apos;day&apos;&#13;&#10;THEN   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=30&#13;&#10;ELSE&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=10&#13;&#10;END' />
            </column>
            <column caption='choose date range' datatype='string' name='[Calculation_927178636140728337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636136554512]' derivation='None' name='[none:Calculation_927178636136554512:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636140728337]' derivation='None' name='[none:Calculation_927178636140728337:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635460292617]' derivation='Sum' name='[sum:Calculation_927178635460292617:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635449126917]' derivation='User' name='[usr:Calculation_927178635449126917:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449282566]' derivation='User' name='[usr:Calculation_927178635449282566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636136554512:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636140728337:nk]' member='&quot;day&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_927178635434487809:ok]' member='#2022-01-15 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449126917:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk] + [federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk])</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{A1162680-1D48-447F-B63C-07969159D927}' />
    </worksheet>
    <worksheet name='price chart-month'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ADA' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ADA.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ADA.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;quarter&quot;' value='Quarter' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([low-day (copy 2)_927178635470815246]) - MIN([Open-day (copy)_927178635465723916])' />
            </column>
            <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([close])-SUM([open])' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='date range for chart' datatype='boolean' name='[Calculation_927178636136554512]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 2] =&apos;day&apos;&#13;&#10;THEN   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=30&#13;&#10;ELSE&#13;&#10;   &#13;&#10;    DATEDIFF(&#13;&#10;        [Parameters].[Parameter 2],DATETRUNC([Parameters].[Parameter 2], [Calculation_927178635434487809]),&#13;&#10;        { FIXED : DATETRUNC([Parameters].[Parameter 2], MAX([Calculation_927178635434487809]))}&#13;&#10;    )&lt;=10&#13;&#10;END' />
            </column>
            <column caption='choose date range' datatype='string' name='[Calculation_927178636140728337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636136554512]' derivation='None' name='[none:Calculation_927178636136554512:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636140728337]' derivation='None' name='[none:Calculation_927178636140728337:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635460292617]' derivation='Sum' name='[sum:Calculation_927178635460292617:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Month-Trunc' name='[tmn:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449126917]' derivation='User' name='[usr:Calculation_927178635449126917:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449282566]' derivation='User' name='[usr:Calculation_927178635449282566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636136554512:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636140728337:nk]' member='&quot;month&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449126917:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk] + [federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk])</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tmn:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{3500CB59-A1AE-4DC1-AE09-E67358AE0863}' />
    </worksheet>
    <worksheet name='price chart-quarter'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ADA' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ADA.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ADA.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;quarter&quot;' value='Quarter' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([low-day (copy 2)_927178635470815246]) - MIN([Open-day (copy)_927178635465723916])' />
            </column>
            <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([close])-SUM([open])' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='choose date range' datatype='string' name='[Calculation_927178636140728337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636140728337]' derivation='None' name='[none:Calculation_927178636140728337:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635460292617]' derivation='Sum' name='[sum:Calculation_927178635460292617:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Quarter-Trunc' name='[tqr:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449126917]' derivation='User' name='[usr:Calculation_927178635449126917:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449282566]' derivation='User' name='[usr:Calculation_927178635449282566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636140728337:nk]' member='&quot;quarter&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_927178635434487809:ok]' member='#2022-01-15 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449126917:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk] + [federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk])</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tqr:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{60472D8B-A64B-401F-8683-256975493521}' />
    </worksheet>
    <worksheet name='price chart-year'>
      <table>
        <view>
          <datasources>
            <datasource caption='hourly' name='federated.0x59u1l0oequig19cc57o1pualhn' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column alias='ADA' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ADA.csv&quot;'>
              <calculation class='tableau' formula='&quot;hourly_ADA.csv&quot;' />
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
              <calculation class='tableau' formula='&quot;day&quot;' />
              <aliases>
                <alias key='&quot;day&quot;' value='Daily' />
                <alias key='&quot;month&quot;' value='Month' />
                <alias key='&quot;quarter&quot;' value='Quarter' />
                <alias key='&quot;year&quot;' value='Year' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.0x59u1l0oequig19cc57o1pualhn'>
            <column caption='date conversion' datatype='date' datatype-customized='true' name='[Calculation_927178635434487809]' role='dimension' type='ordinal'>
              <calculation class='tableau' formula='DATE(([time]/86400)+25569+(-5/24))' />
            </column>
            <column caption='Choose Coin' datatype='boolean' name='[Calculation_927178635440603140]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Parameter 1] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column caption='High Low' datatype='real' name='[Calculation_927178635449126917]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='MAX([low-day (copy 2)_927178635470815246]) - MIN([Open-day (copy)_927178635465723916])' />
            </column>
            <column caption='Open Close' datatype='real' name='[Calculation_927178635449282566]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='SUM([close])-SUM([open])' />
            </column>
            <column caption='high low clean up' datatype='boolean' name='[Calculation_927178635454840839]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [high] &gt;= [low]&#13;&#10;AND [high]&gt;= [open]&#13;&#10;AND [high]&gt;= [close]&#13;&#10;AND  [low]&lt;= [open]&#13;&#10;AND     [low]&lt;=[close]&#13;&#10;THEN    TRUE&#13;&#10;ELSE    FALSE&#13;&#10;END' />
            </column>
            <column caption='Open-day' datatype='real' name='[Calculation_927178635460292617]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] = { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): MIN([time])}&#13;&#10;THEN    [open]&#13;&#10;END' />
            </column>
            <column caption='choose date range' datatype='string' name='[Calculation_927178636140728337]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='[Parameters].[Parameter 2]' />
            </column>
            <column caption='close-day' datatype='real' name='[Open-day (copy)_927178635464036362]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [time] &#13;&#10;    = &#13;&#10;    { FIXED DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;        MAX([time])}&#13;&#10;THEN    [close]&#13;&#10;END' />
            </column>
            <column caption='low-day' datatype='real' name='[Open-day (copy)_927178635465723916]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MIN([low])}' />
            </column>
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
                <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
                <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
                <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
                <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
                <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
                <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
                <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
                <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
                <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[close]' role='measure' type='quantitative' />
            <column datatype='real' default-format='n#,##0.00;-#,##0.00' name='[high]' role='measure' type='quantitative' />
            <column caption='high-day' datatype='real' name='[low-day (copy 2)_927178635470815246]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='{ FIXED [Table Name], DATETRUNC([Parameters].[Parameter 2],[Calculation_927178635434487809]): &#13;&#10;MAX([high])}' />
            </column>
            <column datatype='real' name='[low]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635440603140]' derivation='None' name='[none:Calculation_927178635440603140:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178635454840839]' derivation='None' name='[none:Calculation_927178635454840839:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_927178636140728337]' derivation='None' name='[none:Calculation_927178636140728337:nk]' pivot='key' type='nominal' />
            <column datatype='real' name='[open]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_927178635460292617]' derivation='Sum' name='[sum:Calculation_927178635460292617:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635464036362]' derivation='Sum' name='[sum:Open-day (copy)_927178635464036362:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Open-day (copy)_927178635465723916]' derivation='Sum' name='[sum:Open-day (copy)_927178635465723916:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Day-Trunc' name='[tdy:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
            <column datatype='integer' name='[time]' role='dimension' type='ordinal' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year-Trunc' name='[tyr:Calculation_927178635434487809:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449126917]' derivation='User' name='[usr:Calculation_927178635449126917:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635449282566]' derivation='User' name='[usr:Calculation_927178635449282566:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_927178635434487809]' derivation='Year' name='[yr:Calculation_927178635434487809:ok]' pivot='key' type='ordinal' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635440603140:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178635454840839:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]'>
            <groupfilter function='member' level='[none:Calculation_927178636140728337:nk]' member='&quot;year&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]'>
            <groupfilter function='except' user:ui-domain='database' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[tdy:Calculation_927178635434487809:ok]' />
              <groupfilter function='member' level='[tdy:Calculation_927178635434487809:ok]' member='#2022-01-15 00:00:00#' />
            </groupfilter>
          </filter>
          <filter class='categorical' column='[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2017' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2018' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2019' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2020' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2021' />
              <groupfilter function='member' level='[yr:Calculation_927178635434487809:ok]' member='2022' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</column>
            <column>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <encoding attr='space' class='0' domain-expand='false' field='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]' field-type='quantitative' scope='rows' type='space' />
          </style-rule>
          <style-rule element='mark'>
            <encoding attr='color' center='0.0' field='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' num-steps='2' palette='red_green_diverging_10_0' type='interpolated' />
          </style-rule>
          <style-rule element='table'>
            <format attr='show-null-value-warning' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.2523757219314575' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <color column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635464036362:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='GanttBar' />
            <mark-sizing mark-sizing-setting='marks-scaling-off' />
            <encodings>
              <size column='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449126917:qk]' />
              <lod column='[federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='size' value='0.0099999997764825821' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0x59u1l0oequig19cc57o1pualhn].[sum:Calculation_927178635460292617:qk] + [federated.0x59u1l0oequig19cc57o1pualhn].[sum:Open-day (copy)_927178635465723916:qk])</rows>
        <cols>[federated.0x59u1l0oequig19cc57o1pualhn].[tyr:Calculation_927178635434487809:qk]</cols>
      </table>
      <simple-id uuid='{4275BB6F-868F-4342-AAAD-70EF9FC86017}' />
    </worksheet>
    <worksheet name='vol vs price'>
      <layout-options>
        <title>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman'>Volumn</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='bitcoin(fiveyears)' name='federated.146cu550l6pdah1bfylyq1xsxtmd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
              <calculation class='tableau' formula='&quot;All&quot;' />
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.146cu550l6pdah1bfylyq1xsxtmd'>
            <column caption='Choose Currency' datatype='boolean' name='[Calculation_237001990512586757]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Parameters].[Table Name Parameter] = &quot;All&quot;&#13;&#10;THEN    TRUE&#13;&#10;ELSEIF  [Parameters].[Table Name Parameter] = [Table Name]&#13;&#10;THEN    TRUE&#13;&#10;END' />
            </column>
            <column datatype='datetime' default-format='*m/d/yyyy' name='[Date]' role='dimension' type='ordinal' />
            <column datatype='string' name='[Table Name]' role='dimension' type='nominal'>
              <aliases>
                <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
                <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
                <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
                <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
                <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
              </aliases>
            </column>
            <column datatype='real' name='[Volume]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_237001990512586757]' derivation='None' name='[none:Calculation_237001990512586757:nk]' pivot='key' type='nominal' />
            <column-instance column='[Volume]' derivation='Sum' name='[sum:Volume:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Date]' derivation='Month-Trunc' name='[tmn:Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]'>
            <groupfilter function='member' level='[none:Calculation_237001990512586757:nk]' member='true' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]' scope='rows' value=' ' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
            <format attr='font-family' value='Times New Roman' />
            <format attr='font-size' value='10' />
            <format attr='font-weight' value='bold' />
            <format attr='color' value='#1b1b1b' />
          </style-rule>
          <style-rule element='parameter-ctrl'>
            <format attr='title' field='[Parameters].[Table Name Parameter]' value='Pick a CryptoCurrency' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c0c0c0' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='2' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c0c0c0' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk]' y-index='1'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <mark-sizing custom-mark-size-in-axis-units='1.0' mark-alignment='mark-alignment-left' mark-sizing-setting='marks-scaling-on' use-custom-mark-size='false' />
            <encodings>
              <color column='[federated.146cu550l6pdah1bfylyq1xsxtmd].[:Measure Names]' />
            </encodings>
            <style>
              <style-rule element='mark'>
                <format attr='mark-color' value='#c0c0c0' />
                <format attr='size' value='1.9890055656433105' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk] + [federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:Volume:qk])</rows>
        <cols>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:qk]</cols>
      </table>
      <simple-id uuid='{4DB5CB71-9E3A-489E-A36C-D8069E85F965}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard name='CryptoCurrency' type='storyboard'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='2' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98566' id='1' param='vert' removable='false' w='99286' x='357' y='717'>
            <zone _.fcp.SetMembershipControl.false...type='title' _.fcp.SetMembershipControl.true...type-v2='title' h='4480' id='3' w='99286' x='357' y='717' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard-nav' _.fcp.SetMembershipControl.true...type-v2='flipboard-nav' h='9050' id='4' is-fixed='true' paired-zone-id='5' removable='false' w='99286' x='357' y='5197' />
            <zone _.fcp.SetMembershipControl.false...type='flipboard' _.fcp.SetMembershipControl.true...type-v2='flipboard' h='85036' id='5' paired-zone-id='4' removable='false' w='99286' x='357' y='14247'>
              <flipboard active-id='2' nav-type='caption' show-nav-arrows='true'>
                <story-points>
                  <story-point caption='Cover' captured-sheet='Cv' id='1' />
                  <story-point captured-sheet='Historical Data' id='2' />
                </story-points>
              </flipboard>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <simple-id uuid='{1E49B18B-94DD-4677-86B7-D994E77171CF}' />
    </dashboard>
    <dashboard name='Cv'>
      <style>
        <style-rule element='dash-text'>
          <format attr='vertical-align' id='dash-text_6' value='top' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98566' id='3' param='horz' w='99286' x='357' y='717'>
            <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='98566' id='5' is-centered='0' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/Cryptocurrency-Bitcoin-Blockchian-Dice.jpg' w='99286' x='357' y='717'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='54301' id='6' w='29006' x='46869' y='31631'>
          <formatted-text>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='22'>CryptoCurrency Analysis</run>
            <run fontalignment='1'>Æ&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='18'>by</run>
            <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Lavina Jagwani</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jordan Levy</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Robert Yokabaskas</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Yutai Lee</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Richard Barber</run>
            <run fontalignment='1'>Æ&#10;</run>
            <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jacqueline Guo</run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='36' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='84000' id='35' param='vert' w='84000' x='8000' y='8000'>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='98566' id='5' is-centered='0' is-fixed='true' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/Cryptocurrency-Bitcoin-Blockchian-Dice.jpg' w='99286' x='357' y='717'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' forceUpdate='true' h='54301' id='6' w='29006' x='46869' y='31631'>
                  <formatted-text>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='22'>CryptoCurrency Analysis</run>
                    <run fontalignment='1'>Æ&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='18'>by</run>
                    <run fontalignment='1'>Æ&#10;&#10;&#10;&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Lavina Jagwani</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jordan Levy</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Robert Yokabaskas</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Yutai Lee</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Richard Barber</run>
                    <run fontalignment='1'>Æ&#10;</run>
                    <run bold='true' fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='17'>Jacqueline Guo</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{EA167222-1082-4CF9-878A-9F19C09FC5C9}' />
    </dashboard>
    <dashboard name='Historical Data'>
      <style>
        <style-rule element='parameter-ctrl'>
          <format attr='font-family' value='Times New Roman' />
          <format attr='font-size' value='10' />
          <format attr='font-weight' value='bold' />
          <format attr='color' value='#666666' />
        </style-rule>
        <style-rule element='parameter-ctrl-title'>
          <format attr='font-family' value='Times New Roman' />
          <format attr='font-size' value='10' />
          <format attr='color' value='#ffffff' />
          <format attr='font-weight' value='bold' />
        </style-rule>
      </style>
      <size sizing-mode='automatic' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Crypto Parameter' datatype='string' name='[Table Name Parameter]' param-domain-type='list' role='measure' type='nominal' value='&quot;All&quot;'>
          <calculation class='tableau' formula='&quot;All&quot;' />
          <aliases>
            <alias key='&quot;bitcoin(fiveyears).csv&quot;' value='Bitcoin' />
            <alias key='&quot;Cardano(fiveyears).csv&quot;' value='Cardano' />
            <alias key='&quot;Ethereum(fiveyears).csv&quot;' value='Ethereum' />
            <alias key='&quot;Tether(fiveyears).csv&quot;' value='Tether' />
            <alias key='&quot;XRP(fiveyears).csv&quot;' value='XRP' />
          </aliases>
          <members>
            <member value='&quot;All&quot;' />
            <member alias='Bitcoin' value='&quot;bitcoin(fiveyears).csv&quot;' />
            <member alias='Cardano' value='&quot;Cardano(fiveyears).csv&quot;' />
            <member alias='Ethereum' value='&quot;Ethereum(fiveyears).csv&quot;' />
            <member alias='Tether' value='&quot;Tether(fiveyears).csv&quot;' />
            <member alias='XRP' value='&quot;XRP(fiveyears).csv&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='13' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' h='100000' id='12' is-centered='0' is-scaled='1' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/background2.jpg' w='100000' x='0' y='0'>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='margin' value='4' />
            </zone-style>
          </zone>
        </zone>
        <zone h='64785' id='3' name='Volumn' w='38536' x='4604' y='15233' />
        <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6272' id='4' leg-item-layout='horz' name='Volumn' pane-specification-id='0' param='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]' w='33149' x='34576' y='86380' />
        <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7796' id='5' mode='compact' param='[Parameters].[Table Name Parameter]' w='20672' x='2808' y='87007'>
          <formatted-text>
            <run fontsize='12'>Pick a Currency</run>
          </formatted-text>
        </zone>
        <zone h='62724' id='9' name='Close' w='33333' x='49217' y='15233' />
        <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='5556' id='14' w='17772' x='33425' y='2957'>
          <formatted-text>
            <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='28'>Crypto Currency </run>
          </formatted-text>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1100' minheight='1100' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='42' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98566' id='41' param='vert' w='99286' x='357' y='717'>
                <zone _.fcp.SetMembershipControl.false...type='bitmap' _.fcp.SetMembershipControl.true...type-v2='bitmap' fixed-size='280' h='100000' id='12' is-centered='0' is-fixed='true' is-scaled='1' param='C:/Users/lovel/OneDrive/Desktop/Classwork-JG/Team Project/team project github/Cryptocurrency-Analysis/Images/background2.jpg' w='100000' x='0' y='0'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='text' _.fcp.SetMembershipControl.true...type-v2='text' h='5556' id='14' w='17772' x='33425' y='2957'>
                  <formatted-text>
                    <run fontalignment='1' fontcolor='#ffffff' fontname='Times New Roman' fontsize='28'>Crypto Currency </run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='64785' id='3' is-fixed='true' name='Volumn' w='38536' x='4604' y='15233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='6272' id='4' leg-item-layout='horz' name='Volumn' pane-specification-id='0' param='[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]' w='33149' x='34576' y='86380'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='62724' id='9' is-fixed='true' name='Close' w='33333' x='49217' y='15233'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7796' id='5' mode='compact' param='[Parameters].[Table Name Parameter]' w='20672' x='2808' y='87007'>
                  <formatted-text>
                    <run fontsize='12'>Pick a Currency</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{F63289C2-25B3-4944-822A-0656BF9A45C2}' />
    </dashboard>
    <dashboard name='price chart'>
      <style />
      <size maxheight='800' maxwidth='1000' minheight='800' minwidth='1000' />
      <datasources>
        <datasource name='Parameters' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column alias='ADA' caption='Coin List Parameter' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;hourly_ADA.csv&quot;'>
          <calculation class='tableau' formula='&quot;hourly_ADA.csv&quot;' />
          <aliases>
            <alias key='&quot;hourly_ADA.csv&quot;' value='ADA' />
            <alias key='&quot;hourly_BTC.csv&quot;' value='BTC' />
            <alias key='&quot;hourly_BUSD.csv&quot;' value='BUSD' />
            <alias key='&quot;hourly_DOGE.csv&quot;' value='DOGE' />
            <alias key='&quot;hourly_ETH.csv&quot;' value='ETH' />
            <alias key='&quot;hourly_LTC.csv&quot;' value='LTC' />
            <alias key='&quot;hourly_USDT.csv&quot;' value='USDT' />
            <alias key='&quot;hourly_XLM.csv&quot;' value='XLM' />
            <alias key='&quot;hourly_XMR.csv&quot;' value='XMR' />
            <alias key='&quot;hourly_XRP.csv&quot;' value='XRP' />
          </aliases>
          <members>
            <member alias='ADA' value='&quot;hourly_ADA.csv&quot;' />
            <member alias='BTC' value='&quot;hourly_BTC.csv&quot;' />
            <member alias='BUSD' value='&quot;hourly_BUSD.csv&quot;' />
            <member alias='DOGE' value='&quot;hourly_DOGE.csv&quot;' />
            <member alias='ETH' value='&quot;hourly_ETH.csv&quot;' />
            <member alias='LTC' value='&quot;hourly_LTC.csv&quot;' />
            <member alias='USDT' value='&quot;hourly_USDT.csv&quot;' />
            <member alias='XLM' value='&quot;hourly_XLM.csv&quot;' />
            <member alias='XMR' value='&quot;hourly_XMR.csv&quot;' />
            <member alias='XRP' value='&quot;hourly_XRP.csv&quot;' />
          </members>
        </column>
        <column alias='Daily' caption='Date Range' datatype='string' name='[Parameter 2]' param-domain-type='list' role='measure' type='nominal' value='&quot;day&quot;'>
          <calculation class='tableau' formula='&quot;day&quot;' />
          <aliases>
            <alias key='&quot;day&quot;' value='Daily' />
            <alias key='&quot;month&quot;' value='Month' />
            <alias key='&quot;quarter&quot;' value='Quarter' />
            <alias key='&quot;year&quot;' value='Year' />
          </aliases>
          <members>
            <member alias='Daily' value='&quot;day&quot;' />
            <member alias='Month' value='&quot;month&quot;' />
            <member alias='Quarter' value='&quot;quarter&quot;' />
            <member alias='Year' value='&quot;year&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <zones>
        <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='4' w='100000' x='0' y='0'>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='24000' id='3' param='horz' w='98400' x='800' y='75000'>
            <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='24000' id='5' param='vert' w='98400' x='800' y='75000'>
              <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9000' id='8' name='price chart-day' pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' w='98400' x='800' y='75000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7500' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='98400' x='800' y='84000'>
                <formatted-text>
                  <run>Coin List</run>
                </formatted-text>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='7500' id='10' mode='compact' param='[Parameters].[Parameter 2]' w='98400' x='800' y='91500'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='74000' id='6' param='horz' w='98400' x='800' y='1000'>
            <zone h='74000' id='7' name='price chart-day' show-title='false' w='100' x='800' y='1000'>
              <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='58' maxwidth='1' minheight='58' minwidth='1' type-h='scalable' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='74000' id='11' name='price chart-month' show-title='false' w='100' x='900' y='1000'>
              <layout-cache has-max-size-w='true' maxwidth='1' minwidth='1' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='74000' id='12' name='price chart-year' show-title='false' w='100' x='1000' y='1000'>
              <layout-cache has-max-size-w='true' maxwidth='1' minwidth='1' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone h='74000' id='15' name='price chart-quarter' show-title='false' w='98100' x='1100' y='1000'>
              <layout-cache minwidth='245' type-h='fixed' type-w='scalable' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1400' minheight='1400' sizing-mode='vscroll' />
          <zones>
            <zone _.fcp.SetMembershipControl.false...type='layout-basic' _.fcp.SetMembershipControl.true...type-v2='layout-basic' h='100000' id='19' w='100000' x='0' y='0'>
              <zone _.fcp.SetMembershipControl.false...type='layout-flow' _.fcp.SetMembershipControl.true...type-v2='layout-flow' h='98000' id='18' param='vert' w='98400' x='800' y='1000'>
                <zone fixed-size='280' h='74000' id='7' is-fixed='true' name='price chart-day' show-title='false' w='100' x='800' y='1000'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='58' maxwidth='1' minheight='58' minwidth='1' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='color' _.fcp.SetMembershipControl.true...type-v2='color' h='9000' id='8' name='price chart-day' pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' w='98400' x='800' y='75000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74000' id='11' is-fixed='true' name='price chart-month' show-title='false' w='100' x='900' y='1000'>
                  <layout-cache has-max-size-w='true' maxwidth='1' minwidth='1' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74000' id='12' is-fixed='true' name='price chart-year' show-title='false' w='100' x='1000' y='1000'>
                  <layout-cache has-max-size-w='true' maxwidth='1' minwidth='1' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='74000' id='15' is-fixed='true' name='price chart-quarter' show-title='false' w='98100' x='1100' y='1000'>
                  <layout-cache minwidth='245' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' custom-title='true' h='7500' id='9' mode='compact' param='[Parameters].[Parameter 1]' w='98400' x='800' y='84000'>
                  <formatted-text>
                    <run>Coin List</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone _.fcp.SetMembershipControl.false...type='paramctrl' _.fcp.SetMembershipControl.true...type-v2='paramctrl' h='7500' id='10' mode='compact' param='[Parameters].[Parameter 2]' w='98400' x='800' y='91500'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{994DC3ED-ED4D-410E-9067-D9FDABA0D227}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.5' source-height='75'>
    <window class='dashboard' name='CryptoCurrency'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{F9C75935-F000-4E14-A374-938A8729364D}' />
    </window>
    <window class='dashboard' name='Cv'>
      <viewpoints />
      <active id='-1' />
      <simple-id uuid='{7DF344DA-F95F-455D-B473-B6AE12323DD5}' />
    </window>
    <window class='dashboard' name='Historical Data'>
      <viewpoints>
        <viewpoint name='Close'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='Volumn'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]</field>
            </color-one-way>
          </highlight>
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{D42489CD-0334-49A7-B67D-4D60A2A8981A}' />
    </window>
    <window class='worksheet' name='Volumn'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Table Name Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{70AC933F-D15D-4A96-80E5-87A509FE7578}' />
    </window>
    <window class='worksheet' name='vol vs price'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Table Name Parameter]' type='parameter' />
            <card pane-specification-id='2' param='[federated.146cu550l6pdah1bfylyq1xsxtmd].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[mn:Date:ok]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[sum:High:qk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[tmn:Date:ok]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{07B0689D-5529-4951-B09E-567F944F5043}' />
    </window>
    <window class='worksheet' name='Close'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card custom-title='true' mode='compact' param='[Parameters].[Table Name Parameter]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Calculation_237001990512586757:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[none:Table Name:nk]</field>
            <field>[federated.146cu550l6pdah1bfylyq1xsxtmd].[yr:Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{B7F3B342-2D0E-4976-B39C-6A176AA5D5B2}' />
    </window>
    <window class='worksheet' maximized='true' name='price chart-day'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{301F8E8A-E6E9-4B50-9E89-CB4114C68088}' />
    </window>
    <window class='worksheet' name='price chart-month'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636136554512:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{341F76F1-B451-46E5-9475-B420B6D6A0A2}' />
    </window>
    <window class='worksheet' name='price chart-year'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{97EB08C7-4D58-4609-86FB-F7A46A1EB9D5}' />
    </window>
    <window class='worksheet' name='price chart-quarter'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='3' param='[federated.0x59u1l0oequig19cc57o1pualhn].[usr:Calculation_927178635449282566:qk]' type='color' />
            <card mode='compact' param='[Parameters].[Parameter 2]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178636140728337:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{487EDFA3-8FD7-4494-8DF4-7311A1813E39}' />
    </window>
    <window class='worksheet' name='Sheet 4 (2)'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='30'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card mode='compact' param='[Parameters].[Parameter 1]' type='parameter' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[:Measure Names]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635440603140:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635454840839:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Calculation_927178635460292617:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:Table Name:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:conversionSymbol:nk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[none:time:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635434487809:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[tdy:Calculation_927178635460292617:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[tyr:Calculation_927178635460292617:qk]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:Calculation_927178635434487809:ok]</field>
            <field>[federated.0x59u1l0oequig19cc57o1pualhn].[yr:time:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{9BBF3C1A-CBC6-42C3-86B5-A54D59485FBC}' />
    </window>
    <window class='dashboard' name='price chart'>
      <viewpoints>
        <viewpoint name='price chart-day'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='price chart-month'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='price chart-quarter'>
          <zoom type='entire-view' />
        </viewpoint>
        <viewpoint name='price chart-year'>
          <zoom type='entire-view' />
        </viewpoint>
      </viewpoints>
      <active id='9' />
      <simple-id uuid='{BA1D0BEC-BD00-40A1-B6F3-4A77B2EDB7A6}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Close' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='CryptoCurrency' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAHoUlEQVR4nO3aa3BU9R3G8WeTsGBCyi1hAoYgEQKGuzFQLh1EyIBABVpeqLTaOp0yYyti
      cLSlltLodAodEWmRgtylyKWtEMQqQrgVQriZ0hZNiCQNSZTElCAQQhI2fcGUaWDaAl4YeL6f
      d2f37Dm/OXu++5+d3UBDQ0ODAFNhN3oA4EYiAFgjAFgjAFiLuPyBUxUlevXVRSooPqFeA9P0
      +CPfuO6DV5QVK9giTi2igv9zv9zsrfrd2g06r6aa+Ngk9e/Z+brPCVyLRgE01J/Tj3/0nL49
      eZrSe96pvPyCz3TwHW+uVrvBj2hQctx/3edY7nbNX7NNL8z4haIj6lX2z+rPdE7gWoTPmDFj
      xr83ju7PUmlYBz00ZogCgTDFxsRIktLTpyiyvkoZM5eoVfPTytxTqP69klR7qkRPZ8zTyJR4
      jXv0Ce3bs0PLl69QeOsEBU4WaM6ClTq4P0fvbt+vEfcP087MVcr45WxlZmbqfLCNundJ0NJ5
      L+mhydPVqW20IoLN1KpFtI7s3qQ39h1XSnKiCg9u1Wtb31f/3glKn/JT1Vcd08wlGzW2f0dN
      mbVCJw5v05qtuRraL1kZP3lWq9b9QZt37NfgIUN0Mj9bP5g2U7uyNmvp0qW6LS5JSR3j9Pa6
      JXp+1st6+09v6Y7ufTX92WkaMWaUwgPSnJ8/o5jkgWr9f1Yt3BoarQAVn5QrvkPiFTudLS/S
      P+pGa9Hi2VJ9tV6fPE31E0drT9ZmDRkxWpJ0e1JfzX5+quprPtWkJ5/T2AVz9fDXcy6tAKHq
      Cq3Z/BctXLxEEQ11mvrDJ5Q2bLAqyuvUIT76qoYtL/qr6kY/oMWzvy9VFSr/wC6N/9kLejSl
      m3auX6qkex/UjPu/qt1vvqbMLTka3klK6HaPMqZ+V6eLczVz7X4N7Ral9dnFWrJsmcIDDQqF
      GpSWmqDtBwo0vFeMiqsj1blt1OdwaXEzaPQlOKZNrEpKSq/YKTK2o741Lk0BSYGISA3r2147
      c4u060C+0gb1lCQ1adJEkhTR7CtqfVu46i47xtnKMsUmdlWTsIAC4UF16dhS5VW1iomNUEnp
      6asaNrZjD41LG3Bpu0vK1zQkpZskqbS0TPmH92nhwoV67+jHCg9dnCA6OloBScFgUKFQSJVl
      perSo4/CA5IUUFhYmEaNn6B3N67X4T1ZSh066qpmwa2hUQBJKYNVlL1Jew8fVSh0QR/k5UmS
      AoFAoxeNGj9BG5e/pLCYJEVFXHyuprpaF0Ih5R3aqepgKwUlRUVF6nhxsepraxXVrrMqjuSo
      pKJKJz8u0qGCM0qICWrMuAf0mxdn6ZOqs6o5U6XC4x8pPCxMlZWVqqs9p9zDf7903svn+M/t
      rt2S1LR5G33nse/p4YkTdXf3K1cySWrXOVnvZ2/WR5Wf6kxVhU6erlFkTKLa6oRWvLVPI++9
      5/qvJm46jb4DBMKDGjwgRW+sWqaVq3+vc+HRSu19lwo+LFC/1H6XXtQkspUObPmjhj84SfEx
      zaWaKi1asUZ7d25VfulppT/1pKIjg2ofH68Nry/Whi0HlDZiuPokxeuVX7+sbXsPa9LkpxQf
      00Ix7RMVF1mn385/Re9sz1biXb3UPbmr/rxprda/s0Nx7dqrVVwHJd95uz4sKFZqv5SLQ9TX
      qKDslPr1SZYktevUVeV5OZq/YLEOHSlQjz4patk0pIrqMPXseodCtdUqrqhW6t19ldwpVvPm
      zlHW7vfUt/8gtYgKKjbygg6WhjT2vv5f6huAGytwzf8FqjunvftytHp9ll78VYbCJamqUFPm
      btSc6ZO/kCG/aMXH8rRu5TINmPC4BiZ3uNHj4Et07T+EXTivv31QpKefSb9480tSs5YaOeTm
      /eQ8XnhUve/7Jje/oWtfAYBbCH+FgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUCgDUC
      gDUCgDUCgDUCgLV/AT2S2IsWJxkTAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Cv' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAgAElEQVR4nOy9Wbcc13Xn+dvnxJCZd74XFwABkiBFipQs2ZJtyS6Xp3KVqlc/9PTUa/UH
      6E/VD/3ej9Ve3b3a7moP8iDLkkXJokQS4ASCAC7umDeniDhn7344EZl5R4CSe/mhdLAAZEZk
      RJxhj/+99wkxM+NX7Vftv9Dm/rU78Kv2q/av2X7FAL9q/0W3bPnL1779ewCIyOKgCJghCFmW
      48ocMSNqJIYGUQNxiAm4s9aUIOn6+XfOfm8/L47b0mlpP8u8H8LZe5kYjoy8LDAvxBjQugFr
      r3c2v37+72XPXHoGAlmvJO+X6WsUqCKxDkRrMAxb7kTqCSaCw1gpt6h6U8KwQsyB2Py3DkEB
      wVH0BzQ6xWrBoUjbjyiOXm+VuAbhYIiYQ0Qp1TFzkOcl/vYas8/3cVFwAn0yxiiSO3bffpW9
      B5+gFRQIq84xjA1SZhQ3V5h9foJTTy5C4QvGOoOeJx8U1IdTBGGTEvEFRzoiG3hijFALYsKt
      bIVDaoI2uJ6gM8WZZ31nAybGyewYXDujabD0fZ/aGlQjJgaLKcEciAqQ5koM1Efy9RKyVbKJ
      kE0nVNYQLaICRbFOyEfEsSEo1q2igWHtigDWrVU6hi3RNYDYWQYYbG8vSOwcoTqEzBX4XgFO
      iBaJdQ1BEwOcvaQlYFvQ7zIzyFkmE+lI0KVzc3KVOZEJzBlscdzhceRlCbkjWCRWM4jWMoxj
      6erFvWX5HnNKRpym405wWYYUGVmWk/kcJw4fjNg0hLrGNBJRTAQsESLA2uoOk2JC7M9aBm0Z
      V4wVKak9NLHB+wzzEWsMxFinx2CwwZPpAXijyB2abWAO+uZ5afsVPpk8ITRTfO5Zv/0yilAY
      vHrryzycPSUOh6yv7mC7NS46nAh+Z5NiNkOmNbjI9ktbqDgc4DdXWJnMIIQ0AwPBmeAzx9qb
      L9F78DkaFA84EQJKsbnG7bU+9Wd7gDAQR4bA7RvUEikOD6FWHMKa6zHWCi0zXC7oOCAIhctQ
      A7WAOkHMUHEkcukEoRLF4XYdrn+Hm1IiY4XphKzf40RG6GlEJKCWgQRAmHu0loTfXFiZdWzB
      wu2VswxgtpBukhhkzjRmBs4wUzBQFEOBiFnE4eaysSMusyQ1FoTWnjdJkqD9bfosmKQJspYp
      rL0kfRZQNz+fGCdgkmEWwQxVw9TSYFXAxflTRQRa4TN/BmeZ0GJiQBRiDFBXBAe4DJ97fJGT
      9wrywSqoYHXAZhVRGwKKw7faMaAWW6nuESBgTHykXO1TDWcQIq4R1qVkKA2n1DQbllh2HGmC
      skvBVB2n0vBQDtD1iNsT3NhQb2ROCOb4aPYA8ZJGFBxqDicQxQiHxws7V4XGGWn1IAyHc6JT
      ETILROeJahzcf5g0v3gUw7zh1FMfj9DRuJVFivl11l65wWF1zOTxAZkJzjKCKH57g1gNsVGF
      VkZpQhClcYbvlTTjCjHITPAGhqLiFqRiER1HdHzMEMH1M9gesLuywcrQUDehUkUtJFpb1s6W
      xrlM14KwjPmYxYsMMCcGs8V92v6oJRXVaTG1lthw7aM6Yupo3eafF8dYOtZ2ufutuc56aZWF
      LWkKA+KCmNsFNWdoO1YzxcySWUZiiI7ITS5+vnisvX86kJ6jgqBoE4nThtpNkMzhipy8LMlW
      BpTR0ZspWlV48ai2Y7KkowZrqwyrMaFpCMcNTpOiNqC3vkk9UMZ7T5l89hR1UAZP45W6XGHw
      5k1OP3ifav+YpGcdQSLgQA2lwh0X4NrFjoaatWsjqCjOEoG7ZG8kHhfw6jBJ7CAINR6n2hJK
      0gYmAROQ6DFRHIYLhra9mcQj3MmUUK4jETLx3N6+xSfHj3l2/BQRw2ua1ZXVbcZWM52NcbHC
      xbTe5jOyXkE1mSDWUZKk57bXioCOAoyPmQY4jkOyrQElW+QzQydT6lihFtHWlEpmkWGtwDXT
      JQZJ5y9lgKXf0PFVIpT0OdG9gWp7Iz0juVX1rB/R3rs71n1Og1sQtEpcSGpbMOLcV1i6vuUT
      nLpWKwmmhmpIhiVxbguekf6XaAKWPi+OLfkG7XHMkvaKkVhFdDRj5hwUGVm/oL/SI1/bYaMy
      etOaYTOl0pqTOMF8hFoRNdalT1Gu8qw64vF4D5fliZkN+ga3117hk+YxR9UR7tEpaADzqIB0
      okaVCIg4lIBYawMHAYvEViJKx9ZmRHQueDCIxIUgsoVm4Nwcpc8REHQ+Jcn8ExM4DsQdQDwz
      Io96E6wEN0mM+lK+yeMwZr8+Iet7zCLWONZ9j6k3ps2MpomIGopRiAefUceGuSTpJKOBOYPD
      SNBTGjmGXo7b7FPIBoOZIadTZjajJqAtoaMdFbfaoPUXLjDAsvSX1gFesp7m59Qiaook2pv/
      5vw9lgn4fItz4uo6cOnPLtxzQZS0ZlliRtWYTCC1pZteznxX9e1Fzndzk8xKRaY1OqloZMJp
      LBi6YzZ2tsk3tsj2x+h4hk0joo6JKEMiq/dWiU+OcCeBuN+QSY6aMsF42HsELkAN8bjGa4Y6
      bU0SWdKkZ9fKmaAasKiJUd3ZObtuXBfmlbPr2R1ZmM+J+K0VjxqVaAGA+tEBiGHicKoc7XgI
      PXR/SFVXbFrJmIZjV+F31pHPR8lplwynGZUFfE+Sb2LJh3IINdpaD0ZUTT6eemwS0cmIhhEU
      kG0PKNlkrRL0dEKjE2bWGaIOWuMdO8cAywu8ONAR91npa7ZgBmttq7nt/gKxtRchyuuI0cxw
      IqhpMilaRtBWK7XzdFFrnNMqlzH9+fPd8eX/579px60irJIxyFY5Od7jYPYQOchwCm5lQH99
      nbdW7vF0csJo71NGH3ySJKFmmFMCCrlB44jPagRHlIgYhNbeFnPXzg/mSUSqqCXzrWuXjfH8
      5xf93j4w/SeCaud/KR4hCkkqYqjA8MkznICPJJRrY5NQKuO9ZzSfJ79BgmC5I7u5xfjpM3Rc
      k5lDxVBRfJFD3WBRMAVTcBZQEv25VqIzFZrpKZUMkdyRba+Qscl67YjDxAyVWTKNOAeDXjBJ
      WupP2qcl+NabnjNAaw4lxSwXCPWXbZcR4+IcrbPdLrpq0kqdiYZcINzL7nvZ8fOEf1V/Chze
      ZdQxUosy6xs6VhgbjBu2ZEBoIsP4jB+tn+JfXkGsx4qsslFBczoiNlMmBKgFkwbr4FMTaE0P
      F1qwQC4yc/dZzUCUqMnDcEthni9K/NcJnvn5Fr2JYsSoxNYcNksBJhPBaRIOSoKKTYzHk/3k
      XxhYVHaKdeoy52B0QHXwFCyAevCetbUVjoZHaFUh2jrsljRRWII1oy15oZbgUaIRZkMag0lp
      5NsDnG2x1gjNcIrq7KIGWB4kkhyR5PE7OtctCSSlNSHTNe2Dl9tVhLv8nBdRy5dKIEh2v092
      Y5IKMdnStE5Qy7SXLeyypL9y0VunvEOk5sLPBbxmRJcWore2SqCmGU2YDIcwDmSxRTzyjMGX
      X+b4kw+wkzFxOEZEqOUY62WUmz0Kv8u2czRHM7QaMdWaKG3EQRyO1t7vpLqAOUVUWpgVVIwc
      aKTBLOLUJ7PpirW4atyXnbvSjGr/V3EQG9CYoH+RuYkREWidz7n5VitaJ2IWE54wptxYw4aG
      zgKbUoIvOI6nxGiYRUSFHEeR99BIC3DoBZqzJUYwWxjvzKCZjjFGjAsotkucrl/OAPOmluz7
      RN3tTWkdYbtA9Ocn8jqivo45nscMy9cu/tKq4jQBbhkDvuY+V5k+qcX5mJOEBcHho9DPCoIT
      qqbmcDpE+tAzMIvk0fHK2kt81OxzXB1y8nCC1aE1zRYmhJvUNJOG2g0ZiSPb7FFsrLHub6Dj
      SDw9pQ4jGlzy602ZB9bUJcbvkDJL6jxaiwChHQr4XEn/QibPpdeBibZhvGYOflx1/YXnkJxk
      mUWmn+0nBjfhNI+s3FsnPhjB8YxCHCLCVBT6jr4lQnfteukcmj/PDHbms1gEPDITmtkUY3o1
      CtQFp6RjoiVPdc4Augx+Xmwv6g9cxgwvwgQ6R6RATelgUOgm4/mS7Tpf4Ez/zMhxmKSAUC2G
      3+wRj2cwi2QzY82tUSEMY+BpPyA3+sSPp7jjgBPmsQ9LHAVIO7/JXg4HUyo3YYQj6zny3XUy
      ucmWlYT9EU0cMdWYRteZQ4C0ffcYNRHTNB9X+TFf1AS66rfdFKt4lGphFl9yv/NzbmY4S/Y9
      IkmbKUSB0NQcffhpC20LwWds3bnF9OEnzA4P6e3cRjShWv3+gPFk0po9F2loualJi1gaognF
      ulIDXDAZrDu+0ADPu+ZFiP+6dqXp0zZF55PeYd9zCNY4k+l0FTNe61SyWGgTcM5TDlY4rcdM
      qgkc1biYkIqIsd5bZ3rnFgfPPudw71Oc86DJhNSl550ZjyScOkUbHD4kqRomRpwcg8FpHsl3
      VsncBttZQXMckekR49gQRVFJeDdOqE0x1ZYYEpMtlM419jwvxhjL31O8QDHn0FYDXDff55+j
      kqBwwRLhi+CsJdCQIsNkjrqZ8PTgUYrJmNELJRubuxwePmY0Hidt2moA5xyqejUjdJqi9UEu
      h0G7DrM00AX61qJCeimTmFwk/Pl5TajA+cn5oo7zQoK0z6NDgGK6bxv46Jzh5zl3ly58e64w
      R+FyZhaYxRqTAi0FrRWZ1WxIn7I3YK8+5vP6BBcKzEfczCW8Ggii3aRdonHoZhMRI7TzmM61
      gataCE/GNEyYOCVb82Q3txlISdaAHk2YxUkCAdQlbUhLQEIL+qWYdEDx1ka852ZtO348yMV1
      vXI950HEiEqYM8BVwub8Gi/TWvdhzkLSxnFCTOt52rBhBVnmGTJjKMNkQkWhJKMoepxWYyIR
      04gzmcPsF8GTxfczDOC9TxJ0uVcdgbF0rLU7ulSfuSkkMmeW8w+8yha8bsKee95koQGWtEFH
      bV9E4i83Z+DbxTGJuN4KPstoTkeMh0MyEfoxY+pqJqKUd3dwwwp7VjPZG8IkgjlULze1zo+p
      I4Tuu+vOGYhrZ7/1H0Qd4SQQTvaZIVgJvZ0VCttmvfS4fJuKfWYxoJJweTQDUdQ8TmJKRdBk
      dp0dfzd3XOjr+TkEltZaUwT6Eh9g+frrtMqF39tyT1I79cbGl3bh2Yx6b8Sqebx5Ri7AuiM+
      C/ggeByIx6y51iSCcwzQX1lDYySEQIyJk7oo65zbW6JfSuo7h8y0wRK56AC1a3rlhF7VriLU
      M04wKQ8ofVbkmuuvZIJ5PzyZz1EPVZgRZxOk14btg5Eh7G7t8Iya6ckB488+wAkM6CfQPqaQ
      C+eeex6BWj6+PJe6TGDLUpUI4hEFZ8n0cVOleTSmliGa5dRfcfjdNVZdgU2A4ZiZDakQIGWo
      Jkg1wgWfSEHOSvHrnFramXbe0CZe6gN0c7zcRC7PFrj8GYsWtWL//ftsbt9JaSBZztq9Owzv
      f8Tp3iFFm1pRO+it9tCT6sz155nBOMcAQRSXe/LckxstV0cIKcDRAk8tDmtcJSEcbTD2iolb
      VpWXDfy6SewmDzgTnLM2ADQ32ThHYNdIn26hM1LOTDDDi+HLAqwm1DN8cKxJSeWMKjYc2Ax2
      c8IY8tOIOsNyIVid0jHIYAmGXX7OZX2xpc/drKSkwmWpKiABwc9NhZRs2CSTJ3p4NmP69BET
      cnxfyG9uUPISN9SoD2u0OWVMBeqwMzBp55yfW9Mlk1CWv5M0lWKIM0IVz5y7ah2Xjz/v/Pnm
      EIitaYgxq8eM9z7Ba4XTjCIr6G+u82z/KZPh8UKhyUKwnL/3GQaYTcZ4nyG5x3mPzzwiGVku
      ZC5DMk+0SB0aiBFtM0EXE9dOksiy/wm0TJO07gWf4bqBX68d0sUJDlRonZ+EPl8u8a9sZogv
      yfOMKjRMmymOQK4xCfUI5WCN/u4KT5494vj4AJkAjRLwyUFTR9SQsrEv5Nm0PV7SAst9WyBD
      Cy2phHkO0tnr4/xzZ40nrD1HwwxTlxCWsTIbHzJ1h5w4R7FT4v0G2z6jPlGYnDCJM4KktRFc
      m5rcyvbOiUZA4ny+u2dHS7lRsYjo2FJs6PwKXaMFzhxZYvwLv+sYBgEcwUVUY4qMn9RkVuCL
      gpM4YUILiwZY8QU+yzmpTxFSDpLCAtDhvBPcBJomYhU45xDvcJnHfI5kHp8LTnKywiPeQRbQ
      GNEQUoJY5xgvqfAOqluulznjM9iZiP2VE7iYp2VvZAHJaot+zAnpORIfwEnKmRdxRFPqGPCl
      g1yQWcQqo3R91vp9jqtTntaHlHXAcpBJxKoUyFFpkwFFsNjmI6UJuNL8ep6Wu855X/7NGZNS
      PCHO2hzFJTMwgsVI/XSKMmPiFL9akN1aZ8AmWeMJRyMaPWGmXSKhIzrDmQAN5lJceblfRrum
      3tPUAb9E/9chgcvXnzl+7vzFdYMWG51j/wZMRSn6BXas1E+PWaFEUYY09Nb72F4S1iUFDZry
      2NqLz6VCQHKMQEyxqKn4Q2q0VJzmuMyjvp3VQnCW461IvYuKhpgqs2KXp91KqqXRXpDGxrJw
      mTvXS6NOH51cvMbSl2V/4EVaMqUM5wSXOTAhhkCcTsnFU1hORaRB6W+u4oMy2z8kPq5xpHRg
      F0nR5rZDKqAhaUQxm/f3OiJ+ke8vAku2H2ApINWZoAvdLJiLuMYRT2bocUUtgpVCfmOV3G6x
      nTnCfkWsT5nGmkhIWZ9BWsx+maiTqalixMbOmLwX+nbJsctWSpaF13mt0f5R05R7ZKlYxwxm
      x8MkZc2jvT4bd24weXCf0d4zBtETMOrcyMqSMErQqXI+G/S8OSIkp8nAoqJVSBVRRKxpcOJx
      PsP59L+4pDGc5ckZjpo0RIxY1JR+O38AcypPPoMtDlm3mOdaPOc7dNrFaLXAYuKWJeNVqASS
      Sjs1gniXgkvByFzG2uomSM14dMrs8DFWgMTkB3WomHY2PovCH42xlU6C6Yvj7ld9P+8wXqcV
      TAQjLHKBlux5bXvughBdwEVH7Co2Z0rz2ZDKHTNynmyzJN/cYNUX6DjghmMmOqKxpHW7tUmx
      CyNYAiDUltHAs2O+tL/n1uR5pqq09BhNiZoqEqyrdYidNDTG02PGT4ZoDHiEXm8NVnIOD57S
      NBWiiwzn61MhOuoS3zLD4piFiAYlSpNqQL1LZpJPf51z4D3OPL675hxDBFKeR/cwZ0uEfQlK
      csFp7ibTWmfCSINzi/rQqydT6FCQGAJFdPR9QeOUyhrGroHVDKshjGfIpCPANme+TfrqnCtv
      pBhjjC0ztqO6ZFGvQ6W672f6yUXmuPAZARdQSZo300TgHiXicbRZmmgbNSdZExi0VWvEFCGN
      +zMiE6Yi0PeUN1coeIl1FeqDGXU4prLW7zJDg8M0VWWBYZIl1midvO6PydWZA5YGdHbsdtaT
      NInJ5FRNaTpmczAgcq6dKgPp4XzBfj3E97IWPHFs5gNmFpmE6XMY4Gz30ifriA66IKOpYRrR
      JhUtN87hWv/BOY/zrT/hPQ6P13SPLEZi6BgiJhV7/rGSMv2WlilNzjJRtX2aIyht/84zzcL5
      SZi1k7bqyZIaL3t98kHOcHTI6ckRMssh6Dx19kKTFMns8qWsldbzRbyGCf4l2hmmMCMSaDAk
      RqJoay57zNUoDjOXSl7U4wggECRnwyKVE4IJWxKYmmcsjg0CzViYjU6IHHGag99Zo5QdNkqh
      OVaK4QlZLQkxnGua0FZ2dRW+jijgrjBPr9TUF5wEgzbQFc/Eqy5vI5nhN3J4OiUcwDYDJhY4
      lFkqrzzUq0sizz05nV8+vGzTt5+TkwRmmnyAJhUqixOc93MN4ZwHL4j3+NyTtSbWGQ2h1uZA
      tvDXuTafrM5mmttCHXzXZkJcZv60vxWgzEvMC1VTMWxG5AxwudDMAjJVvPeYc/P7nFkksyUo
      NjnzqR7hOt1ztv/XQb8v+juzlFfjc0VncY4qqBiZNRQ4aoOvOeWBq8majN/rC3+3Bnf3J7y2
      bnxv1XPvKeyuG//Uj9x9Yry1YvzNhrLyGfzOivKPq47hkyFv+yGfYQwHPQa317i3s87U7iIH
      Q6Y6oY4hIUktOACpruEq+X8eBZsfv4QBjIhoTDXXmuDQS+e3vT7unSB4gkKzvUa+WjD9+DPC
      uKaPuz4d+ryKncOdc6TnLGN0R+ZXtZiTKGhsoA5Ex9xk6nwH5x1kDpc5MssSPWtyqE0TM1lU
      VC4oulb6LzTAYj4uYZo0OFw7LiUlYuWDPk0w6vGYeNDQdxmZ9Km0IaZwLlhbh7vUXCvfbMlM
      jDHObcwzSmoJ1biOwH/RY2ZgRYZOAzsxUGTGOMC3B45/2lZ+41nk+Eak6Bf89uOGv33DYQ+N
      G+vw3dc82U8D/U34wU2Pfy+wu2l8926G/Kzht/vG91/3nHwc+H3z7N+oGeUFg49H/NvpmJ/t
      5Dw5esy9G3123BZHzlPvB2R2zFgbmm63jaW2XGp7Jklw+TfnaNtIhU+p+k/n9StXNcNwUYiS
      coyODh6jI08eG6IIqzu3XswEmsNTSFKtneS7Qmqdv3AxsFYMqKFBUQJInRgia2MP3rUQrOB8
      nm7R7vZgMRJiYgqJC0fKujiALdIwlIVT3eXWJKnvKHyBlDl1qJnUFdnUIEu7OlhQXJnT21ql
      mZ0SJtM2LXxRLdyNVc9pAxXDYmhzlLS1iS9ZmEu00lUxEGlL+NJNHWLabiGiLSqe/J1didwd
      gN8LvLKi/Pxlz689VL73pZr6U8fHN4SneYbdj/zFy57p/UA28XzvJUd4JyDmeScI4aeJKH8o
      Gc2PI87gL3Yd0/cb+rOMn7/a8Cx65MPAN1fh715zhCN4axK4ke/zk9unjO7Dm1sFvZubPNUS
      Th3Z8SEnVlOjOIMo2qLVQscOXXKceVI84pzOcKTIuFqDBbArdcpC4MQWLoXkHzKO3Ovf4nFz
      ypOTvesZYG5TL4t1m/9z6aK+qK07R3sscTStQx2l0w7JhxDnESeIF3yWU7QIE1HxkmFZckKd
      hXnXlhP3OndfSLENNWgsUrgC38uJOqWeTlhxBav5GmOpGIcZVXBolrSOWErX7Tb/mUeyWydo
      nhPVxgFi64Avz8RVRH5hvs/4LC5pPQEXHOYiQYQ8KCrGGsa9vnBiwk2vPHszwx03/PBOzuS9
      hu9tGs0HAjMYjRQfk1kUPwNvqZIr+8zAeTAl7juQiAlUTwUPqFOaT3MyyakFnny8WOfvlUZ4
      N7KzC9MbNT9cL5n+PPBNcowRH1jN9OOaN3p9dt7sM5rcYKeBuN/QhBMmqkSn3eQhtJmtoU2a
      bJHIrkUD65A7DReCncv0txxn6M61+3TxycoEWemjD06erwHStUsPos31uWItv4jDF2WRUAfJ
      VOpMrBgisWoRJpfMpZBnOOfwTnDO47MCl2eJ2IIjRENDTFmRc9uo5V8R8rxHQAmhJk7HZHlG
      JkKwJIkGa6tIscLRwR7VySkiik+FbylSeoGA01x0C6FCu/sAL+QHLM/ZFSdSAFEt7bOjQqbG
      26Vw7Bruuoyfvia4JzVPbhT07wf2hwWcTJGYUT3zkEJa+OhQ53Ca/IXGpTraQCQS8ZonlEY6
      aacEAd94ggsp8qG+XaykbeMeOHOIizx44sifBJSc99cnVFlBuB/5hmSwNuFHdUX18TEbTrj3
      +oAf1Rtsuhw9CMTZKWOdoCqoj/joiT4VvS/KW1shJkJszeIvPK+W4jfV4xOiS1HsF0SB5neY
      Iy4v+uDLmGEeiV2+jcyr/c4kgNFmGWqMUFXJoXYO7zMYOLwkyawIMuiRq0FMUkKaBPnFtlQv
      WEy+hjlC01BEWO2vUxfGaHbK/vgI8hLNHFQR01RX1jnOF9I7SIyhloKHqTQzmT5uGSbj8jm7
      GBA8yzQqiXAbZ9yJivfK3bLk493AuHHsrUbGHzT42iMHkf49h4UZmWZoi5hgQnAg0sKUJgRx
      qaC8C1BGT5QI2FL6QxqcWkiFaAgqEacpRVtNcKKolQRnSFBUPSaB8VGOHad09Z+uBMw84X34
      uoPVnYp3cmP84YhBUF6/3efd9TX68jK+VsLhjFoOicGlNOuleTIVxEEImkziFxAxZ0ELsJQw
      jUTD8M8xgQC/tLNb98DlTNAv1IHzTS7/egHv70wlgJh8AW2UxlyS+BlEC0gA7zySCU4yfJH8
      CdQITUMTaiRECvM4jMZAvZCv98l8zXQ4Qappq+FsKdCcJPF5FzyhXh5BcZaSyyw6XLcB0zUT
      ddEkSgwjaqij3UzK2BKh0MhmT3j0cs5PRjNGU487MOwpZOba2meHhHZXyHZjgE6gdEGJjklp
      c2IWDNfW1s5roLs+aVvT2/ZPdInoDFXBJOC0Df5pqjPo9gVTUcJI0paGJvy8bLAyo/6p8lWE
      17YDf//SjOFPJ/RnT/nSasn93ZJCb7KdOepnAatOmIQqxTcEMvWEoASNLb24duoihl9UjKYe
      nJ30pZybFBZsLi+IObtSCxWfLuzKEL+YzX9Z+0Xv0QFQnbbQRgnNDK0Tti8+aQiXe5xkZHmG
      z0sk5mQRVvISFeFkOmQ4HeGkQi0kmC1qq5lkTgmdv3IpriSL/CMVaxPyuADpXTX2s3dLZonX
      gDPhVS80qxWx57m/5pndr9I2K62tDO1eeZbSo0XbdARLFVbdvj1tTy9EZxfz3vVlUQPdnT9D
      E61vgy0xsFly+DVBlB0ivXxbaxmoGuXoGDzG5+sVH93sMflh5OVG+N2NyA/eqJi9O6OuR1Te
      sO0+sr3Bmt/CTgU7OQGbEIKD2GngJgEU6sHC/KHL471szrvP1+8LdNkinnOCn2fuXNbOL/4v
      zkyysPEtmVRiKShXh4hUgBMyn9ErSyQvaDxMMqNc7bOyljM9GaFVgzQOMT8Pus2T92T+pEsG
      0v3TbTfYBc1kXqJ3preXRISXjztLBPSq80g/Mi2VR/0Cedygew1Oac0Xm++v2nUxpV1ASgl3
      S2Rw8XnX9eGyc9dBsA4hthuSzVMhzo25+210kawNUxwfe+S4Qp2wdcPzn9/0HKSNnvAAACAA
      SURBVP440ptGvlMIT+/CPz48BZ0ydYrrOfLbm9ywm/jNO8hBhdbHjLUtyyTVN+gVDHAVzT0X
      BTpvx86d4Ct/fz0hX2cSXVYn8LzckG6Ru31KrZVOvtssVQ0LDeBxLqeiYTw8JZ+e4HslOCMv
      M7JemSC4GIlNINQNMdZnx3qhK932g5C2KDQWNHBZNuNifswsbefZTa8Z6w5uODheCxwUArMM
      Hs0wa2sL8Hjr0pJtLpGFZKqqi0QCYkU6twSkX5VQ1+UyLRfRX9UuwLeAEz9ngOdd49ptdLT1
      kSIOF+CfD2vC9wSv8CcDx8+/0fDgoSC14yu+ojLPg5FQjfcZyxGjJsDmCO+32cp7VAcVMj5h
      HCuUlI2wrInMOuGwWJtuMZ/rBDtLpsDc9rOuLOb5E3VVfstV7TopdP78csWBYot0hZYpxIzc
      FzjvabRhFhuKmCO5IKo0JxPC6QwRocrA+2QmuTwjK0t69FIQpWmIdZ2SADW02qHD59u9J+bF
      58ZyXa10CJ9ZQrMk1VO4uDAroiiZGLdE0H7k8YowCRlxLyCS8hWlXYe0EXBn+RotNIVZ2hGi
      cU1r+yf0anmVuphCh53PZdsFBk05WcGBYGlDXRRrt8BX0g51tBv0epQmpp3h0hbJLmlA2q3j
      L1lPY+FPKZL2MyX198/XlPFPAv2TnO8UAXtT+Otc0H+uKaOBd2gFtj+iliFjHH7Dkb+0zYBt
      ssrQg1Om8ZTKElyMJW8mha480mroSPyiKNDCB3gRY+VFiP4LPXsJDluAp63/ZswdoM55VQdZ
      kZGJo6orZpMRRZbTl5zGSSJoB9oAVY1Sp1TvLipdlOS9kmywSoGDEGFa09QVtTbonDjaGANK
      tNYPURaT5NKmYkrTJvy1hOsd6xG2xTFeCRz0MnQvphJDBB/barDWD3XtgOdzL9BF/nKBsFRc
      cdnMqy02H4Zu1zabbyDQRWVVIIuGiSOTSI3DLLSaJo0zFepEcidUiW/SWmBkJoRklz1/UWWJ
      Tgyqx4qjAAl88FXH/YmhP6v4UhD+8Ibnb4qcE6lTTMAynCnxKKJH+1REYgm9WxvkepsbuaN+
      OiXWx4wiqDXQ6h41QeyKVIjntU5t/qLXXjoPX8D+T9JrGQSzeZTWtzEDRWk0YAGyLMM7T6xr
      HJ6VtTXCijCcDIlVPY+oake4NVgdaCaR2k0xDz735EUPv9kjlwHrQdC6IU5nhKomcyVi1m4v
      nkyiuS/t0uaxXj2II3rDaWAtOtZz5fNNIc48HBqYEqJRREd0Mmeu2GZAzpEpForcSAwwXSp1
      ss5hXZ5jAE3bw4pEoqSrXVT6PmOqSuaVJnpWvWNikeCELAT64om5UDVGDyWYIKUna5JplvbZ
      mZMXytmqwKusggswpbmkzYD3fhwR9bwuwm+/BX96F+ofRPJewxsW+cBCsk7UI5IqxPw0Uj8c
      UnPEqXP4GwV5sc2Wz7ChQ0+OmMYRU1NM6hdIh76AVad/Olv7i7TrNMIXd4TbFOklpMFaRnBO
      EJchMdLUNS4o/bygKfo0ITIJNb7XQwY5UlcQSbnxdATWxhUwnCapKiFSTcbIcMzEg+SeouxT
      3BjQkw3W3TpuNeDzEU37Yg1zqT5AQkwGU7s3fy7GloCUDU82CuJ+IAZaXDXVX0QP4hwaY8ov
      ojVpRPDeE0IASyaKiuFIW6rQljV2moMlTSTWpk4QyLOMqRq9YBTeUXmFHtjY8XIBj0OAgUfG
      ykv9gs+amkyE3GDQ8xyJIlXDtvR4SMCXAjNlLc85ihWZufRs77CY1kWlq6Wwef3EHGUya99Z
      AI2LyfTSBOl+7IxHklH9VcMr1uM/3oy8/2XHz37YQOURYrtrX0xwsCQzTSLY04aKz9kTcH1P
      dmedvr3Muhn13hV7gy5IjDkiksijq3aSL0S0X8QUehFUaUnzdz1MxRKSilBCaHBZhpdU6aVq
      ZFlJ1suZ1FNGkxE+zObp16l6qt3HpzUx/Fx8p6d0oXmJ6V0UFiL1ZMRsOEKcwtotJqs5/tYq
      g2wbXwk6mjIbnVJbnfb7AUQD2wLjnjD1EJ4qkrW2eLcpEJISvuboUFuA7luGCKFFmQScIi45
      oukNOmlOuq0Bcjw1ASEjl4g3Q1YLpuPAjsDYjLjlmB1FbgahzuFpT3BTR38cWdvIeDipWRdo
      ZsLmLcfn+zU74pipML2Z0TSR9cZocuG0qHEzWDGwvuO0jvRxVGJ4aXP52wCckqLcKuntaV3Y
      xLUvJUkjESQK9fupRvlLN1f4i9+s+OAvZ5RTz1sEQu74ICyK9hODdZtjduYa6FhpxkfUcsix
      dxS7vefHAUTOEkKHAy+38+jNv1Tu+/J9r7pnVxOceimYI0kcDRRFH+t56tAwbiYUxQApHFKB
      VjVJeTuQxUsk5qZdsmNSpLc1P1yrERVS9NlSnoRvDJdFmsMR4ycjzAk+z8hX+/TubrPpCqgi
      cjyh14w46VeM1NCh4azCYjaXjK7bc18EFxe4+jxwZem9Y8651IcQWhgww9RSarnzqClrOEYS
      KEUwjWz2c57SUEwm3KBgJhBvZVTPGt4uMh40FbLTh8c1rw8KPiojY21Ya2CQeSa3HJ8fNLxG
      xl6scHf6jD6v+fKrGT+3QL6WwYHw6qrj4xjxBisK5UqgCh6plRXxTC0QpI1TiLTEL20xvrWV
      XssrnP7HHD8cBUb/MKN4mvHf5EL5Nfg/ciP+IJKpw0lEY0n0zcKvmQc20m3SJsNG/fklBTEX
      pPoSoLrwVc76AFfh279suxJFaglxYQ+ndAlvqci9qywSEfKyRIqMyWxMNRyCB4K2WZRdpVm6
      R6omY45emC3SeBemVltOF+N8X09DiM6j6nEKEhVrIvX0mJkMEYFe4djZXuV0c4dMS24cRkI9
      ZNKcpK3FhYS0WEz90daClo4BDNpndgU9Jun9kmKK+QGKIxDYkJKZC4zEU1pGpkqx43l8POMW
      OZOQoXcKhodTtp8pvTzj01yRMsc/bvjyTeGfj2es5hl2BC/dzXlvOGHjwHFbhdGW0DQF5aPA
      l1bXeFdmZCvgDgKv38x57ziy7oy6qlm/NeDzvYqb4jilIq5l6LGyleVMCNSaUh7AzwVrJ9TO
      0pVhErFZDxdHeAI//+2C944i+o6y2wh/tJ7xv89mmGtwujC35vS0RELJHLwGBp07uuc6cSm8
      8K/UWndkjgKZpVd/JugzMgkz8gAuc3jniHWA0EqeVoKaRcQsFVeLzOHBOXDcOo1LqOOc9TvH
      24nhHNDCpLTOpZjHAT2NrNfG/ukp1d4QjRHfK8hvr7LCy5R5hh43hONDxmFKY02KrrLYTGA5
      pRvpKs903inFk4cp21nGXqjo93vkk8juAD7zyvQk8kr0jIuIv9Pj2Wdjft2X3Keieimj+STy
      Ru452DZ+VgsbJmSngfKtkp9/MuXLkvOoCZRv99h/f8pX84xHReSjrT5aTXl55jnehfenDTvB
      pZTmu32efD7mDVfwiArbLmj2Ku6tlHxaVUjp8RNlrVdyVDXk6oi0290n/PjceicYV0ypyHj3
      e+ldCt80+L034c+/qjR/C3LcOj9nbWXA5tkQnXt0vQ/QRQJhbpOJ2RnH6kXbLxIxvngTWqSh
      ewFDojVnQkZ6m6Fi+MyTk3JG6smEMsvx3oNPr9ZJsGJKeZDFrdui8gVHdQUXXc/nRRzzqEpb
      52pJEqd9caTd9TjdvDRl3QsnK1BVERrwlmHjSDM+4oRjam/4QUH5yhorussgM+qDSDw94DhO
      kv0qiQAgLGqnrWVCM7bIeBon7LtILkY2DWzvZnx4OOGGz9GYIbeNk3Fk/dMZbxc5H/uI3Vyh
      +XDK7+z2+N7phJ7PKQ8j93ZyfiYKD6e8pRmH/QZ3t2D/vTG/t9rj+/UEf7NH9mngW9/M+O5x
      zUqTsXUibN51PBhFVh7XvOyE/U1PM42sPYu8tOb5VGpKwE+NYifn4KRmC+VUDFc4Qp18sAjz
      WusWwsLlEGPyF8RS8PHTNePDu56jP69Ynyp/mDserxg/GXV1yH5Oy2e0AC/ypvi5+dPmAP0i
      dHtJGPoCBPaFm8z/9d6R5zlFkaegVz0lakPebfSkmvYAKnPI3JkNdZf/iiU7X9QurTY6nxpw
      pgqt3ZWYdsEMyE3ZccLxijCdGVSkugJTEgum3+bB4U9rwocHHH56n4cffsy+PWZyb52dV1/j
      5huvs7tyhzURvPnW7Gq1D8qdzDEkQwvFjeHVvGS2Gvj0tOJOU0AVyN/MeLRX85WJ0PjIs1dz
      RqHh7pOGl24Lfx9nrBcZxYHy5bf6/PB0xq1xZKVyVG+VHAXY+STw6qrxo7WIzwo2HjZ85fU1
      /mY25jYed6Rsfb3gvacVb808aM3pawNO9it+vclp+oFHfSiHyu2Bp1lVhqeBHVNsUKClw1eB
      zbSLAt6SQHPEhPBgSGZok4RxwtaE46Hn9K+VzZnjf9rJ0T/Jef9eSpFwmuE0zfRl1PvcOMAF
      vH+JcF9Ekn+R1On5M1/gvnMXxWiDT2CZQ9SjdcAp5GWf2M+omgoNATLXmkx2aUH1L8OQ1plT
      LWmWaux4z/E61HXEVw6b45KpOaN9B1baNcEh6a2XYthJw/TkEVOSOeG3Csqbt9jVAnNGeDJh
      vT5hLzQ8KyObURhUga2bngdHNWviiOPI2i3HR8GRfzDmLZ/xUALyap/hRxV/vDbgu7MRvXKF
      1f3IvRV48Br8+OGYr2vOflDyb67w6TvH/HFvhb+VCb0768Sfj/nWZsE7u8b90ZiXNVKKUL2R
      cf+9Mb+d5XzgAtxdYfTejN/fzfmbyYyVQUH2JPDmvQE/ejphV0gbat3r8ezTCS+7nCMPkxWH
      O25YLTJONBKikKtPxUm5Qd0CBjRgeWvWGCOM//SlgsfvnOL3Sr6skV/b9fzpUQArW5Fzdo2f
      rwHOLvOZy58nxX9RgnoR7SAiOHEpyGRG3TRIiGRIm5+S0hvKwYBipU+D0lQ1FuI8a/K8BvjC
      TRaoJUKbY57w6A0nDFeVWWXouNsaMtm23TaEJik5wbc6w0TRpe3JXXtjHxWeNcw++ozPP3nA
      s08/pNg+5dmr22x+8xV2tu7xG71buBX4qDI2TSimga23S95/Fnjt1Cg0cvyqY1gEth5U/NqG
      8N1mxqBfwsOab75V8KNQUT41btcee6XgaBeqd0b8m8EK3ysr/O0+8Wen/NEbA/62mVAorBwI
      d97uc18CxaeB1xA+v+uYZsbWxxVv3Mz4vousq2flMPDSWyXv7E94K3qa2sjeKHj2cc2vlwVP
      XCRsZNhx4OXNgmNtKPHkFnFZqxVysDq9z9ksS8rXQivQhGc/qMie9fgPhfIn38r5/rcdoUyp
      z5eJ1WsZQEioiEi35yaIRZCzl50noF/evDl7n/lf6ZxOWZgxri091AhRyV1Bv9/HcuG0GjNp
      pgSnKTgSde5YXda7y8ZxTe/am3hyM9SlrUG8CbsA/cgEI067fUoN2jretBC6ZMTJPP4wd7Jb
      hCk9ys0d/tt4shg5HM6YfPY5w3ce0K8/492tE7K7L/HqjXt8/atv4G/d4OTDyNfEs2c1fG2F
      p/enfCeusNdr+GDDUYwir42M7S/n/OXDKW/HAp0og2/3+dmnY7515JBc+eBLjnokvPU0cuf1
      Hv/vcMxLoaA8CNz+gwHfe/eEb9We06Zm+ht99h7U/JH0OBhEPl4xyqeRt1czTm94Hj2a8UYl
      TG/AdCejelDzlZWM+wPFZ8LqQeTOzYxPqsCmCVmEcjOniYENJ7jc0NjtQreoT0gmbdo4V8z4
      4W3hfw3Ko/+7YjBW/tscNn1NZ3rSwc7XEaDIYrkWRHH177Wt1v//rSnzpDfriEaTJkj1vm1e
      S+7Jez0CkenpiOpkjDWX7CjxAuM4ryHOMIl0Ul3a3QqMVQnoinDQczRjRaK7MGmX3TP9f2G4
      c9gzw9hyjiNXo9t9mpPA18Qx63k+bQL5swnu/ido9jH/+cP7rPVh86Vb9P/gDXqvvMnNn2f8
      zmafv2aGv9EnfjDjj19Z5Sdlw9F+xasjJdvKmX6lx0ffO+bflz1+7Iz4dp/TH0/57272+Wmv
      5mkIbB14Xt11HN3LePjuiN+pHQ9XFN4oOfzBlP/6pT5/FSdk6yX+w8hvfn2F74+m3DiNrE4N
      9/WCh/sVXz6GslQ+vanEg8hbLmO2JXw2a9ieGWtrBZNBwE5qdp1n1jdcHimr9sUh7SuP5rlJ
      0glJ4+ChUP8YXjHhf77jOfmvCk5e8pgZmXbAzsVNnK9tXbbgVe26gNW/RDvPkJ3BkWcZRdnD
      FTmzumJWzYgxphr2mAruJfov9JznZaZ2U5GgyBR17EVjzQvHuRCPFNe07xRYqgy7Ki/9qmYo
      G5LQn7hmBO9ZPah5bbXgJ1rjBoLbV97cytnLA589NL5SKScfP2N6Y5+//+7PePv4Mftfynj4
      669x694rfGN8h9/5yi5/djDhXsgpnkV2f2+Fd07GvPbBhDt5xk9fUWxV2Hq35ltv9vlPkzG7
      eY571PDV3+3zN/sNr3+ubObKk1/r8WQSufcxvH7T8//0ZvQD7OxV3PlGj7/8+JRfiyXjKpL9
      5irv/XjCn/T7fOCmjO70CA9mfPvVAf8cp5QNbB5H1t7o8cnphDtVhhMY3nCEkbKdZ4QsRf69
      KN5SXbK10RLMYyJ4Sy7yca/hf/u658/+6hR9GHlDlZfzhu7lKmcY4DLTRRbRpjkS9KLtl7ax
      z9+vtZ+dSEp6c4nAoio4h8tzxAtNNUOrGh9T3kxykl5cA7xwf6yrBxByMW7kxngDmkBKLjKg
      BWfnEa0XuzMAmRl9gcYFZLvH6YnytmWMssBnK5FchZ3DyOuvFbyDsTX0rI1r8nslBzue+p8m
      /GFR8P3pjEpO2furd/nmyTP+Ye0h7wwcX9l5jdfeeJ3tP3qL+/8Y+I71+TQEZr/VZ+9nFf8h
      eI434YdasXUivBQ9a7+1yl/+aMgfWMbTGMj+3Rof//WY/37Q44N8yqNtI//Q+De7Kzy6ITz6
      ZMTbUyHchdPbOdU/jfmD9ZJ/WGlw/YKtBxVffWuVvz2c8ErwMKkovz7gk/tjvpkV7ElF3C0J
      Txre2i7YbyI9B5lCueoIDqL4FAzE4ahTcb14zITTac7nfx5YPS74H3LhP/5uzuk3/JwezjBA
      l0mibQAovXm8w6DTYoq1Kv0XoOdfhiHmaRYGIinjM8syXO6oraGpplhIW2WIgcaUvit52ry3
      e6fZvxhDGm0aseEso3DKsDQOG+A0JWd1ATXXvfj6Ocqxs2PFjJLkgxXrGRMcvaOGOzk8oMbt
      ePRJ4NtrBXtrwoOTyK3MkQ0bVr61wrsfVfzWSTLLHrzuaRDuvB/4zS8N+NOTEVsjQ37whN0b
      e/zZZ+8zef8z7r22yeffuMvW77/N6g/X+R9f2+L/rCb4FSH7UPndr/X5YTajem/Kl4Pn8J5j
      creg+bsp39nN+b+kodwuyd+t+bffXuPP9ofcGTv6Q6X8gwE/f9jwjWeeXi/w41chPI78ljqa
      lz0/Oah4bQL97Zzp7YKTn034ej/n/pZhuTB4Gnj1tue9ULMahZ45sm3HeKTstqkUnemjeJD0
      XuEUI0wkXkrk0b/r8b+c1jz9p4ZcI9stkDpvK+sbDFbW6JV9cl/gXcodXASM2tinnKkvvriQ
      L0hkna39osS4/Ei15aieoCHig9HPSgb9FXA+bdEXY8vMF629X4oR5ppR2HDKdglNLjAyLO3s
      dEXPr2hGKmaXgODIvWJr/v9j7b3D7LzOcu/fWustu8+ePtJo1KtVLLlKjqtsBzu2YxIghJAQ
      vpCQAFeAnAMBQksggUM5gRzIx/k4nISaBFJJnCYXuUqyLclW75JVZkYazcye3fdb1lrfH++e
      UbFsy8C6rrmkvWe3d/bzrPWU+7lvpioB861Dy0aU+xxCK+gbc5k/4PJcs0lWWFKTIX3dWUYK
      ksrLTW6SkiMygDVpJvc2eSjlcSoPewgo1l1mVy09N3fw+J4atzegMlalNqfKgRcPMG/nKcTi
      Kb43lGP+nIUstvO46fZ5bDoWcF3dQ9QNqY0d7D/eYMM5iVtw2dorEWXN8pKhZ02OR4+VWRm7
      6DAi9ZYO9j1d5v6cyx5ZpbbQR7/c5EeWZNhiImhoOicDitdmOFQKGRyDvAtnhhThSMQ1yifo
      MJwJQ7rL0JlJU/Ji5JSmR0KjkFTd0kLhtJ1AGZnwDdHm8haCslBseywkOihYHll+qd9hyQb/
      shBIgfAdvGyKVEeWTEeeTD6Hl87guj5SJPS0YhoY9kY28gb5wMWx9tX2C4RIOrbaGnQcgTbt
      zqgkMgarBNJ3cXJprLToKEo6tFfpsFdMdq/0HJJwTCHIe4rhnKHe1Mj4zYQ6ly5pHRwr8dOC
      upZk65puKzmfCrD9Po0zIbf7DqN+i+PSkG8pumuW7rVZXp5ssLwskCbm/EqfiufSsStk/ewU
      34mq+B0KeVTzlhUp9uU0EwfKXKPhfEFir89y6vEyP9ldYJuuMyYN8VMnWdk6yy51nOdOjXFj
      /yzU8kEKb1vBuafgp4pFXrB1agvSmN0NHlxQ4CXfcv5cgwVThvQyj5EeRbi1zI0dabZ2Wkw2
      Q35fwI2rCzxyvspCbXEmBF0birz0co07lMewbNCan6ZysMGt87O8rOu4VpCegN4VKU5WI4ai
      BJlcm6WIJjRDGYeWjLFS4KDRUqDsBSSQY2iTm8V42nLDzTm+fD08u6eGsBd9y6tuvythdHYc
      lKPwVArH9xLufGuJdYhuBthQJwCuOLqgygIzb/ifWa8/A5w0jBzlIH0fKRLYgwVsFCc7vjE4
      noORELUCiBIHsSKZ3vqv+GwXY9g7gL5cmpE5BSpHz0IkEOKimL8N/b2I+b1dTubCHcmL4omE
      sAoD3dJS1YbU3DSVMwHzkERZy1ltcTMCcc5w07w0TzdC0o2IFbOWMzx6mOjaNBMvNHkw67BZ
      t7AL0thDLZYIB3tthl37K6wWDiP1gAV3F9m+rca1ocTmBMc7BdQ0xTHL2vV5vrOnxELPpzXZ
      ZMHGbp7bVWZ54FBYVGC4q4dMTbPADJD1z/C9A2dYpBWlRsi8e4tseazEna7PEdPCrC0w9UKZ
      u4opXipYpsKYoXOC3IDH8bwmPhxwQ85jT97SiiWZ8wHXLMizZbLFQBOCOCa3LM/JAw1unbOQ
      7ePHsXmFHdUs6Hc5VIvIhoJYC2ROUquZmb6AFdMw64uS2ZzB1iCjL0+CY0PcighrTYKpGs1q
      hUa9StBqEOiA2BqEUoi0j5dLkykUyBQ6SOfy+Kk0juMjhZN422VVj6txjNeiu774pBAkEGZH
      CJCSWCd6USiF43kJrV+9SVRrQDRNvgr/WeOfvhZrTBv3oykIS18Kok6V8OeY9qwuyRxC8pmn
      39e0J8aSI9tpVyAca1CYZJLWGlJCk9EWNy0x3Q71Uw3W+ZLTMmKyWyIahsVTgr5lLpvHaww1
      LaohSM9xGMmC90KDmwqKxwiwQynCvS3ePpRhf9Fw5GSFpS2BUAb3zg52bq7wTuVzQAYMX+MR
      HY/YqD3EMofvvVJhZagQtYCOB4psfXqSt0cpzkQBpzoCxp86zJrTwwwXJ/lhs8banoX0L51D
      170rOPZ4xMPZDLtVQLAyR3VrmR9b0cGmuAWBpThiGdyQ4+VKi9nHBbM8xeGlPpWzmmsbguws
      l+frAQMVTXenojngMnawyhpPMFqwRFbSed7QP+ByJIwpNiGTEtgOiKsxHe2mmbDT6FlmINdY
      Eq5SI3j3LPfSE2DlLXdcYoyuchC+A1KiMcQ2gtgmFOeOQik3IbJtD0yLNu+/1SahNmzH4EZP
      E+q2neGi3fASQ2/vlK+eSRAXPcaSctO42TRWSQITErYauEYgHZcojtFtrL/gv7Ysm7yiRqNQ
      1tKlwHSDpINaWhGcnpiRmbLCoqzEwxIJ8KxFKUlgDDkhaSkQ2pASiroyeLEgpwQtYcj1Okyd
      j+kmcZ9WXlKVFm/McMtsn03VJr6vKEwYCmmorMrC2ABLx17hxbhJek2B0t4Gq2JFepnD86ea
      DLoOjfGYtXfk2byvwfyKpMeznOiGZtrBOxjx9rV5/vHEJJ2dHu5Jzap1GZ6paPKnAlZlXPZm
      DGGvQrwc8c7rcvzj8SmWrFjOxIuHWXdbFz88NMXiwKdvTifjg0WiiQZdxywDc+s8frbE7Jol
      qhu67imy54kS9/o+z+ommXV5qlsbPLgwx3cmyuQyKeTZiGXXF3huf5nF2qNuY/TSFGJiFnPC
      YQ6HEZFv8SYFfYM+R8YCumKFJiLMe7TKIUq4xEa3M4ELklHT32Zm8RtCIeRMr0xYgYiBwBA3
      I8JqQLNco1Gp0azVCFotAhMRC4N1JSrt4WczZPI5soUcqVyWVMrHdZIh9avJIYBL6Dvad2Bs
      guoEkKqtGxXFuEaQ9Xwy6TRSXX3d/+pXu+9gDVkMOWXRLY2pJeN3EouDIYsgLSQpBb4r8ByB
      50piB6SSBA5E7Vym4gq0aY9L5g11X1Ie1/S7MKE1eqHLZD1gdVkyMCjZHAb0CkFPSbNsbYaj
      KYva2WKJB/vdALG6g+qLDd7TmeNAwbC7EdNXc+htCop3d/Hklip3tVzGbcDZ27JMjBhuOSkY
      uEbyL6Uys1HkTmuWPlRk074qN4zGKBlx+kaPqVLEmkMRC671+VKpylztkRqNmfdAFz/cOsG9
      VZdyvcbw7DrHHzvA9cNjnBo8y9Z0htX+ENesWYp33XzGnqpxRzrF7m4Ns33Etho/ck2eb1Rr
      9OLhng0YuqXAM7sq3Co8xmjQWuZR3t1i/WyPHWGAUoLUeMSsZXkOj9RYYqEhQlp9PuFUxGDe
      JyZO5G7NBQTAha9SUD8iLz0BVqy/bcboJALX8cB1EDIBnEVtjv+LkZgXTKNd95MgpEA5CtmG
      IQsp2/F7G5ZqbML53z4ltJ5WeNQzDMzTL3fxUlIihcR1PIyrkDJBZYRBPFC7CQAAIABJREFU
      gAlifDeFSrsgBK0oIKq3Lrnw//RpYAEkKWuY5RtMF4wbRa5RJChawrOTWAuOkLTaJVItE5TG
      NJTamnbHcqaHYMkLgc5K6nVDr4qpxZDr9SjFBjVluKEjzfP1GnJQ4R0XrMwLhpe4DO9vsV7A
      aS0ZuH8ZLz+xl+sCFzkbtk8Zcjkwp+DOmzJ851STnophwEKlqBhf4BBubfHTC/L8/cQkublp
      /L2aG+b7bOuG2r4Gt0mfvaqJ2NDFxKZJ3j+/yD+VK6RnefgHItYtzHF46RDDT+7lLcLlcFFS
      n5sm2lrn3avy/PNwhY6iQr8SccO9nXzvhUlW5/LoXAfeyjzju0JWlgPOFaocixt0nonp7VWM
      9HqUDjS4Me1ypEMwZaA4GrNiYZp9qX7U0VM4VsPiDCMH66z2fY74ITEKt6Tp70tzohqQCSCS
      Fi0VYXSRBNf0V2m51AGu2XD7zC9dK1CuB56c2XXjOIBoGhP0agO9pFPatmArSJRgHIXTDp1m
      KM9FMkGFtckMrDaXhE0J36Rpl10tSigcKXHcFLgJc7DjJAm6iS1hFCS1eUcQW41tJo51JcN/
      XWe4aLOYoSSxok1JCHljyReglhLYiiCf6qZSiGiencKYNiuOsUnYdzFs9SLcT7JXaNKupGYE
      LpasMSgU4SJF/UjEta7imBcSZV1soMlMwXXXpHnsTJMuCx1NQ6pDUF+aI5gscvfkOb5jWjAv
      RXp3yJqUw/m1KfbsrHAjLkdbIfPu62LHM2VubiniWYL9NiIVSdJnDRvu6eZrz0+wDEXQCOlc
      n+fAiSZD5wzLFqV5tFoj7yjcU5b1b+vhm09PcMe8JRw7eoCuO7rY90KZ65sKscDlZRPTOybI
      tDSFO4vsfHKSO12fXUGT1J0dnN9U4V1LC3xNxHQW++g+BytW53ly2zm6q1NoownWpRnZUeOm
      tMdwwXDOCBZ6c/EY5nAQ4503zHYVI4OC6qmIucqlnrVMhJCvaryiz1irhddSCGFpmmlC5jZ8
      5fJO8BWs5FKreBMlnumGlDQgohjTDAjqTZqVGo1yhVa1RtioE0YBMQnBrUw5uJk0qXyedKFA
      OpfDz2RxXQ9HuFhDm7tT4LQ/emQSPSzhSmTaITYxQTPANOML1Zor2fgVehUzYNlpOxXJDq1s
      Eto4wpLF0O8IMo4kDgyBsTQFtGJNHFuMFmjdBma1k2Hs9OjFheTHAjGKIIKMNcjYUOjzmEpr
      7LGApWnJQRMSD6YIxzRv0T52geTx4QrzQwH1mK5bCuwPBB3b6wxlPb4tA+hxETsDHlqe57li
      zMlDNdbFBtkh8O/JsucHE7zXT/Gy2+TEoIs8bdkQOXgbfL6xY4ybY6jWQ7Lv7OblrVUebjmU
      OyTbChG5UY9bJ3xW3d7JgaerPBgU6NWWtQ/0Uflhg4/5eY56Icc9S/FwzPUDHucWCI48W2K9
      dDg1ZGktSKE31Xj7ygJfqVbpHm/BCycoLq3w5cf3sLIYUx7sw3t4GfHxHt6zYJDdQlO1ktyw
      YdaKHC+dbTJvUuIKGFvoUDuqWd+Z4rQKqIeWXCWmc6HHaKXJQOQk5fB0UkCJhSSWFw/IvN4J
      4PkJ4YxIONnf6AS4fLVP+5mHXU6WLKahwVKASsiolHISYlspQbZl8UzSe8AYhDH4XgbhJixr
      rbBFEDRxhEJLiw6TRP1KIdQbrYufkoCrEh3atqoTSkgK0tBZgHM5KE1JZNlSzPcymW6ix6qv
      np94rfeyth2fCnp8xVSnoTkWs9BxGIkj8kM+45OavlrMsqE0T4/VyRV91NmIa3pd9s0VVF4O
      uNfz2KsjxP1LGf7eAe4UWUrXGPacbDAfl+ZUxNr7uti0c4oVJZf+jpj9eYe6J/AORPzozR18
      4cg4fV6K1FjM0Mo02x1L9qU6PzaQYzSARSvXMnd0iGtuHILiEGZeEaN94h4FaYdgskWuDimv
      QUuXmNp2DNFR4evff4lKcIbjYZPCvWl2bCpzp+8z0mk5XbBk90cs6fIZWeBwZleDtyiPo50x
      lYJEHtBsvC7Pd0PLvLiXTBjStbSLE8cihkaP8pJpIeemaO4PuHNJB4+drdJjJVEjonNpkeOH
      6yz3FcdtjPUUpqrpyDpM1kOwbtsO9es7gOP7WKdNLmEtcRRAfPUOcKm1X/orQdv4p39hmWFQ
      Q9o23EEinQTK4EoHJR2UAM/PoNI+CEEQtaiXpzCNAGN0olZoLRexul/dms6x2zelEImBtk+D
      BNEj8IRB5iw17WDqGlc7FIq9TLo17HjtdR1gpvRvk7JcSlgKRZ9ztSZZHHxtUK6gPs+heSji
      zpzLVidCZyxuSVIINItuzPPUniqLtEBo0H0C3edRqw/wjniMf56s4ve45I4ZFhUVIzf5vLK5
      wtv8DNvjKvm7ezjzaJm3ei7lFR7PjzSYX4FaTbPkXZ3s+VqNh1U/18+9hXUfuY2T6QGOzIFj
      9jAHTp3i9MlhqhNjRNUpRCOgs6efc+eHcb0MbrZAR8cA8/sGWLpkkEUdS1k+7pNvTrLty5sR
      Z/fx1+cOYOYrot0hG2/p4JtHygzWIRNbxIYsh3dUuCFK05pjOCQMXcdgVp9iuN+hdCzm3vVr
      2FsvYSNB/lhIb3+TLeMl+koamZXUexxKr4SsTHsczVjCakwhssgOj/GqJhNaagKEke0ewRUc
      AAuOECgvBYlmXdJ5bZNIvaEtzXRt37gT/Hq3zQz6VOA4Do7v4ioflfERboIFQljiZoAJ2wSt
      JlGn1HFMHEczmrjTteCE5/SisiokNXtrQVikkChIuH7aXhqL5JpSBnocS5iTnG9Y4tDiWod8
      Vx9TooSZbL22A7Rbx0ZqlJX0ODCpDFZD3kCoDV1L0oycbtIXQVdWcSQKEbN8xLGIu/uzbM6H
      tEYjVmnJcBjTfU+Bw0/W2Sg8Jq6bw/5XjpBDoUYNd9xe5Bv7y8xuWLqMoNFrOT/korfEfGB5
      hq9M1mC2Q2pfwC2zM9Tnp7h29xLuuP0dTN69iD2LJji2bzvi5UP4+0JyY1nyThbH8zBWEAQR
      9UYNZkv2H97D6bDOOWIiDKGjiSTYtCK9oEj/mmXcdf0G3rLieuYdCDj5re/zSm4nn330MDe4
      iqPNgK77Ojn6SJmfnJfhW+UmakDhH9Rct6GDRw+VGGq4uFbg37OEAz/Yx4bONCd6LBW/mwVT
      Hv0LMuw+XKYwXsIqzfiApX48ZmmHzzEbYENIBwJbdKmUQqbVBa5cBUIkDuCnZtgqrtYB3syI
      42s5wJWGUoRIuHY86SFSHkZaXCROypuWkSNsq0pKkQTZCdtzW3o1ionbnWI7LWAx88bTDMu0
      aVWSuC0SFkxC9qos9DmWXFFyztOUSwaaAt86ZLr7mTIT2Knwosbuhc9tbfJ61locKxEqUVf3
      PTCBYW5OMFxwCUZC1nkOe3RIboFP9WTEAg1dS1NsPVFjIOWgS5qFC3Lsy4eEeyMe7vJ5ohnD
      7Yup/+AgGwsuh1dnOP7SFDdZh8NByIKHetmxaYLbY5/GPMv+VkjOKFIjmp+7r5/swfnc8tb3
      4t27nONiFOfUWbrH0vjFblJzPPyeJtYtYUUVbNi+PkVL56nSRauUQoxq5MlJDh7fx94dR9k5
      uovDYZmmSuJu7YSIokfvTcu4/54f4W1Lb6L1zT28sP0bfEcdYXJ7g3esyPGvkzU6pMIdjVn9
      1j4e2zzKLW6WfXGd7E1dhGc6uM2b5Ntnp8inMzijEYtuK/D0iyVu6enmdM7D6+/CnGhxTVrx
      3JlTpGNJHLTwhtKMnQno9RzGA9sm+r2CA2DBlfISB4iNRodBMtT9Joz/9Zzgchr0ywdEXvV4
      BCnHx037GJWQPUm3nSdISUsHRK0gEeN2FNLxcNql06RRJ8AklaY4CtGxBq2Zmc4S0+SwidJ7
      wi0j0AiUNWQci8lbmqGAusKi8a0i3TeLqWgMpqLXvP6ZP6wVoAyetuSkwJ3tcW5U06tijDaI
      nEO92yE61uKBvjTfj0OMD93nDRkkubvSvPRknZulw5iKaPUrjMji6E7e1jXFP5yYosOHjvOW
      3tmKE8vSTG6u89N9Gf61UiWzLk1ra8A7CylW3bCIGws/Tt977kLO8rC2gYhOI/RudP0wonGI
      uHUe1YwxJkJYg2xTsRgU1kKk5mBL55l0spww89ByEWbhSvrNEtJ7xtj65DM8ueM5drXO03SS
      snUsDWpWhvUP3cPPbnwHnc+d5ivf/hKbvX3YQ5qFOYfySp/DO8rcLnyOdRkaOYU+FPPgnUv5
      t70HGGgobEtTvKWTA89Oclsuww7ZxObTcLrJuhVFtlRjlqS6iYREdGUpv3SeAa/OwVgjw4BQ
      O/91DnA1qMo3CnngcmToRUWq9t1pxyeVyyI8RYyhFTaxYYxUDtpEibCeJvlLt3MJ4bRV610X
      RykcmSjWCxKHII4wcUQUxcQ60QY2dhrpn1QPUiR4/1ZKMNYSM8WAtHVI9Q9Qap1DVOLXvHbb
      Lom6JqENn5tzOG0jbAT9GmrGkF+VYfhAg5VCEhYVJxohqYIiHonZuCjHY4TYUxE3OQ77w5D0
      XQXOPlHjnblZ7F4NR48OM9SUBFXNyod7eeyJSVaFAjcDpwqCwJdkDsb81oZuctUbuelXP4Ja
      0UGsRghaT1Ca2ML50mmqzQhpJbX29J2PIC+gRxg6FBRMhGPakkTp2dA61Q4jFTZymBqxHJny
      2O8txFl2O6uGbsXdOsx3/v3bbDq2nUkZEQmNQEKnx/UP3cEvvf29RN/dw5kD/8ofHztCdxmK
      sUWuL3BwZ5VrtUs8qJjo7ce88ApDAymO5S3BoYA1eZ/D/VAZjZkTCtJDLvvPh8ytGejzGIk1
      /pRlcGEHw6kinVPgC4fKeOlKDpDsUq50UL6HVUkCqHWECfQVG0tXDWd+HQd4zddoV5FUm/HN
      lS5eNoNKeWhpaEUtgnINEdsLZdsrJd9CtDWzLFIlgDrluriug3Kc9nCNA22Fex1GRFFAHBsc
      qxlwLV4njLmW8iSIJhgryeDgzuqlWjuHqemLIVevahQKoFMoWilDM4zJKUnUsszrUxxzBOJs
      zI1ZxfZWiLfYJzgcstJx0Kt8du+psdxRjDciBlenOVi35I8b3rowxaPjGfQqjd1ynltmZdmx
      THJuS4X7vRTPtgK67uvg9PeqvNtXzF/Vw+1z3k/2I/ez0zvC/rGvs2P/84ztrzBZ0sSlmIG6
      S0kbcoFkKtKkhcDJWEopSzYv+OBswfvucdC4SKcP0TjFNJFYoh3Q/itoxfhpxZbDsKdnHWs2
      votVU7384Etf5WvbHmdMhOCIpHjR5fPA+36cX7jjQZ76/Jf50qZv0vlgnv2PTPDuuR18s1ZG
      dfvMiXuZO9hk0+4SS1oKLTX11RkmXqhzx+w828MaoXHoKWk61mTZc6DKUuEyqQzVokIMa+bM
      cjhcNXR15V/bATzloDwfo+xrOsCbXa8V8lxi75fX7tsO4LouQkkc6YKrQAmkEEQ6JGw0sfFl
      U1dXOKiSepadQZVKQAswM2VYF8dxcN3kXykU0loINb6NCN2AUjPA1Gy74WVJCx93Vj+V8ig0
      onbNX8xUuS66MDwJAeD6FtmEPiVoLlCcPxGwRDiMo3E6JVUX3DNw//w036jVUcLQXxL4ysLG
      To5umuK+lM/OTItmp6Kz3I/jVViz3Ofb28aYKxSqBe58hzMdAuf5iN+7JkXRzmXZr/0a317g
      84/b/oFz33ua3IimftagtEtHzmGiFpIuSAotSSnWzO+QTAWaVs6jPtaiR0g+sMTw7g9JrKMg
      0w/hCKew7Km7rPclRQI8k9C9JE4BYSXFlhcjNkVDrHzw/WxQS/nG//4HvvbyZurKgnXQIia/
      tJf/9su/wspKhj/+w09y7ZwmXxqfokOlkWdDbv6JJXzzm8e4MyXZZVqkVuUpb6vx4LXdfOuV
      8/TIFHoqZNaGLl5+vsKdBcXzUYSTdzGjhiVLMrx8ssqg8ZkU4Rs5gIdpnwBxHGKD18+A3ygB
      fr2m1Gut6eckXWQnmUtwFdrEuCKBaZg4JopiWmGQaGW9Rol2mvRctRngpr+gabXyac2B5GYC
      rhOepOB49GRcTMZjKpTQiIlbAboZJmovA11USsPY5qWH0CUfwYISYKQhpS2DPR4nGgEqkvQZ
      QZ0QuTrPxO46t/g+J3siRsuGTqGISzE3Xd/B5nN1Muc067KCna0I57o8ta113jNrOd9bepbx
      XWVWtxzOhiFD7+ri+a+XeFjAHfPS3HrnO2i+6/38j+ZzbPqzv6a4q4IRirAck88JbGApG8Ps
      gs9IOUZ2OXjlEOVIoryDnAhZOeiz/3zAh4sxP/MbPtrzUaqIaA3zrOvx4T+fojvls/EGhwev
      TXGt18LBYGwi4SSsIGz6bH4m5tuN2dz73l9h8Via//VXn2f72GFaRmOtwKQEt//4ffzWg+/n
      q//+eb771ceYlfMIV6Yonc2w4uw4hzqh4kD6uOaGdXl+cLrMgooidEGuSHN6e527ezyeQ2ND
      yFUNPUvSHDreZL5xGc9HNM1lWKDlN99KgnmUeMpFeu5MCBTHISbQV7Kr1zXk/yoHAJBS4Xs+
      ynexViOEg3KTEU0jBM1Wk6jRQr5GH0xwESxCTBt+OwVOcCEzj5x+smctPa6gUDScz0hKdQ8R
      J+oxKT9F3smiOruojJwiKDWIwgBtE2Hpdh1oRmRbYJjjKSZ8S7Ol6UTSjCLmzM9yvBKRLcWs
      K6bYUqvjzEthjsbcnBW8sibNyRdr3OwoDoUhvdflOH4yYP644Ppr0zx9LA8rJtDPB6xdluL5
      bklra42f600x1/N426d+g3DRHXy59B12feZzZIehKQWZjMTvUJQaGs+X+GVDtRLiZRWjowGV
      nMPpsqFPClSfR6UaUzQO7+1u8BO/ngLtQbYIjdM8bT1++dMhizNp9o20SGUiPrhB8dGPuokC
      Z11jGxbqDjIWNEtZ/uUHNXbM2sAv/vSvcuDfnuJ/ff2fqJgQIxN94u4Vc/izT/wesw7u5d1/
      95ekpmLmDQ4xNWuSwy9WWe+kKA1oTtQss8/G9C3Js6feIjeimdvpcagb4qMBSzp8zmYNU+c1
      s42gNZji7HCdAeG82gEsCbeN63oITyWUfzZRV7fha2Pqr6b8eeltgxBq5rmvO33Vbpg5FjJe
      BjeXwTqSSEe0omYCQZYCHSdJsLQz0nVtwNml9O0WZoz/td+UGT8oegYKknJsict2BlcusOS8
      HMzvolktk3LS+K6Po5NTolWvE7SqtGxExkp8H6qRRmVA1C1DvmR8rs/U0SbXOYojIkT2u9Rr
      lq5Jw4ZVOb59ukZBQ28DRNYwtT7P5KM13tPt8x23RZCRzJ6YheqZZPDaFJu+O8mtWjDXt9x0
      Qz9v2fib6Ntu5DOVH7L7H/+C6GxErWQpKkl9IqbaNMzKKybqAaLHx9WaTE6RLjr0TQlmFaA+
      Bd5wzMF6QC0r+Hif4N4PO+DmwXVRzXGelw4f+VxI64RFaZehlOSegYCPfcyDnhDRZxHKYq3E
      HgHRSlTsjx9w+ZPNIWvf99/Z2HkNn/7DP+Kls69cUMAsOvzm73yC+WWHP/nMH5B9xxz2/9sB
      3rUkzzcmK6QzCu+0YdU9nTz67BQ3SIdzQlNf4NHaHXLrNRmeGKnTHSpEZPCXZzi1r8G6Tp99
      zdaVHcBB4jguwksoJqaBcDa8MrDszZQ/L9xuC6q9wdihaNfmZTtu970Ubj6D8Bxio2k2a0S1
      FgnfpphB/F3oBLfR4G/G+JlGCybMbTmpMS7UNcjIaYs2J+XAgspiZuepnz1HW7EH64DMeGQy
      OfxUlrRwMWEEQYv61BReFNM1x+HYeJOO2NJhFVUnIl6ao7a7wUN5j6d6DOVSizmBotGCFXd2
      sHVXhXllwWCf5PlqRGpBimBXwPtWLeMrxRPwYpO3S5d0Z8Stv7CCFeqXkbddz6eaW9j8+79P
      fWeNtPRIpy3VikamFZ2xoDuMWDYkeelkgCn6nK4bitqh0SNoThjmZWMmZwmWD/gM1SU/1hWw
      5gFAdmFdC0zySNPlt36/gVfxmT/fYd/pgJ/LtPj4pwrYdCtRm++zyE4Xc1Qjg/Z3YwWtZpYv
      fr3Kzp71fPwDv8mXP/v/8rVtT4OE0Gi0a/nAL/48b1+0jt/97B9zQ8d5vnSqRDcuYjJg4Vv7
      eeaxMR7IZXja1nEHckQHm9x9c5F/3z3FcusyrgP8a/Kc21XnLbMLPFupkTYC9clPfvKT01/6
      X//dFxIjtSQwZiXbnVObTF3p/1gCfGXhjKujWJGAqxTKcXAcD+m6xMJiTIwxFhOFCemVmRZ6
      A4RAiCTkkRfPHTOdw18dSEIISw+avozAKzjUhSWKE1Yl2ZYy8t0UJucS1mrIdoqktEW1YqJa
      jUa5Sm1qkkZcI0oZls/tJZ7VQ+jkmGs7iFsRqaUuZ6uW7uGQVQMZHmvUcNMS5yys6/QYWetw
      5LkaG2WKA4TUl2dojIUsH7Wsur2Dl0YNd7SaPNQRMfSjGcZWdnHL6Y9S/PH1fMUe5St/82ma
      T07R7XtEAmr1iHwuhW5EVHOK21XI7/98jrffmmJjQbMiK8k1mxQrIXVtmcwpmmcdotOK/ZN1
      NgzAwpsFcSqPFAE2bHAodjm+NaaaVZw9G+Nrh409inW3JpuC1AJbM7w4ZXn8pGV5wcfBgjS4
      TsQNazw6J87y6X/+AT/9a/+dNZlZPLdnRyIWGMPOF18g7knx3376w3xh+yacUw0GM4poVYaD
      T1e4uyPF9i5NFCk6R0KWXV9g88EKKyJFvdPS6EnROlTn+qEc26Im+UpM0XevTI57CTGUbbNC
      X1X157UBQq8WR0tOgOnbFz/m8lNDtzupUiYq8FJKbBzhSRfleNiMSysKiMMoKTdeYbbS2gt8
      ylezBAkEWruSalYxKTVxCMIqEnReotcrJGBNoiXWbiJbMT0ImVClC2HpbBqsaLBroorvK3TT
      0DXoE9zagznp8qPzXV5sRYx4DQqVkO7TlkW3dLBpV5UFOy0FBSczLdSiNKVtTT40lOUrUY3u
      UyXeNqdA6McsuK+Hf3ihwcfDj9D/q9exW9b4/77/v7E/PE0xn6IyFSBcl17fY6wa4PZ6cC6i
      v8OFYkjWC8nOcZgbRzwc5wlL0GjAzm0Ru18J2TvW4ISQeOMSGu2GeWcEjiDnw0glJAoVXVLi
      FyUBdYTIIuJE7kl6ilLL40//qsyW6y2/+3CWOU6rTWkSc9vNgqFZTX7rEx/i4Y9+is8O/S6f
      +PM/oaITkfAn/vlbxKluPvsLn+WRr/weX9j7CrN3GBZn4eByh+rWgFv6MxybF7D9aJ3FTYOz
      OsfokQqLpkD3p9ipQ/Jjhnnz8+yZuFwhxk6LPifGPI3EsdhXITmvuGZkMdWMH7w2vOGCIb6W
      wowkqf0bLDaOwRikVFipwRq0sAglEUrheQotatggSuLzGSdOQiNr5dVu/DNLC6jGlkY5JjQC
      G9s2AVNS1ZcCZFsXEdvmp5l+m/YpgTSkpKJiNEJIXCPpbBi8RT57TgYMjQ5jlOHxNISDGURJ
      8ZPXLuEpFXGgYbkl18HZqTG67/HZubnC9Tsj3PkOj5WmuH9ehr0yYtGKLH7V4f8eq/KLo++m
      +etrmGzV+Ivzj6G/+AKu8qhMhWSzHrYRUfLBzTq4Ywa/16ExFSCUwkoBOsYisekAN2UpxoKN
      8xR3SR8zlaF8IsYREWiBwsM2Y2wsaOqI+64rIEfhB6dbVK3AE07SeXcswpUQaAIrWZxJsXW/
      5H1Hq/zBz2Z5y0CMtIlK4Lx5Lf7mAyl+/fO/zZqf/BU+9+k/5mO/+1uUwkQB6Pvf/AFm6hzv
      f/fv8Mqvf4wdahKu62T0yQo/sbaTr56cpKep6CwbOu7s5IUnS9zdk+UFUcM6Ev9UyIobOnh2
      d5kV0r1sKJ52iGAvq2Ez/YurWeINDe1qJ7Omq5NAomQem4QRTHp4XhptNY2gQTNo0opayfDL
      Re9h2yVOYxMnvpz+5ErJ98xtC76BHmkZ8CRp/0KD56KP1W6gXYDXCZI/lRACLQ3WCiJrwReI
      WsyiDsVYAYZPBszTlqoFeU2GWgMWH2qwNB3w9y/toXTkOFO7jpKdXaLxwGxGD3bzwZVLKPXO
      Yfb8Thb0ZSj5cMNQjv7TMYeXCx54bgXu//OjNE/t4XtyihP/9iX0pKHZ0GQyaeq1mKgnhW5K
      umJLq8NQm4gZ6LPJdm4SVJXwHGQIQif8OtbVCBMhegK61kbk1iVfjk1ZjNXIQLK07JA+VSLX
      0+KdN/usaoRkHI1NWYSRiCAZJjKuZv+EJZgQxKM+H/tslX/ZBZF0MG2i42J3g899JMehb/0l
      T5x4gb/60z+lK5XBCgVYHvnXb/Hvz2/hY5/7DN7yLiafrPFT64v828kJ5gc+pqnp2Zjnxc2T
      PDyU4Zm4ifQc/DMNlm0o8tyuEjd4HmfS4avjAXGF/7Xt4bUNddqYaM8oXsmg3uC+Ky1jbbuu
      f4HdwUoJSoHrYD1FbDRBo4GuN7GRTrS/ZhzMXlXSe0VOICwpx5LPOkRFCFMXV8CmpS3azmyZ
      uc00oM62BetEArrqiyTZDpeDtZhcIFCRJt/vEMyWlF6ucXfa46APh9FktWLWhGDNHQUe3V+j
      74cnECPH2Dx2jDWD5xhJB1x36ypCNcj9tpvRt86i9qzPhk/8Js+4W8hHi/jqvq9S+X6JSDtk
      BDRrLWRKEI2FpB3BuVDjVwXWcai1IBIS62isIzFRhPY0RulEkCMC4wlkFCeFAWMRnkVH4MQS
      4xiW5QJ+9+Od/MrdaX5mQYvPfcjjxlsFBEl32LpJCFtvWFyr6ccQChC9HfzRF1v85SZJjDez
      vaSzDf7sg2lGH/0nHt+3g//5mT8krVIIkZxQ//R//4nNB0b4n/d+iNVrM3zlTJV5FYdCv8As
      9jn9eI27hzI87gakGoZZoaKwusCL26e40U9xsk/RipxXnwAwnUg/9I8qAAAgAElEQVReuG2T
      JOCKu+Zr7qBXsd7oscKCtBZHKnzHxfV8tIRm3CIOWxDqGdlSYRL9u+nrmI75/8ONawt1A2di
      w7mqJi7ZNuND2+hF0u2VMlEiScqiYubkaasM4yHokJLzIqZqDanI0qkNXSsy7BmLWHjOkE7B
      di9EdUmcE5r75+Y5ORCzY1uJdRLOB5qBu7OsnArpTRmq1Qp///3necf4CcI14xzO1bh76QfZ
      2RNw1x7L9msVjS8/Tw6XDJpAK5yUQLXA8aBuNB2OoikMqVjzhYblQ49GfO6Qw6M1n1HhE4kU
      aIV1LFYZZJR0a60vEkG/KDFV45hkrBUJhGQGWwzdoehdblh8m4stamw2hkhgjaC7ZUlrjTfX
      Z8oY6icDhmyGf3mkzu99PSJEYUi0f1OpiP/xkTwHH/8btr9yiE/99u/gOGaGdufP//wvKC9c
      wPL1d9M3HLHoriIvlZr0HbX09cKOosEeNaxfkOdkOqZysMViRzCyxGPqRJ0bs96lVaC/+j9J
      FUhKiVRuW4graemYOL5CXPQ6xvuqBlhb1A078+/lp8wVEaOQDNW7DlI5SM8BDCJOsPsuAkc6
      TAsOqTYMJZn5lK96j9dd9gIPqsTiWEvWWqSWxG0I9fRHlLZdoUrnCdwQWw+wJExxEsEFZT1J
      7Gu0gGwD5s9yOKYF0fmQuQImrMFdnaZ8TLM+djHzFS+M1ChqoG5YsCLH+aLm5r0hs+7N8sUd
      ZaK8z/vG4a47PP5xlWLOF+ez+rYfY8vxv2VJz/383fhX8fcP01McZE5fJ13FTroDj8iEWA2+
      EjTimJxU1NBo4zJyGA7vtnznySZf2xPx+HDMMas467pkHUnRWkiBCNpSro4FN4vSTYg1CI1V
      AuHKdrkckBJ0iE07CB2DFixIwwOz0nRNhtjxFhlpOYNFDWXZuyviZDnmrpUeqj2O6joBd6wq
      8FdffIa5161n3dB8tmzfntilsTy37UU+9dFPQP8pvvzVI9yXSbGfkGBuiuDlJj9yZw+P7J9g
      UcslMCFcm+Xc9gb3Lu3g6cn6ZWXQv00cQAmBdNoqiiTxt9X6TTvApdSH5gLk4JIo+lIDvCQE
      az/M0Nb5AoRS7R6rTEBsSqBcFxToOG6fKtP6jW8y60UihEVagyug27X0FAQ6r2haAZG96JGJ
      M6RSOQI3xtRaCJF0paWUaGtxhEBLC5HDQgW1gmS0EtMbCyJj6Z2XYlQZ3GMRGwY8nmvUaeYE
      csKw1HikN3aw94UpPhw6bL9B8fxoC6N9lh4O+ejdHltul2z6esQv9v0s37h3gmVbz3Lg1mt5
      5G8/z8RLU5RrJc5MTFAOyjQK0Dk4QF9nF919BXpkDyIIiGKLJwx4hkYMTuiQqTsMn3bZ94Ll
      qacCXtnd4kcWZ3DTOhH/8xxkrLFuB4SVBDDuuxBrZNymhE8LiCJU7GBCA1mJyIJsWYoDmjXr
      BA/cmuXW6xymDgccOx0x6HjsH404M2W5bbWD0w4rU57mlhWdfPbzO3jHL/wslCMOHD+MtIpm
      s86ho8d4/0/+EuGWJ3jeaRFkFOlDARvu6uHbL45znfUYT0WY+TkmX65y/6oi3x2tMDu4XB+g
      PSV/+VTThRLi1a2LKz9vlo25HW0xDVqb2XK1gcjgWNFWfXQIdEgzaBKELXR8AYrcPmfe/PsL
      O1MJQ0DoKM47lok4RrdejYMS0xJNJm5fc4I0NVajlCQSloKFgq85LmOC2JKOBJ2+JbvU5eCJ
      JtfVXKK0YbcAmU2TPm5428o8u7o0I8+U+JmUYs8awXivonRQ8+NTkt+4TeFdp9g5HHDTS52c
      u3slTz3yDZY2b+OJ8Weo7argOw5h3eIYl7Ac0xqvcnzfcY6dOM7uI8c5FpwiXphn1eqFXLNi
      MXNnL2LQ6aUvnaUaW/wwmYf2HJ/msMJUk2uWCMR0LoBIHMJ3Ea0YaROhPhyDbFqUdtDSJNxN
      TQmBxaZlkmu7BtXVYs5QxB/9Zgdf/FmfvnwV3Z3iG8/CX/x7jMZtdzRD5vRU+MT78vz2n32c
      n/vQe1m+YClWaJSxvPDSyzz77A7u/NMPMzVhWV1X9K7N8dj2CdZqRbTQY9z1yB5usXp5B989
      X2WwIuicnb48CZ4OU6Y7oTPW+J8Ipt/EuuhwsHCBOdpOcypIhFRI10H6DihBHIVEjSamFYBp
      N9esvSIT4jQb9cWs1Jc6hka0dbwiC+VAUypb7GTSyHnVstNJsL34rkStxhhcK2gIqHsSFUq6
      G5bBIZejsSU6FjDHE5zQTfxlWcbPtbgvVrjLFD94pcmasuUBKTj7dp/H6jH22yEPzc/TNFWG
      bpRsyQSII4r3fuDd/HD+Ce7fcp7xu5ax96knKFiXZqxxPYXWAcp1iJuQ8SWtMEoS16mQ6smz
      7Nx/iH3HjtAonyK3SJNb0MvC+fMZXL6I7u75eNohZyS405KwtEu+YBwHRwtEK8IIgUkZbGwQ
      sWqHoQbhe8iIZJa8KRBGI3ps0jUPk1heeBXW3Gr4P7/RyU/1tVjtK/75yYh/ec5gpEAYFzCs
      XSR417IGf/CZP+Yzf/DbZPwUkXQRFj7/d3/HfNbxBw/fzG4VMnKyyaymxbuzwN4DVW61imYX
      7C/X6TlnmHtzjr3DlcuS4OnQNQngEqMRkPBaXuHbf4115d32TerxkXRylQVPqoR31FXEJiYM
      Q6IowMYRyoAwSXhmZkqer65GJZclLvmx05dhk6mwC5eV0KB0SsugI8hkZQLlvGgZYVHTQLc2
      a4VCEGOTrnT7MVoIZDVmUVYxmbOcOBfSowXaQmpxinLaxdvd5LbBFI8266QDy2BgWFuQ6J/K
      sml3k4eOpajmNDu8Fvf3pxCdlkOdaUaecfCdGxnf/yT9zgpeWlqi8fwpbGxISYk2GomLjGNk
      GlqBwZUOrrAYRxIGoKxEacXZWsjI4SlKr5zAVIcpnz5KPTpDZl4vfSsWITvmYbwFGNGNwcUI
      BxEKtJDgyKQf02qDzIVN2ERcCc2kajNdMBCxgrKFvMA4BqTGKAfZAj/X5Nd+Pss9GyNEweXP
      /rXFlsPJ3HfyBUa87y5BOtrJU08/x6/+0i8ihMYAQRDy6T/6cxa9+8PMihy8ckT3/UW2f7/M
      Tywo8mxcp4XCH4lYfmeRZ7dVuT2XuTwEam+/0/W8mfunq0AXTog3E19fqK23ia6Muahp9npP
      lEk4oyTCFQjXAUcRa40MDSnrkvUy+KnUtJbHf2Bd5qwiySAyQpLLCGQnxGl9WfozPVNAkieZ
      GKkkMQbPtB1LCtCWPmuQWcmxIMDVBhXBQMGg5mV55WCLmyOoeXBSagZyHqnzmtXrU5Syhr2H
      6yw6I3hBNgivSbN+t2XZLZbT/Q7bHqvygFzLmZt8snaUxYtu4qUTL9J9qoWrBAaDMgKpLJFj
      MYFECYGjLIG1+DrRQnY9QT2OyVpFaAxVXE6VQlxjGXJBj5yhcvgINjgB8WnwY8j0Y/x54A+C
      00+sU3y7ItgZpxgTLkHGQWuJiEAKg5Ux1rcJtWZsEbFMmAE7LGiFjE1SgpUWpUI++DaXhxbH
      zJYOv/2FGqOlNAiDkRrfBPz+ezr42lf/hnVr1nDdmpXtUEyyfd9eTmx/hZ963ztxNuTY/8gU
      P7oswyPBFNnIo6McMOf2LjY/PcnGHp+X/Pjybfmi5PSiLX86B5im8ps2YIFJds/pnyuZ1yVz
      vu2Gi5jutk3/vNoOp5fBEsURURTNsMZJY3GkwPFcVMrHyWWQaf+Ssu1VjWhyIV2G9rwrJim1
      YhiLBadrktYUCK3bTKl2RqleCDAqideMSSRatbAYJZCxwfXgPIlmgYhdOmNJ3zyfA1VJ6nST
      LgWniOhb7BCNRdxS8JkYVIzvDqj0G87sDlEbCoyEllXbDO99i4O/UjJWi/5/1t48SLLrOu/8
      3XvfkntWVdfS1bV0d/WKHQRAEgApkiIFgZtIUbJIirKskTQaKyZi7FHYljQxipiYGY/DMX9I
      li3bsiSPZxiiSO0iSIE0RYEkAC4AsS8N9L5Ude1LVq5vucv8cTOrqheAlKkXUWh0IZH1XuW5
      957zne98H7ecFdz74Ht4Xb7Avi+3Kd19gvK5F7i9FnJr1XEkgNmSoGg1dRsQCk0QCpLcUZKK
      Hg4ZKdLUUlKCDHChIOxZYuFoCsW5rRwFzNRCwgiU1qikgewuoJILkC0iXQNXHuep1Rn+2Wdq
      /PxfTfI/fC7mN5+Dv80LvCKLdFSMS0Pf0Y88hBEkAtF22KrBRr69KBGITKDQ/POPlyjfY1hq
      hfzGpxsYEwHeCHF/vccvfzTi//iX/xf/66/+KqoQ9lW5Hb/1H3+fB979SYZeldw2E/BYrJFX
      4e7xmM50kUvfbPK2WsyrE5bOqnmTvGQQl3sL4J1GgQ+U7xVkNzSYdpbQgK48cPA2/mvPYhLO
      gvCaos46rM4Q2ufVsQqxQpDoHr08Ic0yjNE7vYqdxXNdrn9jQXwN7IQRHuKTTmCcwCWOSksT
      WnasdvY+204a1ZdfHDgWBtbiQoHW3stMbVsOD0tWJWyspFSdBa2p3xZhlWLisuX4bIGvrrUZ
      bmqGaxnUCui7q1x4dJtPFksUah3qh3PS2HFmWXD3vfvJ7r2F9stPcXdlks3DZez5CwyVLGOV
      gMP74dgQvHU04FjdMl2RlK1mKBJkzhApgcwNSjky4U+vciYhsmRBQN6z3mkFSSPNUaHzZuCC
      Ha6VNCB0AskVLi5dZv75VS4+vkRntcTnnzrIv/rMBP/kP+/j5/+ozu+/pngiizEm8jQqf7T7
      32PoPFnOCqwyoGC4mvLRu2LKWJ49E/DpvzF9PYEcieFj90lq8Rleeeo5PvHJj+FJ746VjTUe
      ++LfcP9P/xQXxgL0iwkPv2uMr6232XdFUy04lo4qtl7O+OCJ2rULIA7DvuS52hnr9M57u1J/
      g2FxHwT0sXaFN53fS3i7WYpzHQzqBkZy7rovj+JYbN/eyAemwkujqChERQEGR5Z0ydptTFf3
      YdZrOUY37y34k2sHLO3LokjETqpTEY4DBcf4WEBUE6B2z4rBe+MkSjif2QmBcwIlFEZIhPZP
      OSIkpgyXWzlh4NBdy9xoQHIgxJ5KuKcYshJkpMoyWpS8JVF0H67xyLdbnPxOxkRF8LWgyzsP
      RZQPhWwUJI+uxsz/9QTrB6s8/q1TlI6d5PWJbS6eb7NoApo4UgcidEQFw1hVcGJIcs9YxLEq
      TMaWan/xWylQ1lKygqzgSK1DpZZi6AhiaKaG0IAIBs/tP3jhJEZ60xHnFFmiiYxhn4RXXlpn
      7exFFp+5TOfFZbZ7lv/01VH+z98b43eenWJLHcEUK5AFiK7ECoGJNU5aiJTPjlPHB++SVPb3
      qM/V+A+P9ri0GvjmHJaIjF/5eJnf//Tv8jMf/nHqo8NIIdDK8enP/Qk//tCPE51XfOBDY/zJ
      t1Z5uw5Zj3uYkyVWnu7yE/cP84WLW9ctgEqFYq1KuV6nVK1RLJWJogKhjAiEV1GQiP5ASJ/1
      JeyOlMi10IvcDZQ3uLxspvdKHyQXbs9OK6xBCU/NVkGIVZLM5OQmRZsMp7X3IrCDxfjfglTt
      RXD8MyjnlajzImwoS0/bGxa0lzaUaOnJcdIahPKTTKG1fpcMHA2tUaF3rj/YDRiZi3l1PeOW
      DUupANsly/7pMr3NkPceKrF1q+NbTzR5exazYDPcO6o0W5o7VgLcQcG5bsBc4w4ePPEeNg50
      iAqziK05rnZXWVwqcLkV89pmxOvdkDMJbOuIVEgQhkKUMVGFO4YjTg4LJiuGUQehkKSRQ6eW
      0AhKBUnXQaoNCsG+QEHom3/9MQhvudZvaBqgYAOCOGK9p5EaohSO7g9oFwQXn9vAnFpi+bVF
      vv3kIr/+H85izBCuOI2IZ3D6KNQmcCpG9PwJLIDhkub2t1RZvNChq0N+/88bWBt49qgw3DbS
      5cH7enz+j/+K/+7n/xEWgbSW1e42jz/yVR765E/xZ99Y4/5AsbFf0hmuIJ7t8MNvr/Gnr29y
      7HoqRO40Rjifs0YhqlQgrpQo1iuUhmqUazUK5TJhoYgMIwIRIJxEWJDuZi6M9pqvN8/NBwX4
      3hSJHUEsFQTIMPDFUJ4jtSEWAcWoSBiEnv//fZLsdq8dOVyAvpWSb/U3rWWpDc0NC22BsNed
      JkJgpV/mynhWKsYSIr0qmhSgrT8Y2ylH6gXOhinN1YRjLqRQCBm+c4T1rMzB1iTuYIlX5lts
      x4reWc3E0Zjto0Xmn2jyG/UhDr9HYI3mTE+Qnl1h7uOH+dL869yypJi9dYLGVo+jR+5k9vBt
      1PbPYdw+Gp0qr7Tg1JblSqJoutCPdEQ5I2XHbfWQW/YJapWMeg4FBLIoaKU5AY4yyrM4Vc5g
      XvqaOlFaEA4lBEu9nCwxxH0ksVwMOL2syVuWihaMhI7y4YCXzmief1nw4lcWUOklbH4ZZS9B
      swND+8lLk2TlGUxlBtGNePuJiMBZTkwXeUYrvvp03ncqFUhh+KUfLfHFv/0zfvStb6O+f8T3
      ZoTjj/7yL/nUQx/lqIxwDwxx4WrKPS1D+WiJr1/cZrYN1bdchwL1trboNrbobDfptpr0um3S
      LCG3OVY6iBRBsUChUqZcq1EcGqJcH6JYrVAolIjDgh9eF54kfP2C8EPpFme1/3Lmmp11t9rw
      CYkVktxYXwRbjbbGqzE4QagKRIUiUalCXCkjYrVDh9j9+jteOy6DDuW8Ls24EMQROOlwO3Cp
      r1uUAyP7dG3jh2+0xFshGQuBoEYEoeBC0qOK4nAnZvaWElvj+xBXD/COQ/fw1OFRTvcaFFMI
      Ny3HHx7lKxc63HnaMjUsWXCG+BYQbcvUvkkYGcVcqnNw/SoXV1qEYyVeWTrNxcWzXO5tIKqK
      0eNH2X/ydkaGD6OjMS62A05vOi72BB2tsEYiQ8tQwXFXPebYCFSqDtnThKGiLAWpsOTWEAZ9
      lWvpT/oBF0cIh5MODWS5oCYFEX6ofbNniIEYmD5U5KrTbF7WKA1lpXht1dNEpBPIRCOyLrQu
      IctXCDuLkKxAscoDJ2Y48UMHWXNTVNL9/PvP90i7xZ1YmSl3efcDGY985i/4mU99os8Yhatb
      q1x49hV++Nce4pmvNvj4dJVnRc7GdkZ13XHofcM89/T29UWw7Ne3FpPl6G5C0mzT22rSbjTo
      bjfodZokSYfMZBi8LHlQiAkrJaJ6lVJ9iFK9TqFSo1goEwYxgQxQO1LhsNPg3UGBbL8DO0CH
      2NmYrQCtDS7VSK2JnERJSUpGVyf0dEJqcq8L6nwevvNlB9Ct2Qle8aYLoy+XIqAuYbwmKE9I
      qPW7vnvSOukEUims0yjrH8pIEMYL6uaBA21pk2FjSSFV3BcWmbhtgs3sIHcO3010/CinZgqs
      Ni9x9FTOkfurPL6WcuHJNu9IFOeKGcGJmMlGBzB0xyN+59kNRpZbNCbrLNa7DJ+cwyQRhVQS
      5wWCjR7LV65y8ezrLK4uIEaqTMwdZ2b2VvLCOIu9Iq9uWC5nglbuf+OhNExUBHfWJHNDkrqC
      jnMY66hYQSka5D59DzRhPR1FDIhwFq0FWQwNBy6BfcJTaGRB8PrlHoEJCI3llpmQ5cDyxDMJ
      tisRVmBCA8rTpmUOTqYonSJZoWcv8erp86ytzDOxD1Ynj/Loq6OYwhG0mgQX8ql3V/jSE3/N
      jz34HqJajHMKJyx/8mdf4Paxh/nknRX+fLtJVUvijZQjD4/x9a+s84HZ2o0TYTfNIqwDY3DY
      PVNXChRIpZB9Awwx8AxTwptiRN5LC/rBaAxW6x0jDGeNN8Fw/pe522LoO8rsAWmkgFCGhJEX
      68pdTq/bxfQynB2YHVx38wNOw00w1ps9p4CdwZ+ehGUB3a4la1o/BCZ2xzh9q8QHvu1TSKRx
      iECRu5zYCIz0/PWJTsTR8TqyOEpxeIpSvcq8arMQrdF89Qrv2Ghx4LjkDxttxtoBMnNkdwdk
      K4LeV5vc/7EytmjY7mS4SymFxRorMyX+63/6Nv/01CTtX1SsnGlSnBijJBXVTo/uxgbtTo/F
      rbOUKhUKQ3Vmjh4ha7VZWl/lYnOTZmDYV9aMR4JIGEoRHKoHhJFBtQwtp3ASgrjf1b0hLgRW
      eFiz4hyNnqHiFKFytEPIjED3HEUCatIQHCzwwpUuyigyIcm7EFYMihBnckQuMNrh6gLXs8iu
      oi4F5YJhquY4t9xgq7fC7362zcO3DhMP5YhokrlCwDse0rz03VP82Icf5q8+8wjGBjz1+vP8
      Wvlf8K/3V6i82mJ2UrB2rMbLX17noQMlvhWmNxuJFNeyHty1fHz/iv5ObiTWOIzQ5ORAAkIg
      pNhdGEp6Fqfs/xmFO8iP6FsleUcY7XF+a3Z2bpCo/mKQQnmM3WmwjtwanDY+z7bSOyu9UQng
      JH2DomumxG7yeeIVPwU9a0m3hWeoDyCxPvXBp3Se8rDTJESAkmijiYRES0esBHOyxEhtiOqB
      WbKJfayqhCy4wKuvXWViNWWulPH46iYfma0hN3NuiyPO31Pgha9u88GRAqdmFQWde0HdjuSh
      e8ukL0WUO23usRu81ijyQwXB6sIVeO0yYanI0Og+6rNTDKU5jcYmrVaTbrtDM16nPjHKzOEj
      NNeHWV9foNXosl2wzFYkVWmRQc5MSTGkYs73NEsNTRSE/bNxNya84K/3i06tIHZwpBxxsafJ
      I4vuKWIEERYKhg0tMJd6RCagJB1zs5GPAQCt+z1Yh4glZNYP0QiDCixpLFjoaaqZQixqrhLy
      X5/o8RMPg8svI4XkfSdCfvv/+T3+xb/9v/naky8TigxMyHNPvswDkz8E93+VL5xpMPFCj+l9
      ihcnJN3nkusXwO725rUs92Qj4tqXCejPcu42joXwUuQYvESJk2T9bVwogZTKm1+owGt1Sn9S
      BChwcb/vYKFvfepMX1BJeHMKqSTG5LjcoJyg4AJMKEmNxhnj53X33KcVA0ucwV2+SceNXfsc
      iSBygsnQUapKruJotRyYPte//2H5EULvWGOFAGsJha9FijJknCIzE/spHz7K1SFL1F3g1aWr
      dM5tc7uFhSThdB2GajHljuOeozW+8Y0Ola81ODEV8/hah4fvKCOHLMJotkYCXviTTT7cneNK
      OWF9LqD+nR4mkQTdDlm3Qy/tkW23WIsjqiNDjI3upzw8Rndrjc3mNo0rV2mVGoxOTDBXv5Xl
      1UVW1ldIdc5UDfYhCIWmXoRjgaBuBEMVDcT0u6F+k0OAML5R6RRJblFBTikUbCeKfQq2jcWU
      Fb2OHyUNkRybVJzr5GyvpkSFAKEVNsgReAke2bM4BGbIS9lnxoINSFdgcsafzMOHS/zh17f5
      yHurqKiHcPC2/YqkeIni5Q5xDRZfvIRVki8//gV++V/9Ov/zP3+ad+0fYVFl6LkOrSc2+Nh7
      hm+yAMRgxE/tpCfWXTsG6A8Ai3O7qYr//rXEMCEG+CRgfUBaDI7Uh6PCnxCyr+YsQ5Tqi9kK
      5eEwKVFSEUqFDATOWh90UpKFOcY6MBlJtw2Z/1kDZTfRz80Z7P432fnlDt5E/5STKOeoKCgN
      Cbp1Qa9rsS3/PgqBc6YPCPuBEev6i0f4VC0QEdNRmUPjh7CHD9AubbOwcpHF02tUE0OcalpF
      QXcuID2f8ovjZT43mbLxjU0mOyEbVcXI8ZizaJpPdwkeKGPJUU3DhJEUJktcrVhO/UmDX6pO
      UYo1J2NJO3a0bU6qDdsmZTPp0dpoUB0eYnxinINDIywtXyXpdli8cIHa6CjjB6bplsqsLC6Q
      bHXpljKmyxKFoxo44mFFtZjvwN3+uU0/PvwG1ZWOzZ7FNeFA1VFGsJ4bbKToti1FIcgx1Esx
      p1YTlBPcNqpwZeGRpFBB4mc8PNgiIfEI2lYuGUsEa0JTG4s5e1WwfT4htoLnXzTcd5+H42On
      ed/9EX/z6Jf44MMP8wcvn0cawzOvnmKsqzhut3l5a4tsskS0WOCTP3MPj768erORSLHn33fb
      Uri98Obuetlbs95stPCa5dVHf0S/2yu1waU5OklJ2126zRbt7SbdZpu03SFJu6R5QpYnGJMj
      hSIsFAgqZaiWUNUSYbnk0aCogAolQvpGlyfI9QvsXb2UG7f9vfcn/EstkqZzXOrA1RVHtubz
      e+W8wK6V/XI4kBij+214i5SCIjFHSvs4Mn2S7Pg4226JZ15/kavnlggbKSrJ2Hcy5GI75/Ap
      w5HpmNNb2ySJAxdxcCJi8vYSX/9miw/YmMmyRUZ+CirMDXPvGaLdMdwpNfdMKb5hu8RpzlQ9
      5Ng+wx2jcMuoYKjgsHlOr91mfWmF86fPst7pMDVzhNHhcWQg2F5eZunKBWSpzPTcEbJimcu9
      AucbYKzfCAvSUK0EIDV7T1AHCJHjhGTEOj5RsjwYJ+g0pV4CZw1BYhiSlkA5XCFgvZujrGC/
      sTz8zhhk4s/bpA9gCIeLA8gcQQ8IBOtak/Qs0XTE4rJH3wIHRw6U+MvHe/1mqkO4Hh+4M+Dx
      5x7jvW99GzoQSCtIcZx79lVO/sJb2WgJps72mBlO+fRfP0v9zPwbyaIMIsL13/zmATM4Fb7f
      Afob1B+ue70Uvti01mA0XkkWCKRExUUCpSAs4JQgNTl52oP+GEChUISo5BegsRitsSb39YW1
      fYhUXP+Tb3I5jzw5gehZysrbbLZlf6c3Din7/md2N/2TUlFzMZP1YWYnD9OcKXOhcQmxtECz
      2SPacBwfiziV5bRe6nJnMeTVkuFgALYgmdGSwh0xL5xJKXy7x6GK4lSnx8+9q0xgLUSwGkte
      +PQWn3CS8zZn/WhEfcviLvQIihEm8Op5JjReLbst/PNrAzpnNenR2trmwPQ0k5UKK2tXaTRa
      ZJ2z1CenmJm7nbXLF1jqrqEbmuM1hQpyiAQIhRP5LrosABsinKMuUn79pyvYH5dsL1uW5wXP
      LcCrp3NezyyXtz0dvGglk4HhZyYd++9xOxRzJyyuFCB6Gh92yi8AACAASURBVNUzOGGxKsBk
      gldzWNmWlNYz1JTm9vECZ7Z6nMkcq+cMrQ1FbdQHwVzFoQ60Ka6mTByZpPHaAtY5vvPUc5Te
      ezsf2vcEj3cT8itdJjqa0fftu3YB7N393R5UfpD63TRc+kjI3te8kfLz9deO1IoY1MV90t1A
      H8jhC2oncblFJwmZ0xgBvTxFd3vIvkO8CiRSqX4BLgmjGESx70vs7VLROUZrjPVOMXanwN3z
      PH1aROQcs5FkZBSuRoLuOriO8xKMWGIn+9NpGomgIiP2VYeZ3X+YbLbKua0LZGfncUnKhLZs
      Dwte2OwwhqCoFM26Y7gcsPBaykcfrPDUdsLGWsZky9HNLUcfqPPEs9v0vpYgP1DAppp6aoi0
      oj3myCiw+FiPXzk+RECDuFahIyzSBQiMP5PEbkMyzy3aOLTZ5FLSY//kAaamDrK6tEC71WZt
      YR63L2X8yBwrlwWrW2uIVs7xsiQWgDD9D8TDoR6i8Pwnh0KoFFl2DB1RDB8x3EKIs4psW7F1
      RbO0kCNzGIlDJt8iUCPGq0A4jS0oVNeCUN48QwUIZzBG0F4IKZmMURkycbjAs8+mYKGwYWi7
      kG8/k/Pw+wEkoc14222C5598mnvfdi9fOb0MNuOVV07xq7/yE3zq33XZJxTxZsLch8Z5/Isb
      N1kAgzxe9JdAHwVyYnd57ApZ9YdnnMfJ/Ugh7HLr33wR7D05xN4/B++PIhASJZSnQTuLzno4
      K5HGEGnPDsx1Qj4Q2hK74lleTa5vthdJVFQkEH3LaudAa4w2flEY7c26kQjhZ4vTkmA+cqx1
      LTZh53cjhcIJP9kktSMOI4bjYWbGDxJNVTnduczmhauMNFPasWUx8aLCUSYZiSVTd0Q8tZBw
      ZFkwNCFZyhMamUUtwy2HY04dDPn6Fxv87HiRuN7BGR93VQFTHy5z4Q9afCwv8Oe3h/yX9Ta3
      LTcYnhij0x/m8f0Q2Es5F07gjEH3CYIL81fodUc5MH0YuXyVXmuL1fVVrDEcOHiQq0qwurpC
      gRyhdjn9TlqEUUgCjw6KvpPOjqjZoAgzEBjiYcf+IZi8a2AV1Uf4BLhYIhKLTLzImI0EwvQ/
      R+N4OY/YeinljrsLvPC8Jl9McKllGEGoNMFsicdebPKjDxcQfTLNW0/EfOFzT/P2//HjfPn/
      +zzCCS5tzlOxdYZVxD5tkO8Z5skvrPOR4zfpAyD2BqaH+26OpO+JYLFbIg9oz86575Fxf+/L
      cytBSdFfkLbv4xXg4v4csDC4PEH3El9f4NnaBtAppMLDlUKKvgWrIgg9GqWiiLAgiEXfJM9Z
      XK7JtcbqjOWOxnUcpt9nUM4Xaa4P4QYIgkBRDSpMj04zNFln3q2yemUZNtsY4Z1fcBC2BNPT
      IWvNHHE2YaoM59oJd91e4WyuufeSRr2rypdf7XLi6ymHy5KnVMLdJ2PoWhhxrAnBxc+0+Imo
      y1pbsH0kpjofsPz8JYY/Nck8AofBCoOzfkPye0l/oN/55zCZBuPYMKvoLGf68CxrkUKsrbCx
      tYJxlunpQ8wLWFxcweYgnAZEf1aqDza4waBUv85iLwjiBoXCbsNzL4IEqN5g4QhsUUDmUDoE
      4dgMIz7zoua5s46pYYmwkv0EbODYdzDm3OUceTHlO8KRbMUU9rURDu4aFfzm1qv83NRRXOgI
      UsG2NNgrG7z/Iyd45LGXKD7e4Z7pAk+G+mbKcGIn+XF9WPBNrxsG33d3/73pzH/L5XC+P+As
      SiivUYPECTB9gVq3o9S25xTp/669qIUDZ8AKnDbkCLTv43vd0EAiAq89qsKAOIyIihFSlolx
      jDqHkJaraUK3pcl1jrOakACikDKC8aFhqpND9MI28yvzdFZb1HNHEgMdyUhg2SoK5lcyRhS0
      I8tIJcYcD1n9dov3/WiVPx7NaJ5qcWTNJxX199d4/mtdNr+ZIz5exnY1kyjqQUbnSML+Yon6
      K/CzJ0s09DJjow9ihSOwCi2F9zLc+Tz7H6PYPRGsMaSpYXvToTPN7JFDNIQkW12htbmGCgTT
      E4dYSdrEQReHZifRFRZPD837f4drTvt+0O/4NAySCoRvqg4+XaEhVIjcef0go7Aqo60i/v2W
      5It/3CVYjXngXstSRZNUHWJCcf5SirKOuZJiIYOLF3rcOuLxnFqQEu3PqKzl1OYmaZ9eRhnH
      wuUFXlqtM7Mq2S5Yru4P6X73BiqEuK6g/R4Ctn0G6G7g3/jiv8tA/I1vLzzxyQoUilBGyMgX
      e0me0uu20Z0eMrNEIkTIax/HAvRTM7f78SH6nH/rHDY3mCQjb3VJG9s0N9bZWl+lvbFGubPN
      6HCOm7OIySqlyTFGpg4wOjlNed8YI+Uh9lfHqU9MEBQ1q+1F2kvbmF5GhIcHtdGsZg4pHD1t
      GJOC2tECL6wZ7riUMzYa8WSe0dy0HFgU3Hp3hbUHirz+521+rhKhKjmumYFzVETG9PtqXLy8
      wfSFHnfdNcvz2216CxfZX5yFIYUTzg8MOU0oHAq761HvduUuPePFkGYJrXaTK+cvMlQaZmx8
      P1kkaKyus7W+wsTsMeJKhV3VpcEV4KTe3eHZkw0MPu9BGrZXZ3YnSgROKETmcMKhUXSK8Jwo
      8M/OOv7oNzuU1kJOjISsrea42wusdyxuOafmJIfGAhaUw1RLfPe1vjOPsATWcXKuwNL5S0zN
      TiOcQWC5emmeHz9xkNWCJp+L2X66yU++f/y6GkD4N3E768Ln/7Z/89fzByxeIXmABIn+btBn
      8nt7ocE7XbcIvp+TQdLPMYWHyFAOJyQGg7EGpS1xUEbFAUhIbEbWTbxODXhQfkem1i8AP/MM
      iN2nHLjC4zyTUBiHNoYVl7OxltBcA9PwcjE2kkSiwEi5TmViH0NjIwxFEZIGWUuCKVB2OVIK
      tPadUpQkbhkmJouc28rg9YzD1nLWGk5MlUgbKR8LYl5+d8gjZzvctx7QqsBjKuHjswVMwyGP
      S3QG3ZdaHKkVkJtrlA9OIE4tUigsMybrhAeGYX2TWMBMqCjGlm0gMYrUeacWPwXhdUzpQ51Z
      ltBsWa5cvMzskcOM6JTGxgZrq8vUnKR4/wxOdPBTgL4YtkKhRIoTGisCjMQbALo9CXOfLWs9
      UdkvAOUhXYfoH0gOHQg+fyXjPz9nOH9OEp6F40FIcS7m1e2c5eWMkyMlTjvLHTMlXpjvkeqA
      vOVQTvPq5f4PwyAdHJ1RXL1yganpA5wVEqcClleXOfmPTtD4TMDsazl3vGeYzzyxduMJMMjP
      bobl3xDE1zS9xDUr/XuNwH8/J4MTu0JVBksvy8jSFJvkqMwihfL0A+nIRV97sg9RvrGb626N
      crP/tju9Bt1csb0hKK05ys7ijEN2NK6XIBtdZNfQbW7T2bjC4so5rm5vIqIitYNTDB8/yMT0
      HPsmZ5ktD9ErFLiyYQhSQ0E7OFRgsxyQvpBx51SRL9QsF57vMLkMUVGT3FdkoaPgNY0YCRBb
      lqEeMAKNQyHN5jwnhma5844Cz2brRM8uUpk7DsISI5kpOe4YU7xlQnJy2DFZNBRDSSQtyul+
      R9v6Dc8a8iyl2WqydOkSI8OTlOpVjDFsbl5F5xYZTAMFBsMAwkUgNELAtwT81rOav1iLOG1D
      mqqAFv7scU4grMIpje0T3rwuivG4v3RI7fjYZMRvjBc4uWC5fbbEeih4eTPFbmiSTHF7DJWD
      khdWE0ITILY0YLjtWJGzyxqTeCUKITTTo5YLly9x8PAsWigQmuZ2m6XFKu8RIXoGnnipyVwW
      XI8C3Rik12c1g1FA//p+WiEHsOdAxuTanPxNg/wmgXi9Sd4gx3T95lakAo/5R97ONNUJJtM7
      XeJBDeD6J8g1Ac61cO91d3PNMzosh0TO9FjAQjVgfl3jOoJAKErFYVSlTCBTRNZiY3OV7cUt
      eg1/mCyUJesWaqpEc7hIvXCAaqaYHlbMjzjWvr3CuyX0RnNe62bYpYTDecj0j9R4cr7D0De6
      vP9IiaXMkF/VRLMglGPilpgzv9ukoS9QvP9Ovvs33yDKDRunXuTg/bfxivgWEs9IVcIRKUc9
      EkxUIza7hvkWbGSK1PgO/+5l0XnC5rYlvFpkfGaaq3mO3WgQ9JYhOAB2yJPWXIaQAiM0gVOs
      6JDPfi6nkCfYuiUYhSOzAfcdCDh0SHLLiGQaRcF5H2UnDcKFCOE9waQLECLn/rcGfPruGv/L
      723z4uWIUQFaCkaPlTjfSuhmPWQCZaUZjkLWRgXPX+gwZATtVUvtkGcljI9AY3ud42OTIHxP
      qd1u846ZEf5NL2EoCag2NDMfuq4PcC3f4XtfA3j0ZqfFD4IADQLQu8MMCtr+zQkJQmGVxVqP
      yZtcY7N8F6a9ri9xzT3fJPXa4ffsvAbAUkFQqsVsjApWE4PJQImYkoypVIdQRUEhT8nSFtut
      HqYrCZwlwNJ1ECeCBtuI7R51tcbGhOK1VwwHpODwsWHOqwMcr0sKZck73hLy9ajB119a4e1b
      itVyzjOVjCOJJZ+XRPcp5FbOsVSRjSnOLrzK3bWf5JlIcHRKsVp9leNzP8sLhT8gSDw/adD9
      lspRkjmFqqJWlFxuahbajq5W2H5Rap1DGIPONBubyxQLRfaPT+GyDogWLt1ExPuxSYqwW+AE
      0hmctBScYV9BsGFDsg1HsCE4cxZOSUcn7CGk4+hB+LkHYx66Q1EjQ6D7pYKAPmVcJoahsMVv
      /XKNX/svbVauxqyULWcvdqlEkrveF/HYC5r60SEunGsjrsIkAZtCs74O9YM+yd0noZk3GK7U
      PCQoFGmiuYikrAWlLGP8g/v4xhc3r89U1DUb/vdKU2x/OF64QVn193c55/ppTN/5RXrnd6EC
      cjS9vEOStDHdHkEOgQx2T6TB1x59I+nYsU+6/rreUGPwyG3gTCfnzGVDd8EiMkGEpFyqIqol
      AgFSJiS9JlmiMdbirN99HZLUOoSBIQWLWBprOQczTbkKS2xx5eVzbHzjHCXm+XevvsTGpQYz
      w/s5cO8RxI+dIIpO8oHiEdx4GbcqEblkqOJo3xGwnF3kwNUCJx46zDeXci58+XmmtoaJjk30
      He4HeDz4/oxCCUc1NBwbCpgdEpQCr+Hp2b4eSzMmJ0kyllau4rRkdGgU4hDsOs5oRDSKExE7
      xoIIilpQKQhc5hiREISCLBAkGmw3RDViGmdL/N5nLf/wNxvMrxUYaGvIfjNSpv17UJIo7PC/
      /eMaW+UOqxct41rRVqCKAltQLJzuULKOmbKiW3Ko0QJr67uqJHUcuetRLRcRKkIFytP5O4q7
      D5TIjsWcfXSTH54rX7sAxM4/2Elj3ig4d/+ymyVdrwf6g15eqbA/Him8VqmVfVQ7swQpFFVE
      uVSlXKsRVIugvO+Y/393MYc34ie94eUcyoDJQ0o9xyEh2FdRhAVFVChhIkHkHNgerbRLM9M4
      7YisgECSWUNoLUUZ0bBewKuaKsoTERcDw9bzOe+vFFmbhqSRUu45hq50mTne4LOnXkF8/hzT
      rdM82lziQquOKxzG1g8xPHuMrdUpbhku0Wue5Uq3xnjuWMkaBCsXmbr3fowEr6Oj2ZVyd30Z
      ByhIw+FqwHhVECqH3/gG6I0XQk66XVYWlthXH0VVCghncPkagjo2qICQCOvpJVZb9hclU3XY
      loLcWNLcIzIjwhEWBatZSq8nWZmv8Wv/doO0V6C/gnYQKlvo1xcIRnSHX/3JGm+blURlw9XY
      UtjQ6MRxy3hIhmOzAs22Jl/NWdmEAUQbSlBKU1QxzmqMyREI5sYjHlvpUT0Nw8OCU9WbyqL0
      i+D+Tb1RH2AnkPakTX9XHdDvde2mNGCdQevMpzu58YxQpZBRhAslTuFVpMWe++dGaPaNUqAb
      iHsC8sBSw3B7zXHwZIiYUhSjIqJUQTpNgMambbI0h8x3RDOFH4+0gjwM6WpNYB37pSIbE5xZ
      ypha0hyqS54bTtlKoLgBHzlWYuFOwTe+1OSH0yLLOieZDHh2fZuXv3oJFc+jmhcZWTrL1sFl
      /nUz45kXznJ49ocYfvdJNu4/wUuPPMMdd/4IuXI4GyCs6s/P+iaisBKJH2SKlWG6JqnGDqHs
      zq/JOW96oU1Gs7VBa7WBKE/gpELYFpgGMpjEBREYicVhtKAegIw87TnGUnSCYlGwjaSbOUIT
      oI1h/5Dk+Y0SX/1K79oUVQhk1h88Ml5z9IFbNfmhlFUTYtY0tw/B8CScaWcYIFs0jAYB4xMF
      Gk2Nn9S3BM4RhMajh2iwUKuUef5qi3uNZTtMSeYKbD6XXLcAbkZW+16xfP3/s2cR/OALYcDk
      tFhnsMYijCUUkiiKkXFI6nI6SYdOu0na8VLdA2rytbe5i259f6JZAmElRgiuRJJntw3tBUFR
      ljBFibKOQGjyrEeiLal1aOeIDSAlibAEWU5BOFSguOwsWSOn6gTDE0WWZwNWL8Kd6zB9MOZP
      213Kr2vKuUOM5Oi3Vnn1az1+4dAQp0qC7KXUM0Kt5tAJy+XXlvn6px9lNjrJb39nkfUvneZr
      m48x15nF3v9O4ulD1KaOUSyPokTMoIEo+5pLgYN6YBmuSpQyN0zTWWvJtKG3toDTIciqhz/N
      BoICMijjrEI4R6YtEseBgmS8pND4wZZGYlHGMaJABo4klHR6Fg186+kcZwKPyQ1Yu32bKVPw
      MEWh53jvbTE263DycJVLmaO5lSM6isA5jsyVWdc5V7czWnmfljP47AaZAgIpAkrlIuWsQ3ci
      Ih2L4LtdPvTwvhsXgA96sYPm8CYB44/NvszhgDnKtbvsG4tSfe/L4s0nnPWEY/rKDCIIEKHC
      SYl2GpOlyMwSO0UUxrgwYDD765zH4gc8FLh2MVxTuwycJv2nAgJaGOY3Lek81PKIoFjECkNs
      BIgMkyWkWkNuCIBceKy94AROCXQg6WlLyUBoHUOTIS+0UsKXMx6sCy7MCuZPtxktSsZyx30/
      Ocxj2xm3fjfjxNGQ373UQGlJb9Hhyg5Zlbw3gX/yUIUXR1bYf05z3zveypVej1cmGyx84ZuE
      J47x1ItnWb18nl7coTg7w9CBOYamD1M9dIJ6bZpQFohQ7IslUQBWen6O2KGyWGxuIcsh34Rw
      FESIcF2sbiLCYSDAIciNn5OoRwInc0QQ0utllBBUioqWMKRAkhhsapishry+7Ug2+70AMYg9
      T4dWaX/8UhjefWvE9DHF8mZO2hKM1gMm9gnUqOC1yy2kU5RSyDPRT8f9QFIsC7RNhpReQn+4
      WseMbXNmOeW2bcm+u0o88u2N6xfAYA0B4tpgvWngOtNfKD53G0y7v3HitPte38/CEP0iSwqJ
      7IuwGhxZnpKmKVnaxSYZygikCnGB7ANFgjfrRLzRIryRrm3BKsoGbg3h7VMRwzMxVmkCJcFl
      mDxHWz9AlAM4jcKR45naNrOURYBUhiQOuLyUc6wHsmg5P6VY2XQUL8A/uLvMxtsjvvVnGzwg
      Yl43Cb3AewjMX7F0JmJkUyK3NYdGLI9U23Ryx1NffYx/+ImPcX42ZuvzDeLlr/Cxt32YlUrE
      ekOTbnRoXz7H5uI5Nq6ep3HlDC3TQMzsY3jmCNMHDzNzyy3MjB+mrkpYGSJsgLACXIbSGmEb
      vk+o6h5CNps4CiCrCKvItKc4RNYxWpEERlOPImwIjTzHaIiso64UqQQrNCtakG25PcwD34MS
      qfaTdkIgIsGo0mxKw7B15JsZxVuLXN5KydZCJqUC4Zg8Gvl+hvDyPDmSQqHGdreL0QabaWbG
      x/jG4wt8YqrMi7LH1YWc4d51NYBvZrl+8H9/gSN8q7bfdf3BrpsthL2IjhCeqmGNxmQ5MncU
      ZUy5UCYqxFgFudGYXHOzB9hlsYobvnezny+t/8dQAKP7I7ZnI7ZCAYkgkgpLijGa1DiMcX64
      SSqsgByL0pZiCInQdEyA7BoqCkxZ0j5YYvnllId1gD4S8GQnxTyTooTBjArGZopsbFk+WCvy
      zLDkj35vC93xuXE9ErxzrsD9psz54Sc4sHqQD01MkI5Kfv3Si4w/s8jxH3sv64n2EuRYhFMo
      q3wgt7tkl+dpzp+huXyWrSunWOpcJZ+usf/YHFOHDzNxyxz7p08yHJcRocHoJkKNYIVE2hTy
      LiIYxsqQVu5PDKEc42FAtSrZthlJbqjbkFAKygXFtpU0Uk2ZACUs5HKAdDA4dUwsEfSNyFOI
      hWP/SICtgEglG8uaAyKkWs4QE97E79xZTYTXqEI4ehiq9TprrQ2cMwQWZg4d5o7KGo+sdwi1
      ImqknPjg5M1ToB305E2CCPAFFTCQHtlJl9wPxgTd2431oywO42x/YN4PuAjnCFSILMTYOEAH
      XqHAGO1hPXfjgr2ZZev1f9+7OIwUCAObRvB8w3L+XEi65lC5RgYBznpWpXSC0EmkhMR6qcSS
      E8hI0LFgtaDkLIVQEA+FnO8aymdSjo8FPFPLeLKpmVwS3BY7xt85zJKG6RVDoSz401NdxrZy
      NkZKtFYEoqBQ6zkfvlXxxAHHI397jvIXv82hT34Qe0/M5VMZT3/uz/j5j/wszVqAzf0Ao2Qw
      FGT6kiYSJyxFKwmUwiUJnUvLLJ8+zZXLZ1k8fZGFtfPoEYkansCGFWxhDFO+A62GcEaDHEGr
      EpsJOBuAhYryA+6hseyLQhKZQiDZTHOs04wISYSkWqJffLu+OqAffxWZn52VRkLk73tqDOgq
      mrnininJmtN0iyFLCzkFozg44iiHFtH3bt60kvHyOIvryygUkbSMHjnEXyxdxDQsR8sh9bfV
      efqR5RtToF3TGF/RXxOQ1wVOXx3m2p3z7wkB2hXS2u3b+gksSSACAhXhlCQxKd20TdrtQE/3
      B+z97DFwTf5/85Ruhyq2+/0+a7JPGiWTkrQXUE0DpkJLLbbIUOJs5t3qgVxacutQFkLnyJQj
      0Q5hLBUlSAJoGthcz7jNhXTqjvUhyfomuKuS2+oBL4xbuhcyak3D070MISxDmeGuo2XO3Bbx
      8tdS6AhcGW5LDe95WxEtEl5Iv8bbj3+Y0bOKj7y3wm+/9LccfzHljo/+CBqD64f/INf2Y9J9
      jUOkn8Rjl7vlkwCLSHOChXVUcoGgdwbZvIjSLYQyUChjg1Fc+TiUbiWMJolkhEAxUYBqJWRb
      G6yTmMRQcZJKLGkGgnZqGLEOVfScIkSfVu0prJ64WACReRGuRDlKSqBLksubKViJXbOcOBDT
      FYaVzFAvDnpYjoaRzNZmmL98GWEkM7LC9lSJq1+4zCcfHONFbWh/t82RyfD6RPnmqcHNxYJ2
      i0VB3xr077EHMLgbifCeZb5CQ0iHDCUi9Lqcuc6wvZwoF1SiMuVqjahahuDmhgE3pnGD49fd
      8G3l/AckLIwIwd3DipmjknBcogJPvbCAthanHaHwJhCJBGWgaB1RGNLCoI1D9uHCzYIlrQVs
      nTa8Symqt4S89HyT8dGY9nyP2lRIOKoYawgefG+dLy4kLH2pzeKyJt8CQkWYaP6n+wsE71T8
      7595ipFHLzD6D36ML6826Zmcz/7OH/CLP/HfY0cDlO1bX+10XgciAWCF8fWb6wu/D7RZnSet
      RRJE6IAcxzrSRUiToLpXEL3TiLzH0uZ5lvNNxOQE+6YOMzl3iMrsEaYnDlJRVYaLilQ5WkZj
      EoewhrcOhRTGHdLKnZFbJ4X3gcAiEg/dOmkIqoqtVkataylnivHQEh8QnF7pEiJx25axYfzc
      soOFLc3U7C2cvXgRi+G28eNckYv87NtK/L/fWeNEU6JDS2sqvnYBDGRQdsLiTVKI69OGNwr8
      HwQK9Qe2w/TTIOss2hi09kMrOs9wuUZZQSEuEpYKyEKIiL1jyd6ff7Pdfy+F+4a6QPTl0vuD
      LzZQnI8V31lP2FiwCBMgrUY6481QlB+Y7zkLmaEgJDqWJDojMI6ihVLJ0DAhS21D7bLhrhHL
      cyOGpaZmYd3y0FDAkQcKvHxJ89C+EmcLhj/9ZoOjPYWRmhfvrnHpdYvbtohhSVFlHNcthiqa
      z37uj/jHP/zT9BpFfumuER4bfYrK48vc88mPo5XxiNpA36j/vF5aJsMZjbLa9wqEb545vH5T
      QTpE4Btp0miwOTaoYIXC2jbKFWjmARurGcnleRqL57BXL5GtnGWlNY+aKxFMH2Zi8jBHjpzg
      yNxxyoU69x4MvAaQMJ4bh/UZR+5HLG3ocKGf/2hvaPbFMS3RI5iOWdSOZElTd5L9kSKakEyN
      BOAkVgraawHmyATrly4RWctb33I3pxZe5w++vsxJF5MMWdxcke2n2zeHSnYIbd8jePfqBtn+
      6+2eDvLe4Ps7L4T+6eLtSHelV5xz6CzHZBkqh4IMiQoRmXK08y6dTpOs1YH8WsOOG21brz3Y
      rr/HAXyKtOQCOkaw2hT0lgXlnkEqi3G2T78QpM6RW0sBhZPCF+S5oewCYimxBUm752HbqrNM
      VCQXpyK21yTji5bqrVUaXcXamTbjI46/PreNtZJDUnHLiEA9NMKfP9rl9JMGJSSuY6hozS+8
      q8ChT5V4ZOW71L58mY/+05/hN19ao3wq4St/+G/4wH0/TXR4kl3Kihv8ahki51ffWeA//lTE
      v/zRgF+4zfBDtYwDLqfoOoROUwpk3xvMAQnObCPFEFZYlO0ggI+Pl3jvtGY6TCnZjLLKvVhy
      atk6s0r7wnk2li8wP3+eMwvnmavm3PvhOUxphqw6C+FRdDCOETE2jPxMg5PI3GAFJCJgOYxQ
      SrJ2pctcOUAKSzAVs5DkFFcNw/s1CIsRILcPMj+ckV5oULCSu971IF/++t+yvxUye3+JC6lj
      /GLOHW+vXkeGk7u2FYB3+Hb2TdOaQRt7cGIIBjvozTuubxSU118Sn1Z5z12f+oiBD4hzBFYQ
      xSGiEOEk5M6SpV2C1BLIAKkitOirx/XrgL0n2DUyh9doG9md71m8qVsoAeW1TQ+juWtUYaYF
      i0uWsM+8DBzEQpJKizKCsob/n7X3DrPsqs68f3vvMCpf+gAAIABJREFUE2+qnLq7ujq3pA6K
      rQQKgJBAQoBEsgGPcfiMx/Y44fQMmMEe48A3jI3BHw7YgE0wSQQJJCGhVlYrqyW1Oufqyvmm
      k/be88e5VV3dSAJ/4/M8XdVVdcM556619wrvet+y45BoSyIMNMFvrcBeweElbRB7Mi4tOUx0
      wMEkYc3zKe4aH5u59E5BJRKsen2Z7949w6q7M9aWLY8gueyIpHutwBYU2zoV8fgsb+kv8W+3
      f4af/8yneHzztxk6OoV/0ySnvn03133gN/n+//zvuCmtkNXBYnFFRtidce56wznbBFgHrEdU
      d5k6mXLwpKatGrecvCVioiNwXYSQWDJk1uSGTRXE0BxWu0RNy9xYxp5h2HMwZeSU5sU5y6SG
      UiS4KrT8ypXgdx/KVSNjATgI10f4fVgToIMmFhcjYmrxPEdOVumYhf61huOhZPiUJatJpk8k
      bOhUtM+mhF0hFkNkJZXyNh478DQyhQvD1dS2tzP918/zpnf2cdt3p3hzr8+Tbp1jh2ovT4uC
      OJPK/OXKh6cN6ceN+KdlhTDmtLGd/fzF1zet4Xxrlw3ptzwktQarE2xmsTrDSSyOdBGes4Qx
      ySHSp6/jFdGgiDMes9Qka3H6CiMoCU1vl2CiM8e/kOQQDF8ZpCNoJjm23VqLLx2mVUyS+ggt
      KElBKjSJB7M1RVmm+J5gXERMdvg0D2saPSFbNkqO7IzZuNLj7ixh94/m6E8sHcLS//Z2vnv7
      LGu+2eBXPlZEpILifIPfeWORb1arjCwcJvrqvfz9J36fv/v4Rxj+wSyrVn+BS6/5R/bccB3D
      d9yDRSFJ87IoFqTEtvIAIXOuVq+SsXKLZdV5AqyHUQlC5zyniEaeHygH0FgTI10/r907EaHv
      ELbDwCbBddcIsCFR3aU+kbNntPVYZDltQaIlshXkyjRFpAsYkZMO4PgorRjxu+hQHWy8eCXp
      xpR0j49TnWLITZhot5yoGy7rEPidecB8JC6wae1r+cSjX8ZPHd50zVXsHnmEy1/Xx21fH+am
      9WV2TtQRbl4K/bE+wKsZ7k8y6v8oEO6VHv+KDTJxuu9ghCDTKWkUY5sxbkaeB4QBOJJUJ7lw
      tj5TyullodtnXfeSwy9zCoAaDk/MGV54ISEezQl/fZNTPqbW4miLt8hgkRmE8XF1RsWVRNLQ
      lBLdlLhopBK4Qw4nmi59xyznbgp4dLLK1gmH+e6UnaMNVN0SLBiu3ljg+CUBO782w82lkO/N
      pZz6kc5Va7TigtWCzVt9rm8Kjupv0F09h8svuAgZGo511rjvS5/gHTf+Bmptfw5qs4pUGFLb
      Kocuxax52VFakzfCRAq0hlhaohTCJlgTIaSXF5VMA4SPxUNkbj7nS4aRGVZKkCl+uUbX+iYd
      6yNkJWpRmOfVt7yHnN9p26LKVAZUUge7wP6pEY4fP84zTx/FLBwjGT/Guqu7SNaspbO4it5V
      67hyx0a0UyYjpDrVzsKGQYYf3U2f9XjNrTfzpXt+yOO3jXJ5b8gzsomxgsFMsfrazrNzgFbl
      /dXgD6/Suf3PwgAt33FUqwu8WGWy1uaaYa3EWGiLg4MfFFGFAHyn1Q9IsUl2Onf4Ce/3co7Y
      Yv5ujWQatM1IE4lsWAaMZqBicAqGQFkKTp4Ix46lqvPZgYKj8X3Fgs1INcjEUpECPMMCivH9
      GWs9RbOgmR1u4q0sc/fDs6zfVsGpC7ZOS3a8vZ2vH2zQ/XRMt694thnhVIrc8UICiY8KLWok
      4saLXI4M1Xn+yEme/dxfc+t7fp/KLSs4sSeha2IP8y/dw60f/Ci66KCFIbWC+Th3BtG62tYd
      ze+zNFjrtrqBrQYpeThpTANwybfHJJ/tlQor87KlEW5rVDbNeZaswqJaSaMCmSxBsGGxG2zz
      G55ZbEs6NfY9vvpEStu4oTfwCLsyasbywoMnaB45yNzxY9jpI2wdmMD6GlMcpK39Fh5dOEaf
      u5J3n/d6nlkfM3f3M7TJlHizx+RhyU1rCoy0G449cJZOsFROjrAUTn5yy5PYs4xzkXR2yeD/
      L5tfy488/j7dCGsFI7nhW50T4bYaUI7MV9xUGKIsJo4apM0oF2JjMeVbxLiceQ122XyAWSyF
      2pzzM/9Ozv9jNeisxVUKqz3DmhUu2eoAHIdQCqQDDWEhNvg21wv2lKCuM4wWuAbaPElDWiLj
      YJOMMpKkmBGHgnmh6BOCg20u2/dnXL/N46VzBA/fN0+vlrRZTdeOEFvxGZiFPW0BL92XoasK
      oSw9juZ1byjiLWhYtZsTu17g6s2/xOb1HvfV63znq39P3/GUy3/hgywIyaHY8tyc4KGqy0kT
      0JQBmXTyGQy7CEPJ+zx5XtS6kyIl50lR+T9a4oTCye+nJae+bMWp+R3WLV0BgRAWaQSnqXTE
      adCutVi/9RkYze66oHpU0DSCpm8YizLCWYnjKUy7w7y1rJqK6F2foeI5ZubHaBu4jC9/7fNk
      h09y4y++i50PfpcVA2sZescFjJ/q59ffspXvHYnoHLUUA3lmDhCUS1ij0dripg5apbmea0uZ
      xbRmSa21SzyaZxguiwi8/4RD5P63WLHI+zini7QCgaMchFIgIdYxaZzgZZLA8XADj1SmpHGc
      0wPy47wG+W63rCokT1dJFhUg85VKkgmLNhkKyRiWXQsJyRR4VUFBgFQWRwt8KUmVoWYt7Ykk
      kBJjwfEks6nJEaMGCkpRdy31CAaaktleybHhlO39DgcmY2qXSeL7NP68wy07SnyrOo9/NOES
      FD8wKcVnU7auNqxdryld5CLGNZe1S468zWHnbbOc/+SnuOl/fJaT77sZ85dfJ5iO2D3xaa7c
      8ec8cN0RDv/LnaTNkF/57DSup2kfkGxepdgw4LJhteS8AZehsqEoNJ7OW2lACwoRgZAYmf8/
      zw/cpU9HLH1dqjK0/rd8aOp0TrdYMBGAjfNR1LpSfGp3xoEn8rHLgdgQuQbhWcqOYG4qZf1A
      gWuCKl5/Xro15mIeL2vG793Drw1ewakLPGb+6k7GRIPhL8dc+9p2Pv1wk61DKzBuQKmPs5Jg
      JZcED7AS6Xv5xM7idbSqKcYYrDbLZEhNqyOqc6N9meT2FXFEP+HIwXCLIDu7VHWC1hifNRht
      yIzGzQyhE+KXylhPkoo47yI0dYvL6cdDncX4f/n3xfO15OGPERZtDCIxiKLHdCYpTQvKnkfZ
      EUQCSl6ukFLPMkwmUVrgKI3nC5qxopqmKG0pCUHgOMwpAwkEmWDYxmycVoyvcBheSIj7Ha7Z
      7xC0GeYvDPj8o9NsqhQYrqc8UdFs8Fym4gy9sZ0fPHWQd/Z4yHaJF2vess7jn1bH1Ofn+eGD
      /4s33PRx+m86yB3Pv8Tur+1l7u7/zh/85d9y8OA4e+9+Cqk9skwwfdjwyGHBI0LnUD5VJyxD
      /6Bk46DknH6X64ckW/vz+B4jUdZtzRXnADbRKouf/aku/rxYMl9u9DlRVv7ZGGGQuMS+w+dG
      JE99uUlJKzq6fEqB4shLCRlQ9AUTrmVqZI7r31NGEqNNhXDofXzuu19hzbzLuz/6X7ln/hs8
      +OQk20xAusbjriMNKtMJbasWeGpimI7nzoJMNubmaC4sEFUXiOp14qhJliQ5l6Y1aGFBSaTr
      4AQeXiEgKBcJK2UKbeVcWbJYJgyL+F6YC9st4+o5Oz94JR3fpRtncz6dRZpGg2n1GfJoNdEx
      cRKhkxRXCxwnwLoOTZtQT2qktTo2ThaJzM44lifDizPAZ/9NiJxgyticCS6v+4NREjfVnB+6
      bNkW0rZOEnqKWIBJBZ6BggtNm7PaxTol1JJQOeA7zFmNiUGZ/HXXdYec9ASdruKEVpj9KX3V
      FLMj4Lnd8wSJS7oQUdrm0K1CtlpL+1XtfPnxBR7eqTn4RJY3k4SgK0l59y+1c0DFnLr7Gabu
      +UeGbvoovtfJAJZk5Qnu+tf/yd/93scZvHRzjqDEsjh5J40E4yLTkOasz7HnPe65w+HT/5zy
      w/+9gDXu0s20QrIgNM/HkmlbIMFt4XpeKedqLWCLMf9iDtByE4EicuGLY/CtL6eoWUnS7jE+
      0aRvjcPkyYSGFzI2EbPKc7jKtwxdIjBSYApXcH8Qsv9rP+I3X/Nunjyvzp/+8je52vM56aRM
      ehZnNOP6Wwa5/8UptkYOctBBfexjH/vY4un93ee/iMkysixDRzFZnJIlCVkco5OELEtz4Quj
      87jY0kpgcu9fUoZpsaw5no/jeriej+t4uE4ujqFkPva2xKKyuCq0jC4Pd3Lcj0AiHOd0j6K1
      ++QPz4e/PeHgBgHK88kcQ5Q2MPUIN4OCE+D5Ppm0uZrM4nsse3+WPgC59NEt7QjkZTkjIJQ+
      qlTEaEO77+P1wrFsgeaROmlqmY8NKlFIx9C0EGeWTiFRDmRCEAtBnGqkFpSVwCqL8BRRIyOS
      kmgyZQ2a8gqPJ1zDObMwpyyXryswGmv8zGFlwXDndIP6CVhV6iQzs+xZrbhgXlEayKBdUZ5P
      KPS4vHgo47A+QseJDm5+3wcY7XqW5++fYMXYCKmZ5ed/9SPc/8ITzI1NI6zKeyMsW8HF6UqY
      QHBtCXa8wcVKB/xBZDbFCWv4q+/7fPWRGnc+Mc3CjCGpwop2iVTL3cDmIiIYEDIXM2m9m0WQ
      SsFxHP5uj+BfvhEzv1+QpdAjXfxCyrqLutizb4bNjkSXJQuZ5g8uVqy7XKNtG7W1f8yH/u3v
      ueIFh7f89R/x23/z+5x7co5qp2RGKIrHEq5+Wy9f+94oN/SXeaq5QCKcV+gDnL7+/NRbYY/Q
      OcRsUYBi0VCWWJkdr8XDKZGyRdC6CJdWEmUd1JKt5/GfMRZMHsZYm7W+58Plp9cGUOTypS0A
      Uv5721ptRM6ErG2CTlJMmuEbQTEs45QCUtcgE9GCSZ+GPyyP/xevc8kpF8MiYcmsxjEKrTOc
      zCA8jxGdkJ60FE1AGLu0q5iSL5j0NXEiENriAq4BGyrqqUakFsdCxZPUyYilQDQlidUMCsNM
      0eL1hRxJM6LD4JY1N91a5L67qlQclwNjVea7fNqFR2+kueyaCp+717L+m5b7L0+5ZaVHYDM8
      bbl8vWDybR5P/3tCar/KqSM97NjyIZoDH+X45CwHDt7JxKcNX/zEp/mlj3yII7teRBoFCDJp
      8irOIrNEK99zvVZi1urMWxSpBXCpzxdwh32OTGvSIObCHoXqZ2kxS6TkG8OGbsdhqDOg4KZo
      HGY0nKgZ7n9J89zBjMOPpHSagBRNf1/I8GSTa0M4GqV0tHvsH09wNFxoIi57QztaJNj29/P5
      6TH0V5/jQx/9ez7+1D8jdu6l90293HPvNK9rD5i5qMT3vjvG5Z0+h3yLFgEdM+nZDvDKWB8W
      Df+0tbTUUvLkWAiBSbOWr+dfhWhBXJecwlma212s5wslwSocAVgfloVC0uTjj47ntsqQGvRi
      N/j0KacmI4lyzjNpJb508DyH1IPYNMmaCVkULVWqloc4y+P+/OdW57tViZLatuRPLUkWEaSa
      ICwQ24xmA/qCAtsrhlqf4sTxlMl5iW80jhJY6TBiUjoyl7DVfS54LtNGI7REGosVMR2Ow4LQ
      BH0BLxyL6NKWHSt87mxEvP75DLnGIdkL4doSXfsNl69T7Nro853HJ7lw1nLYj/nhQsD09xv8
      11sD1HqNO6J58wpL80bB7Tsn6fnsX/DW932Ut/3ZX/L/ffR36dof4b/uIb7xtzFf+Pjf8Jsf
      /zDP3Pc4yspclqrF7oc9fZ98N7dm22JzsFg0CqN9HHeuNYyvcVrVskWLskAqFZ99JCbeZajI
      lAk3QycGX/pMVfOKXlFL+tpcIiTZQkY8mVD2BKvOD9l5KiYb1ijX0t+h+NXNAcHKhNi9mD0r
      r+dbv/EbfPKdv8dda4d57oNf4tJ3reDur07x/u2dfOvUDOHelD7XgfOKHH1slutWFtnXp16u
      D3B6BXzFo1Um060a7mLFxNLCBLVWdJ1pdJqRxQlJo0lUq9KsLuT/6lWieo2k2SBLInSaYLRe
      glFIKZGOi3R9pB+gwhA/LBAUCxSKZQrFMl4Yojwv34EAqSWhCgiKZWQxJBYZ9VqVeL4OkW5d
      nqAFtPixaz3jmltxPy2Q25LCZZbhek4eajUieoKQ9Lx2TriG9kTQVrAoVxILQS3TxKnAizXl
      UICvmEozbGbwLLhC0B46TGlDI7bUjsV0axjo93gxyKg7kiefiXlrd5GRjpgdDUm41vDFySYz
      O2uUtcEvGs65vpNdh1LMfJnbnjBwwsMqgy8Mt17isX6LpFPFPHzib6k9tMAHf+1vqG1sZ9cT
      MxzcfQ9/8wd/yGf/8M+5+f3vIFOa03H56fsjAdddXBBVa/c0ZFYglSBJNL7RIBRS5vdt+T01
      WOKmoNlUOMJBVUNMVGB2TlGKJSvbfeoI5mqGxnTKQLfPlE3pk5pD1jIQBCyIjO6S4kqTcMlb
      FKnsobbm9/h/v/yP/EH7DUy+dx1P/8PH6T6/jfu+MsHN24rcNjyDHzt4ccaaN3bz7K46772w
      k/tnamTHzNkOcJrZDStftSO7fDc4/ZxleluvBG9oiVWYNJ/qSpsRcb1BVKvTrFVp1qrELcdI
      kohMZxidIW0Lc+NIlKuQnoMTBARhgaBUolCqUGxvI2ivoAo+WgmMzqfGhBUtR13mwdilb8sr
      SzmHZcsBRI5ANdYiBcQ2JWs08HHRnqQa1XippnjqkEtzr6JNK8IAYmkxmcC1lpJSTAuLLwVx
      psEKOqVAORYbCmaaKVhJiGKjqxjc6rAvjpk9ark0C0gHBXfcOct7drSxc3qWIzHIOcnW1LLj
      ijJ7OwvEP6hyzmaPz+yd56vfS7jrO9UcWxM4FKpN3vfWIlxgGL5vlF3f+RNmXjzFe3/9UwTl
      Aa7aHvJY+Cwf+oUP8mfv+i98+E8+jCg4rei8FbOTh6Sem3eEjXCA1r1Boa0DSYYvAWVxjMnj
      f2tbDV9DZgShlXhSYpWklkCgBa4w6EAxOhnR5ljaHRfRIRmfaFIUkgsGXJ4fj2lOQoYgNBk/
      9wYf1VkiG/ww/7D3OW56qY3uP3gTh3b+KQ++MM38I/Os7ZW8IAzpnGBLl6RwcYmnbh/nLduL
      fGPPNJ2JRDvpK6BBl3094/cv0+V9tfLmy5VBXw02ne8cmrTFAZrWGyTVOnGjQdyoEzUbRI0m
      SdQkS2J0luQlVyFQrofwHVIHEpuhDJTcIp2dPbT39hK2t+OFIa7no5Sbi1wsdj0Xty+RV5qs
      ACsE2oI0EiUEKQZtMtIkwqYpjnKo6ZRaLSPVHRTxuCRM2LzeUggtvjIEjqCGYSEFXYe2QNDt
      WhYcaFhBWrc4WtGhwLoaEViiGajMSwYqkhOijpc4nOh0OPhAg6uv6USejPjl7UVmt7p8/3CD
      dSdTDsmYmQZs7CoQZIrbVvRw+79HUBeYNijMV3nX5S6bdljidSm3ffPPGblrF7/+sc+xjzVs
      PZwyFuzjPb/2fi70Ovj3f/sXVm1emw8VWYkwCoklkAojNNJ6reaYxqAxVqFsms8OCBBCIp1F
      W8odQSOYq1vaREbVGAq+pWo12ki6lYMoKeKyw3QjpheFQtFfyUj6feyMJNGgMsMHuixrrimg
      +3+Xb9ddNu+cZ/t/fyf3P/rH/PWnn2dlVaKlxtkSMLy7ys9d08WTtQz9dMz6IZed43MUdYGh
      lUXSXu+sKtAXv7hkhDZ7daa3l4cX/+cMxJzmHrUopUDmsbnWGWkckUUpaQsSrZMUk+WyqonJ
      SNMEk6a4VhKGBYJyCVHw84oLAsdzcX0fNwjwAh/HdXEcFyFVK9873YFTQmKlQNtcHAMpkVZQ
      DtvQ7T612Rm82KGjUuTi9gbedsmISZgfFzRSQT3NYRsBEklGR+gyrg06kThaI4WhVHSpZhmS
      XKJ0Q8XQWxEc75ZUq5ZgztKxrsALRxvsmAX3ugLf3z2PHbekTgcrVJWgy2M2tty4PuT7ScbI
      Qw2cWYttajac4yNSg6csmy8KGR1OGGoqHp58kvSlKj/3Wx9jIp1hr3OKo0/P0X7wMdTFJf7o
      Fz5CUxief3EPmbU4WAb7oO+idnynF1ksIuJpTtqQxw4UmT06wmqVUAgs3cJw/g6JdWntrJIF
      JN96NqIy6zOhJSY2aC2ouIqJLEbFEEZAh0fa0JjM8JaNFW6fXaCw4FIotPPGcIZf+X96YeOv
      84S/mcquCTa/72L+6J//Gw996yDFacuaVYr5NQWmH2ryszf28vn7xtkoJQsyQw+WqB60XH91
      kR/tm2d13Z7pAJ/5whdyBzAmhxH/lMb6cijRV/v5P+AKObTZyedtBXlXuiVTtUSbYozOJ8OS
      FBvHOQbIgJGWZhZRb9aIazVMkmFNvtznZVuF47oo18ELfbywgBfmZVPH8xCOg7S0iDbAWoMj
      FO1hG3SWqTXqpI0aRbed2UAzNjyLHbYk0jDdABIotqDUsZLQ1ISBhMziKIX0FdUoxVqJbwWD
      rqS7DDaUjM4kdKcec8oyd6rOlWsr3Dfb4HxfMe8qNky7FK/tZ+7UNG1TmqwbHniuRk8d1vU6
      xEMe3xnR9B0TbHptCHGCrGo2rJU02jQHj6UMHzyEHnuRN7zrN1nffh6r247w9y+M8MJ3n2Lf
      rod53898gHf9zDs5cPAAo+MTPDMBX78v4vE9HTwXlti1Z4zReoVDIw7e1BgDTobrGbqwnH+Z
      g5B5YcIKmEHx748mhAseschIEzAKApMT4FbaPOr1jCAQmBTWBinedpcXn8sIrOHSsMQf3lKg
      9NrfZqbjGgrTkG1N+Lnf+SD10Sq1vU3e8dY+fnCwyuAwDJzvc+/z8/RnkkKnpNoVkO6LuPFN
      XXzt3gl2tIUcF+asHaDlAFrn2Jcf7+m9vAO82vF/A4yTllzKyFEo2QKk6ZR8/r7FRCBOR3HK
      gOu4uF6IdSRNHRHXatha1OIPVaQ6JWlGeYiVxKRJE52lZDpD69aooKNwPBfP9/BLRfxSiSAo
      EBQKKM+j5JdQlQKJTmnWGjha4RUrqKhJOW2yMbDMlS1RQ9C00DQCm+pcesh3iFxL1UISaaQR
      lKQk8CQ9IXhhvtp2hw6pTqkZgdcXEjVjppTHyP4mv3tZO08WMsZqRcKTUxxuZqShoHtecuF5
      Hqe2+Dz7YJMbdYGHRIw8nLF5yEc6GlmBXtdy8UqHxlqP++47wcg9d7L+NTu46u0f5MDxMeYP
      HKN8neV//cVX2SI9PvyXf8yGdZvZd+AA9aqmx1nDVKfLc7umaR7rInZTmBhnIDRY13Iizpgq
      +Ew7DsoPcB3BFC6PPJ4w13CYm9cIowgUNHQOJXetom4ywgz8OOO1V7Zx/wtVdOqy1Yc/vvli
      Bt75IeTKa1lwLF968at8+VN/weREirO3wa3vHuRfvjPK1cWQoypmykrEWMbl13ay61iD9fPQ
      vT3k3kdn2FoMmfY0NWMRdpmFnnvNteg0JUkSiGMWG8U/bVjzk3aCVzpeKT+QBlzPR3ouUlm0
      zciSCNK82tQa5T7tAChc30UomQvqpQkq1RS8AoVKG4SKelYnnpuHdLHEnecQi0l9DrtoxbJO
      rj/gSwfhuzjKoeD4dPesIujvQGvJ5NwU/kJGf1cH3UxylTxO47yUO46nPP1oSjwrEFbjCYXj
      CTAxhZLPRFWDtpSVQ0NlhNpyju+wqheEk+L5DqOZ4cCcpeY51I5pzvEM6bYCJ1+c5WcuGeKu
      1LB+fp5n5mK24rBhW8C/Plula8awts/Duoaj7RZxMuG9GwW/+sEy5SzClDKsVVSbLt99pMl9
      jysOdnicl5zPRz76P3hp5Dif/KtPcEVlmq+fmKev1MVvvee9vP7W93H/zgd55r79PN1xiObj
      xxlat4XDtUOsHT/FmjZNQ0peamacmNKoVOOHGX67oHtlQHNYMjOliRNJhKXDUcwnKSJ08WqW
      etESZHBlMWF0e4HDDySsdiyffNvbOPe3/xtxqY8fTTzPJz/1J1xYmuC2b07wmlKB2gaX55+e
      Y0vRpVYwTCkHORxzw60DfOW2Cd60ssATcQMTK/xmxvqLu3n8uRkuKJ7dCV62A1idU0y8moGf
      /bfl4dBPHKf8KZxDIlDSBUfmsFpjkVqjzCL13SKiMD9Mq2GX6QydpSgLrvRw/QA8h9jERM0c
      HgH5jKxYFLISS12QJdCdzTQyNSQ6I2tGJI0mut4kM5ZqYx7RNCSOptao4uFS6hug0REyWfUI
      qu24YQFEgBAtlohEYzOPcmoolyUSyazVOSbIKFaG0FbMG2c6MRSswChLYyJj0JWM9Cum55pE
      sx7tUyFvfXcbOw+OcHmhxLMq4YkXm6yIBK7N6H1NG0/urzE0Jrjkun6+/nCV7uOC1RsUgWfB
      akKj2XZRQKXfYeKhOVZuzvjwX32dKzv6+dhffgR3Yz+PvXAIfXiS4nnDfOwTX+Z1m7bwix/6
      Oc7rXYsTKaZNRHPsBCtNhBdqZjAcmQInkihf0mwEJAsOYixvZNYSh2ZsCZUk0YY4s5RCqEUa
      D8sOzyW6JGDfY00uMCv5i1/7CBt/7Zd5mgYf+dInufdP/4wt58BtX5ng1jUdPNicZX5GU2wI
      NlxR4elDMeenLl1XlrjnzlmuWhGwu14ntQ7F2GHr6zt5+P4Z3rK2wJP15OV3gDiOIUmQ9swi
      0XLVlVcqc/40Bv7T7gzKClw3QHguUhmwGSaNQOfEU1oLrBXLBlpyY5Y2D3f8oID0HDKhidMI
      kaQ4VlFwfFJPECdRDnPmtDCgEItkTXkD24gWJgkBEhwr6ejsIypaSlGA19vB+MIU/rxmcGAF
      HaWIsHqcQEcUC4rHrM/UfBFP+PRLSTGQpEYTpDEHZ2eYm2kiMk2fL1lZsHR2kQ+Hi7zZ5Hpw
      XLkcrhpGT2V0NgxbNoTE4UqOzJ/g/Wsl9043GZ4XtNVgQ+iy+9yAifsW+NmVAfd4MW2TmlKv
      x8h4g03bQ95SyXj7TR7hWosdTcGx1GSRLz7AmZ+HAAAgAElEQVTS5EtfjyjWPYbetZlrV97C
      ze+4hXt+dC9f+PwXWBdNsF+FXP7G6+nuKXD95Texsr+XZx66n5NPPsrwkSd4en6WkQlLQ+eo
      aVcY8CR9wEQAzfl87qBQdIibmroUdLmK5lzG6hK89sIK08MruOnqm7j8HTexq22G2x74Ok/e
      /iLX1w7xfFEztb/BUJvPsUwzHRs6pjXb39XPXd8c572b27ljfhY7I+l0LOV1JV46UGdbwcNu
      CXnp0Rqv31zi/uNVQqnOdIBzrn0dWRKRRjGkZ1aBbKvze8bvXoYN7qdxhJ/KASwoK3F8D+k6
      WGmxNstX7xYdibWgW1WGvKyfV3qkBc91ccMi2tF5ZShO8LWgUmwn6CgTuYb52Ql0vYmwMhfk
      WwRpiUUYRF7tE5Jco8xYQuFR6OmjLuoUGw7tfQNUPcH82BhdToXVq7rpzk5xQ2GKhfMt3zmU
      8NwjKX5DsTEUdHYLjCNQXkClvULqFEkTSSNJ6Qp8QpmRVqfQUY1Yppgsd+pDdYucF8womGmX
      tJ/qY6FvhiEvZqhgERVJVnK548E6AxFsGlDsXWjQu6mdA89UuW5rhceSFHdfzK++vpMHamP8
      zo4K51+c5R3pAlAT1MKQ/31vwt1fmefNO/r53qjkt97yX3jnz9xMM5ri3x/exej+Sc5Zc5Af
      7G5jtRvx7lsvoth+EWsG1nLy8Ci7n36Bo4cOc/TAIU5OnMQ2GiTFlMm5DEdAZAQVpahol+7u
      HjZ1DNK1Zi2vu2Qrq6+5GLezwCMzj/HQD7/CzoP7OPytGX75psv514cfpRtBmmjWXdHF4/fP
      8fqVPqNrA/Y9OMebtlS47+QcnnaQzYRzr+3lsXvneff2CndM1nAnM1Z0h0yXFLPHmqzvfBkH
      SOMmWRzTAnn8xGO5wecsCqdFkxdhDf9h42/ZoWMlTuAj3dNTXiQxjs27VxqVCz+fLXxhbYtL
      VOVOYQwODqFy8UoFRMGhkTVJFmqIJFvKARaHfPK8ehG5ePpapJR4KMLuXprUUQsplXIXYX8f
      E7U57EyNwfZ++vtdesQh6ukcyYzlSEOwMJcyJB16OiyOY3FkvtM4SjFnMmQmUcIQ+h6yUsGp
      tKFwUQ1DWrAE0mV6oco9p8aZPBJxc9tGnrrgFG17EzpFRtAnCHsdnnmgyureMrVVcOhkytYx
      l+KbfIYfqDPoaWa3Fzjw9AJhrOjIYj7wm11cUkk4Z5VB9gNjGoNkvFnghy/V+cy3m4STAZd+
      YAW2ehm/9PZ3sn7LZg69+BJ7jg2z++47aO/ex9SBGuuG2hl57QV0zqzmHa/bzlR5iPV+N761
      1BY01GOSROMoRaEUEpQKqNDFugohEhp2mpemHuIfbvsK5y6M8ZkfTtE76dC3xqXRuZ7R5/cy
      5Cja39jGY9+e4Rdf28nn987SOWcotbvoXsno/phtHSH1LS4H71/g7Zd18u3d4/QQkkpN58Z2
      ju2pc922Ej88Pv8yDhA1SeMYkf3HqjdCCBRiKUwyr4C7+akPC45VOIGHcBRGGIzJEEmC0xq7
      0UhS3RrjW7Y7Lb6LtAZlFb4XEBRCtCeJsiZZFKEyg4NCKkliMzC6hVBdxAfRwre3oBkil1Ut
      WodiXx8zZg4x26QcVOjo7ieuFJmYPEV73WXV6pWUCwsE86cIkzk6pOUJA21Tls52iXLz8m2G
      wMUQOAqdGTJlSQ0Ik/NjSiFxhCFWApspVBAiujrwyu0cGusgPWea+u4UW02Zj6don5zhZ3+2
      i7/bO8fko5p3rC1wd9SgEgS443UWpMBbU2ByzwJvW93G4+e5nLxrhg+s8ildBDdsczh3TYYU
      KbR7MGWI3JCdh1O+/92I1cFa9vUMEnZ3cX7fevrOHeLSdefSFRSYHj7JS/v2ceToSRYma+hs
      komZGqsyyfafWcGjTwou27CGYOsAhbiTNX1rcAc6qKYjHB5/ktETT3PbE48xfvco55/fye33
      zbJBesyQ0XdhmamxFdzUM8qjNqH6YsRF29u4+4UZOrQkMxkrr+jgxZ013v+abr52bJK2Mcng
      Wp+91QRnOqO7w8cMtTPy4jRvvqSd7zwxw4bAeyUHiJZ2gP+/FaAfs+f/aDnUgoPC8U87QGbS
      vJ5tF4MdTuP1rTwNz2ihTQUWBy8vX4YuMSlJs46IUwoiJCwVMYGiGtWw9TMFG/KxzBx+IUQe
      aikknuNS6OlmIZpB1BKkkHQEHZRXrWLOpsyPT9Ajy6waGqBbj/CmwgTJ+ZoHTqREz6T4QY7K
      FuRQC19IXCzGEzRSEMaiAKUkmdVYBNoIHPLZXNc11LXkcLSCY4zQh0NdKwZFkbbXDXJ41ww3
      rC1xysuYH9McjetMvjDKlVt9js9b4tEGb37bCj77/ZMM1GBVn0fU6XIqjdFjCb96XYE1myRX
      rVEUejVyLskTIemQOj5PnigzObwKtaadz3z5cd4QRXTdNMCh2TVs6R6iMdBPT/cA7e2ddFXa
      sK4i0RlrC5r7R8epnhqlfmoYNzvJxMkX6FBNovMCPvXnI1zpeAwXoCo1ZtiwfTDgaJ9gZlfG
      b/zCxXzymw9zLgH1siWqSOYOxFy6JuRop8/00/O88w3d/NuDU6x1FQsiJVhdZGxvg+sv7ube
      kwv0zBoGzinx7KEqfSiyUPx4EpxETdIo3wHONumXi/mXH9K+/GNeyfiFPT1C+WNDKwJcHJTv
      5aGMMKQ6wUYJCoHbMsxMQGYsxsilTWBpXlnmQ/VCCbTIoRauBlc5uK6PKrgkpMRRE6Is30fO
      6HC30I+LIZWE0DoEA33MR5PY2QRHClw3pKPcRdg/wFhjmmxqgRXFHlYOttMlT5DEo4iFfA5g
      3uTJu4vFc2SOM8LgY/FdSWYMmZSYLE/LHQueghSBVaCzHKrc172Ol/QJHjuZsilRPB9paGRs
      QBGtVAwOCFYUfcSEZuzi1TRGi6wZrfFCn8HMKZzxBr3JPLVLDE/dVeVaoei5pZPbvzPOG4eK
      7JdzvG1zkUu3ajYP+hRWghqNMJ5A9p9HduIICwuC+dGY0SDjmV2WLb7HPUHK1EMxb7mynQeP
      LlCfN1QCjw2rBI2SYHvoI68sMb+njt/j8oknFjj+o4xzCg4L0tJY6bPwQpOff9cA//yjcTbV
      JZ0XFTla76R05AjlUFHd6HP00QY/f+MAn981xtqaorDJZ9+pOu0LgkqXotbtMLsn4ZYbevjK
      fWNsKwSMuxkRLiqRrBlUvHiscaYDbL72GtJmRNaMkZnlbA9YNNZFQeyzJkpe1gF+EqrUYpdk
      Tc8+FA5u6GNVzk6WZjFEKUoIXClbMwAWbSzWnA6/ZAvCK9RpIi2MwUdRKJRxygExMY1aDZum
      CLM4vn36XIUQuYatOZ0QW2tpUwFioIfqwiiilhN2ISQlt0BXz0pMZ4XJyUlsrcFg5wBdAz7F
      +ZOUm1OsciP2VyT7DmUspBJSSeAYSo6hzfdw3JQ2T2C0wsWgpEE5DlqnaCRK5xK7npJUetYy
      GR3n+FTK5HjCFC4DwqN7peGxuYzCKcNN53ksdFiKZY9nnp2jXhX0byxz+GCdd18xwB0FRXio
      xHs2lLm9WaU5Z+lPFMHsDOPbNIfumuSXLinxA2+BN3SEvP+KgGll2bByHcXkIDLMtc9kw2JW
      uNiJNG/vFkJM1EBkigVhGesocuBAhJzRPJEmRLs0/WsLfO6uKTy3iJ7MuPqaTn744jybZySb
      b+nittvGuarT43kdY9sDut3VnN81xs6pBqWjcOUbO/naD8e5uOhx2MS4fR7VQwlvvLKLu/Yv
      MDgv6bu4wJNPLrC+KJmSAlEusDBe57WXtLFz1ywXdIVnOsCma64hbTbRUZyzKizDyr/csWhw
      i495JQd4VSCcsUumd/ZfHeHgBLkDaKFbDpDlZLlLT8rH+UwLcLV4HpCfS/4Qi7IS3/UIS2Uy
      X9BMa+hqA6FzzI9UEtsS/Fg+J2BaEAzZokcJXB+/u5u5+himYVFZhnIdUIqiU6B3YDVROWRy
      9BRuw7JyYIAVHYobvcOwPeHR4ZhjT8fsmzYktRYw23VIdIZjBUWlObei6CiD9BRaa4S1ZEiy
      VodOmYyOoU1Uxw5QclzqSUoW+DzdSDi5J+Ncz2F2jWBhOiapWzqThOtu7qGpJYcfmqT/si4e
      vL/GOgWFIYfDCylp3RBGgiuv7eOOE00upIsdb1zBo/dPUAoVDQkFN2X0wChr1q2hbftxhp+r
      c0OvwF5e4PDeBtuNYl/BMJsKZk402doV8HgoOfyDGr9yfoX9003c7pDnTjTxvZB9wxlDC4Zt
      7+vi2/82xTsGQx7xE+ZOagaVxm8POellqMOSn/3ghfzTFx/l8rYCIx0wfCqmK5F09UiGlUQf
      T7nx5j6+8oMxXtNZYr9oUI8tYV0wtCFkz0iTQQpUznXZ/WSNbQMh+xbqZzrAxquuImtG6Dih
      VWg5Y2BEvspivtQAk2cOmSx3hLMPa+1pY/3xv+IKFyfwMUpihCZNY4g0AoMSOZ4+F2zOw6DM
      nHmeGouyAuU4KMcln8LTZEYjtcVDITwHbTTaZEh7VulXipwVYinHtlRkiBroYXbuFKqWIRyF
      thbXSoTvUHYrdK1YRSNwmBwZoRDB4IrV9PUlyPoxnPkaZBljGRyeyZhtQhTnk2OOtJRdhzYn
      5aJuB1U0aGMRUjJjYd+sJmtYihLWnrcVZ/QAJU/jeZBpTYokMopnRyPmOzySwxm3rC5yaAhe
      PBBzjUmp7CjgWMNLhyIWJjXinIDGi4qLu+DUjpDdt03x5t4SjxRikqYmnLSsqyjqV1UYfiTi
      1y8d5Plt5zJy/zEuqlh2o5GpZv75Kbafk3F/ElHel/C+d/bxt/eNsno65cILyiQ9kkcPVbFH
      LEM3dPPY92Z5/7oKOzsSRp5IuHqdz9NTddIgQE5UecNNq/jufZNcqVzMZUWmT3WwKTnFnnrG
      tCdITmhuuL6D7z4yy0XCg60uzz5eY3u3y6k4JfIUZlJzxTUd3PvQLK/pK7BfpNQmLH1FSSMQ
      zM4mZ3aC//af/hGdplhtliaBXrX721q2be4BZ8wIyMXu6is8X5gzcwwLLRgyS1uBkrkW2GI1
      Rrf4gAQWKUU+cyEFxtKadDS5SPaiw5JXbxzXAScnpk3TBJlqyjKg0t6FaA+IbYKJEhb3oqUe
      wOI9kORNB2EJVUha8jC1Wo6U1wbVakUYa7FpjqMqF8s4lRILUZXGfAMpy7jlTsIkYpsX0b/Z
      IYoz6kk+rikcAUoQpZrQWvp8SRiC6yka1jCbCIarBuqKWYBiH3ZiglJgcaXASIk1EBVd6hba
      Jg0bLyzxw9Ea84djVgrJiDGM4PLUY3O8a0uF3u0h24MSa7o0O0/OUn2+zrbBModqTWwoyYYN
      77i2i/ujCP/pmOsvK/PZR0/QMSM5fmgPCQscnBonPTjD69/bx+PDRa4P++i9pJ3xE5Y3rxmi
      97wunvMiHrizypu72zi21uXwvQ3efUU7Xz04jxxLCRworA44MZGwqSnZfEsPd31nllvXFHgo
      S5g41mSgq43EbXCgmtE/obn05j7uuHOaN64o8ELaZHw0pmIkbUM+x2YyVseKFZeX2fXQHFes
      KfLkVA0bCVwjaFtbZuR4k3P6gjN3gKGLL8KmGqtbwwwvY7w/1gFeFr+bZQa/xKuzzOAXQ6bl
      Kz+0+BjEsjDI5nmBqzxU4CGkIEOTJBEkZolUT8icLncRxpwnxPmLiWX5hVQydwxjkdbgCIcw
      LOK1hUQipbkwD41cS3YZtm6J0cKic0dAUHKKiP4K89NjyEYejiElGQbXAEGAMNBT6KI8uJKq
      FEyOnaIYwaq+lbx1yCHYMsLzR0ap782oJ5ajcxnHqwbdFIRWsLooOacLVNHmLMiOw0ii2TsD
      E7MgUsn6jZtYMXuQgS7IZN7NbriS/fMafx6OO5I0STF1w6rOAHfQYd/hiI0Lgp43lHnsgTk2
      FhWNsMG56zvo9SzKhW3nlrl95xzycJXuG3v43h2zXFoscCrISHQKNY+V/WtwzhvlmTurvKvf
      48QGh+BQjcHuIvPlFNEb8OzBiE2u5CE8KuNlfuGWjfzL/WP0NTL8AY+GgZN7xilV5+i5vpPH
      b5/mF89r59tJlfhQypZVPscaCVUNhQXLTe/fzg+++SLX9Po8XnQYf2mObX0+JyNDzVjcquai
      azu5f+c8NwyVeDypE41pVrQHLKiEhTlFfzHErjaMvJBw/lqf506cFQINbjs/X5lfIdSxLUNd
      4sxczAGWJ7HLdoJFg15kelisqJwd+thljrH0WhY8x0O2HCC1mjSJcgmdlgMgBI7IKQnz4XVB
      og15Z9guTXstXo5alFf1XDKr0ToBneFocFyfTBl0Ei+t/EuOoBYrq5Yur52ov0ht/BROAlYJ
      jDb4QpE4FpWA50qsE1AKK/T0r6IeWKZGJpFJxlBHDx2DFcKFMbzGKF5aYx4YrklGZzIwik6b
      sbFHEoTgSciUZQrJiVk4NZ0RJIpVG8+jbXoP/R0W4eYSTfMSnpnNiGcEoiKoT2ku6A3Z7Wvk
      iZTX9vo8VjDUT9bolC4VYaltqTD95BxvXRVyYJ3i1N453n9uJ1ODFjsa42pByVUsbHZY2JPy
      mqEyxwZXM/voAbb3C0YmmzQLDnvmU1wj2D2aEB6Hm9/Zyz/ePsEO4RBtcjl0oElPKtDKUji/
      jSNP1vj5K1bzcGcB9ZLlsnN87j4+RxchjYk5Vm7UPPzwFFe3u1Qv8MmmypzrVvn2gWnczMFJ
      DOu3l3nm+ToXV3yqm1wO7lrg2k0VHjw+T2AVMjX0nlPi8EtNLhkK2Z9Z0rGUFf0uR2cS3Eye
      5QBbtrfYAODs5uoZjrD4FLkIH8sNf8moW/auFhtL8rTs6nJqxeXG33rhJdIHAbgtB0AKUpMj
      QUXSmkMmZ3pzpEAoWjpiNt8BWjKvS9q3rdfzlIcqBGhpSNIIG2sCC22ldvyuTuZMlcbkVM5L
      L8mpEEULD0GONi0FFbKugObUKCYDmRkc5ZAK0xLVk+SSPw6+41Aot9HRuRLRHjIydgpTTekp
      tbNpsJergjEqa+Z54MQM0dGEmcRyYs5QiiybuhRuMSclT61lIoXhOQhQNLSkq2c9ndN76e9x
      QBnS/9Pbmz1Zdhxpfj+PiHPOXXKvvVALdhAAQaC5Nckmm9M91sPuGc2YWjIbvelFD/qb9CI9
      SmNSSzbTo2ar2UPCyCYIkuAGEEARKKCA2rOycr3bWSLC9RDnLpmVhYWDZphlZVbmveeexT3c
      /fPP3VEGHn47Evb3DDJqWDtbcHNzyIkso5SIdcpYMtxE+erzOT+8XXJmy/DSN5d5+coeZ32i
      nCwtO25FQ29P+YuvFfzj6zs8KXDmxSW+/9MBX/zcM7x787c8stbjw4NAvu156l+d5nvf2+Gv
      ig7vP+e48soBX1zNuFo32LMZo6sN33lhmX9sPPbKhL/+i1P8ry9vcSlY6nXFLFnufeh5qpfR
      +RfrXHvD8T997TJ/8/42nb2Gz33+Mrfv3eb9tzbpjMac/kaXX35/wH/3+VX+dnOXzjac2HDs
      ORhu1Zzv5PB4zo3XS771wgo/vLrHenDEwuB7hvKe5+S6O+ICPfeFh0v9J1jt3nsoIP40A6ol
      Jq2I0nL722HY0UDQgC8niD+MGNk2ZmjDAVQgRMVrEuDZUlLb7cykfgc+BdK5yVheWSEuFwzG
      +zT7w3YW2eHBl9MZAuudNerTOfubd8lqwFlibNuItJwhDUruHI0RutHSWVlldfU0vZMb3N3b
      ZLIz4hmX8Ud/dpkbOkLevUM+3keaknFUtGwo8nRdlgQAfBCFK5sRfwBrmeHLLzyH232bIk87
      lhHDQOG1/cj9e4G+ZmjuKT0s1cr601023y+5mAv+yT7Xfzvkua7l5lJgXEaK0rFmOnzh208w
      KS/yzNlldjeGXH3113wxjvmpO+DuZkMxVP7o6SfZOXWXX/9ozL891+W/rML+r0d883KPn+wO
      CN6QjyPPPd7ntWHF+i3hL/96g//tP2/xgs0YXBBu35nQH0PPOdxLPa7/eMz/+Mdr/O/3RnSu
      17z4Qp8fvzNgLRpWM+XZv3qel//hXb7z3Gne3FjBvye8dNHw080RPc1p7uyTX6j43a8O+PYz
      HX6yX+LueS5d7vO720N6mqjtdjVjsB24fM5x9ebks1WAQ8LSthVZjHSnSvCwluhta06iAReT
      W2KKjCBK0EAoU9PbQ7GFKtYomU3QaCOKDxA9HHLop59DsnCFLcj6HYKFpp4Qo8f4QEcKNHdU
      YQS+rQ9ol0VYXdpgvGaoNu8lbYstAa+NU5y3SAea2tMVg29bKfSyLitrp1g7d549P2bvzhbW
      B85unOXimWXO6Rbj8g7xoEJ1jKow9p4DrzTBsOkNmzupCMg1jkc/9xhnt65w5qTDZlAGYdvD
      m9ue7aGjKtPoqAurObdtIO42PLaec6usaKLSCxkrHdg/IZhbln/x2AnuPnKKs+4pnnlynZ/d
      v4q/+g7LzQ53JxUDq7htw7ee7/PTjbPc/t5v+cYXVvnHN4csR4OxsH425927NefLyAt/eYq/
      +8/3+PZ6j+uXhQ9/XfL4EmxWEXsxZ+9KzX/zxRW+uztm+f3In/75Kv/Xj7Z5zBoGhZKfztl8
      r+GPz2QMLnfY21njT04P+A+/3OW0F3TZ0PQNBzcbnj7V4eDSEuX9Ln/51XO8/MstVjOL73TQ
      WLH57hZn1hruBoe/P2HtTMbtu2UiQP5zKMC0cdYsu7uwlS62IDkWVl1QgCzvILkjmtT7J5Yl
      +OT7t6E2EHGSBrggqX43tL7VUYMTmY5cMvSKPqZfMI4VzXiI9ZEV22P99DmqZcu9+zdhv5x1
      Rpgq9UZvnfGaYXJvC2mL5oxJGdxcJc22qsE6IUhMQyA0khcFKo617jprF85Dt8v97fv43T3+
      54vLnPxXj/CLEnZ+fptsuIut9vGhYRzg3tBzf+TZ8YZ6rHRDh9MvXsDcfI/1fkbXBlY6hsbC
      B4PI9i7UFZQxUgalowaySJEZGg/4yDNP9bhyq+IcHZ589iyjySkef/ppxqsjdjffZ3TzA+Jg
      n8ef7PObKwNOekvvhQ7/9E9Dvvb8Y/zm+gdkVtjfbjgnwso3lvjNDw/46/N9fn4Kbv5yxDcv
      9Xlta4jtWurdyB8/vcQruzUbtwLf+rcn+D++u8WLheH+Sdg98BT7wsllx+TRgq1fj/gf/vQk
      f/P2Fo+NLetfeZqf/eIKSyU4K+RPFtx5o+Q7X9rg/7t2n/UDx4nLOe/cnrDmLVoocTVnfD/w
      5W88xge7jpOSSJBjDFldMLq/dyQG+Nznk1gdU/D+SdY0dliMAWCeHFu0AB+pAJIoAIcUIDRz
      CyDTzO00xI1pVjfghDZoFhbLmlUVlXYIrCrGZkRHGhAX0v/7WUF/Y429rKG6vwWTqeDPY47V
      1ZMMl5Xq9ia2nQcWQqAwjkZSiWNyhQzEgDGgmSGWkV6RE5zSYZXVUxusnjpDrYHyYJPtMGbN
      r/HImdOsLzlceQ8d3keqfWIIjH1gexy5N/B06pyDJy8weucqeZvEixqwxhBCxFhDx0JhBaMW
      1UDtYDCMnBHD6FTBwWbg8soqxYnTXLr8OP2zJygnt5hU17n79m0uuIZrJ4Q7bw15qp/zRlXR
      lIETIeP80xe4qfe4+/qE//7pdf7fOIR3Pd96vs/3rw3Jm0CROc6cLHh3v+bErvJH/3qD//Td
      bb651OHGI5GbVyZcLHImGmjOFQyvTvg3X1/nb98fcPI+PPvVFX74821eWOrgC2H4xGVuvHqF
      bz2+xk+rMdlNz5e+vMr3f7nP5cKwLRHpWSb3Pc892uPN7Yr+EE4/0efDGw3rHcPOuASX44NF
      vcf1j5DhLj37wicT9E9JkIvHvPw4BZi6JypgFVzRxWSWYGLbr7RMk0uOWUaUXARnEu+nIfXm
      SVSIYz6//V6opdtbQpYyxvWYUNaoBvIoFHmPylQ0dYOLSmYsS6unGfQmhHsHRG0zxCYN+jFt
      0kytoD5QWEtpDK722I6lamISWOMwRUHuOpw5cZbOmZOM6pLq3jZfYcxTXzvFy/UKy4MO3WYX
      He6g1S74iuAbMu+4fe4Md998l2EJTQMqliZEfATVNFo2EnHGYE2gU+T08pxeZuh3e5zunuT8
      pYvohdPcH21hBzd47eZtmut7PHuhx48/3GUlWoyFwnh2c4fuKt95YZlXl07i/+kaL355ie/9
      6oBHoqNaDkhX2N+KnDWWja8t88aPDvjzkzlvnoJbb0x46XSHK/sTYs8Rtj3f+PwqP7oz5My2
      8IV/ucbfff8+Ly4V3CiUSePJB8ozJ3OGK8Kd8UW+/cQu//GVHR7LMiYbge3thq4XlvsZex2l
      vhP54hdXeeX1HS53euzmnsnAkxlLnjtGQQhVaLuct63xfx8FOI7acKxfbw5nZhfzBImf82Ay
      bFEBsqKLzBSgSRSNYxQgkdUU1xLfIE01jEBqPZpGKj1gcRRy6+itrBFyZTg+QCc1ucK5/hmK
      y2e5U25SXb8LKmQqLK+fZdAbU9/ZS9bEyEzDjLSlmz4gRYb3nlwhOkOIkSwa1CrRCq4WOv2C
      EsPJYpXemdO8uLbGhS8Kf3f9Hjuvl3RwrK2ssLa2wooD54dItc9yVTJ6ZIPm6nt4H5nUkUET
      mFRp8kvZRHxQorFoMORZjrUFK/1lTm6c5szZM+Tn+twcbDG5+SEDdnjn3V1OVA3DfoRxQyDH
      TRoee67Pb9+peNoo9vNdbr1d8tgTj3Lt7gcMxoF8BKu5wJMd7r0+4a+eXOEHdkzzTuTLTzhe
      uZnqN4yHyxe7vHWv5twg8Lm/OMU//OMWX18vuLYS2LnRcDq3BAvjFUN10/PvvrnOq9f2uFTl
      jJ59mtdf+Q0Xuzk7oUGXO0w2A1/6fIefvT/mvFc6l7tcfW/M+X7BXlXinUUncOpEh83dBtfJ
      qcsqgS2t3Hxkc9yHrYcFsUdfM//dPMtcrW0AACAASURBVDk2fa22XAvVxbL2Q0dgMYJO8fF8
      mN2D56N4jUgQnAEnhmgSLOo1dYc7bjXRczA6IIw9tkltT3CGiQlMxnuUg4PUFl0TN0kkuRnT
      U9SYKILOWnwIZCpoZgl1TS4ZjQlYH5N1yJQyCr1KCD1lMBzTyTPuhXtk13fZvttl6e4J1tdO
      8cSF06w0JdtMeO/2HZw4+t0uy8tnOd/P0ZOnseUSua/oh5pTQSH6dH/UgjiMyZCsg3Q7ZN1l
      6twyjGPe3r7D3Z/eJu5tU0UYjQaseKE2qavGqIk8u5zx4WnDW7+reP5ExnvjEv/bEecRhgjD
      LKAD+MazS3x/u2TljYqvfXGZv319hzWTQz9ydahIiCx7uPCNdV5rLcJvzjm+/71Nnj/Z4e3h
      hDrmECKPP7nEK++VnN+MXPj6On/76h7Pr2dcD4adO0NyDP01x61hZGmr4sUv93nttRFPbGTc
      9DX++oRlsTR5ZFJn9KpIcbJgeyioczSTalb6OusE+PtYgE+6FuHQj1yLhDhNnZ6dGrJOF3EG
      LxHva0JZPVCnvHAQFCXDkJtkQjzSUqVpzc+RtyyaHAn0XI/uyhqV84z2d5EYsRG6rofvWLQa
      s7p6ll27j94fEDW2xLxU55uJTVMtVZmORQgIWQDtCLFsA1GJSAOSGWIMCAYrDuk4olc2uh3+
      /eUVTv35Bj8Y9Nm7UmCwVL4mlIF+hPGFU8idLTpZhsktXWtwLsM5g8ssYh1qDJ7AyE+4v7PL
      eO8++3u71MMJcVJjXGQ8rllxjt6KsD1qKBo4c6bgg7sTVqyjdIFlMWwTKAbCN15a5eX6JKeu
      XOPMSz1+9usBT+XCvb5gmkA1FNaB/PmcD39T8y8f6fHTjmdypebFx7v88vaIDIP4wOOXu7x5
      t+ZcCRe+scJPfrzPH5/o8q6M8fvC5Z5Bl4S9SZdhsc7z5/b58S/3eWYpZ3fZsH17wql+wdA3
      VAbsWDl9qcON6yVrnYwR4CvFZi51HQ8BjEEEom+Jj4sKcOG5F1ImWOQBKsTD4MuPXQuZYVFm
      iNBxrlCqIkszaZ3miQrd4vaNL9FJOGb/PyzQIqmPp6R8FNakvvS1QoyLuYFFMDWtpWKJfG2J
      QRjS7B8gXtkwfc5feoLdE8re1av0u6fYYQfdGuLE4g1YH1BnZnGNQQhOoIk4C8EJWit5JlQx
      tUjHRNRYaDy5c9QGbA2uZ6lrZcUqk76B0KcwhhPdgsnSEsv5Mmv9Fapzp8l27tNgyLBgAl6V
      4ANRG0blhFhNGFZD6r0J2jT4kGY92KiETIhjT961TMpAbsAag2/nMDgRtAqcvNzhw+slz2SO
      g4sZ4Vrg9DOPcm3zXcq9wIqxZMbjT3bZu1HzzccKfjr2yGbDC08t8fP3B/S8EAvDyrLlzk7F
      KW85/ZUlXv/ZkG+eLngjaxjd9Fw6mbE1rGlsRqdq+Nznl3jtrTHPunWGL63zwSvv8cSJDh8c
      TBAc+NRC/cOtCafEoCcydu56ikKoq0g0QmYdoUndy9P0Tv9wFyjP8xmHR49MbqEV1KMCd1jY
      jxNKfYBaQPsZUzM05dofOpQs7th6bCD7wEdNg+7YDs4wyS/3oilLq0no58c6fNBRPWK4UxFj
      Te4tkjlKiWyWeww3J2gV0A5oDKhJ9cgShGgTa3RKIPQGpAlkzlFrJKuTwFVBsUwnKTq0TsHp
      pInkIRILSzVuMEYYquCHnlPNPv/+yQ6rXxX+w+1Nrv/qFsN4hvH4DvWNe4kYKAbvBFtHXC4M
      yoa+RqrY4H2apGmzhmoi9DJhIhEzsZiOpSo9zhpQQxU8ebTUTlgTZbRuuH2t4rGNjPdGNfJ+
      w8VsifvNhHoiFGp49ELBm/eE/s2KF57t8fKVA05bx6TveOvOGGmU3Dh6j2a8/1bNn51d4pfZ
      hDd/OuTzj3R49d4IIxmZibi+ZbhvuKRw+gt9rlwp+fyJnJsjw+jWAUu5YTs0RBW6Xll/tMeN
      ayXnVrtslRV+c4LBUZVxNts5aIA2J7XoO+hxLtBzX//mrOhF4ZCmTF82G2kUI8T0+6hHRqu2
      3xb1Ydpzf1pjO6UqHBL+NqkU8eR0cJ0czQxBA01Tom3V1sJRD/0vXaTOsrjOJEsQVWeF80Eh
      aiuwx5CwUUPeJrzY6LIz2IZBhUpggx7Ljz3GzckH6N1RygG010BMBe4NEasRYy3Be0zbczSK
      IgEyZ6gJuADStdSThq5N02OIib6NS3FGR8F0DY+sw61YMbyfkyuctOfZfWRM/eE+ReaooycP
      QuwY6klD4YQmahrOp4GY5YRJQ7drGXpPES3BRWgigklzlb2nY4TKGmwFpkgtz40TclFKb+hq
      4ImL53jHK6d27hLPdrhzY8wjzrGVC2ESsY3QM5FwzrHzQeTrFwt+3lTYO5Gnn+jwxodjOljE
      Kcurlq37nlNi6D7b4f3flnzxnON2o2jl6XQM9wYNXX0Ef7ZkQ8dcu15yaSljzwnDXc9yzzAo
      ayTkbZ8on6RA5htv3unQ+IboPfMQIP1wyAJEIU1smbo/bUIL5sOD7OKsxXbXSx2AmXF9Ds39
      ihHRtIPHqWcVtaVMwPyteozCzGV0Piz14Qow1XBtBV0jmChkIhRWaEQJIUFgxxqr1gFDhJBZ
      6lgTmwpiJFfD2bXTrDz5OJu37lNuDrGkcaguAtbQBI+TxDwNPiBtV9FIxASHyWFSB7rGUGUB
      ndQU1lFH5l0p8mS+lzKTdupx4FoQ6sZxMnq+c9py+ttr/C/v7VHcFUZlSU8yKuOJ40hmDFUQ
      Yox0xNBYm6gVPct44lNDKgng0/gpmxnKKg3uGDdKERTvWuHHYWKg9MJaLgw6ltvX4cQzcGdT
      kOs1HWPYbyAWkVBFnrzQ4e19T+d64LknC35ytWTFCH5JuLrVQIS+UeyFgrtXJ7x0dokrzZjt
      N8Y8dibjyr2KvlUaMdhlRzkJXOx1uHdiwvXXas5uFNzarwgqGAzjJqK+IJiQasXVIhIQFUzK
      jlI3dZpwdET4H1CAwd7+LONppt/biS7GmLStTmsEpi6NtP9IyrAmQZxbkfkPOpsyOTuJVllC
      jBDbsUiqKXkzK79sP6blVSRFmY4feVhEkHb3qCl5ZWya9BhbNCi1nGqVoA2qE/ktfWCtyt7B
      feJAMSFiXE4UZacZMdi8Sb09SAm7mDLQKgYNASOm7abfcqJMmi6ZY/GZ0NQNXZtTqsc1SVE8
      6ZpzDE0GvlS6XWFcBTIMwUFokgt3Inf87gnHj364j240lMOa5dww1AbXJHPXGKD0dAvHJEby
      OhILx3jiKayljhHFYiVCJlSVp9vJGVUNHbFUkpAbgyAm0jSRIs/YaTzOC97ljKt9IgYTIktr
      OTv7nmIfTpzr8catISdMzrCvXLlepck/EpHljPHthmfPdninDnC15LHzHX69OaCrFpMpB3Vk
      yTnW+4bdnuHuDc/F9Q53S6XZLbG5YfugRqOkmQ8ovgYI80mmMh3sLdgsA4GmrNO2naV4YC4h
      RxTAxLlbMN1rF3tET6fBpK+kEDMFkVSUMS2CEWT2+pmSGDtTrGQhknWwSSPa5ITOIEdTZG08
      0hCDI8ZkPeIC1fn41QbYKAGlaseCGRUKk/CiOkoqopnWLywGGZJcPYismD5Lp06x48bs3xuS
      39tCBjUn83VGfRjv77V9h0w7MlRxUfDO4EOka3JKibg6YJxjEj2z2XE2dU8rCkvpI0UJWiij
      UuiI4KVBY4aEiOs43q6U3s9qTmSW1X7gv73kKF9a4j+9soPuGsSBTMD1siTQxlI7g60anBE8
      kRADHRepxWJLJetmjKuarrFUMQmS0ZTM802gyB2TJtARQ62KCVATwYMPwtZuRIOiYtnfnJCH
      jImkmQGx8pw9nXFnoLg7NefPdvjtvQk9SazM23sVEnJsVpOtFwy3ai5t5HxQecK2khc5N/dG
      LGcGH5TgW0Tv6JOfili7gSmpBqRu6hmxMQAmmf+ZhKSuIZ9imXZolEoaVApHRh8vCL+01mI2
      NE8ETJwpzOLr0xnJTKhFwdkMk2VtosliiESbz9ysqXulC27XNCbRNtg1LaQao+IQcmMwRqmY
      TpmcXoGAxpnVWbivVFYx6qnHEzoxVZ8txw6PP/o5bmxMGP/6ADOJeAGjqXlWbRTbRLJMqELd
      Fs0kpbIhzTyojeJqJetYJlXq319nArXgTCCKI0RHRoCOpR57lgsYBYMJnsurGa8v1bz9o7vY
      UZcoSl4GQj9jMvF0nWUSA64hVYtZoFQ6nYzSa0rQ5YZmEskcVAoaFOcMtQVXe1wnZ1J6OlYo
      23jQGBCTZkgY52gaxRmhCh7RhH5VXrA12Kzg+lZJhqE2ltv3qzSNUg2ae6oBbPQsuz4j3wyc
      Wso48EKs0zSYUHuCGiSPxFqSez73CZhu1rog1FP3XUSgHVif5zllU7cDGOfPWFSOxADRHxYA
      se33ucAy+9gHd2BRZhNbUnltnCuIAMwH5IkRxNhDrpXRhOQYSa3QdSGBpca0Tn4qiRSNLJ5+
      6gBnSGOe4mxWWdCYml5FxU8D4qgUKgSb8gTppsQHrkjFMGnGTDYriAGXr2JyxwETrty+ynCr
      QquGqDbVDhtLiCFZNCsEn6InUfCmbdTlHGX0dLzB5wZfejJnUj1zTP2NjDX42tNxhsoIZuLJ
      CsfARzoa8X3h1Z1A/IWn6CxxNni+87mCd57M+cE/HFDkLeIUU2ChVqBUXDexRAs3jQNArKTd
      2kcK56jagNpnDi0bMmfbY0UwKc9BbGaQYiZCHZlN7AxNCmgCkabxiDqChFncpShDPDJIzY13
      Rx5BUavs1p56knhciWmbZo7ZTNH6MA9ej9RvL8olqsTG46wlCEzqefZ3ugzw+PIRBXgQ54/T
      4y287dAbHjiJw8dY+FnT8VRNu+Eq0cwnv6f64iT4Vi3kMU1lceAlEqsKwuEO1KHt4SltoJ6u
      pg3u2uNmR8gWuUYciTpRaaCsA95H1LfqqjI7F1TbAD2Qq+HU8knq82fYHtxm9/4WFli3S9gz
      q+wMt4mDBmyLdIVkYnEmZYijIWSOqg7kmUkd4JoANpVToqm6zReKlq3r4ZUsKNEZaj+llAh0
      FR0EXBeqceDs6Yz/mNfc/fsBJuSoemwAazMqDFkdiV1DNfFkmaEMmtwwSRuO94Fu7hL/RhyN
      UaRuFTpEUq9eS4ipWW9sBG0ixjh8nOdmdCZkrbVIoo2qLOzX7X1BSENZIz0rrHYdlSjlKBCj
      YAiJvkLEZBDL5Md+HByuMHOzxdp2U2naT00bpFFPLhG70vu0VIjDWhePaNVRi/GgjTiaR9BZ
      MlakncaIou2ESawnxkijnjCpkiMnMO9LtBCTGIMRM/t5WomGtPSJNmOL2DRxRhJG0y8UIgRN
      HRhiUGIIhBjR0LQZw8QtmsSGyfAALZvWt1TOrZ4je+Fxdn/3KjosEbV4Uie3aA3SBJyz1Ci2
      9libBl+kIeCCMRHfQNcaKiJuLNB1jGtP0eLXISomNrjMUjVKkfXwEyWOBNsRXrlfk21ZMjL+
      bN3y3FeW+Fkh/PAf9im8xedJgDIn+KBAwIhLVqkBVzhGdRskh0SnUNNaVS9kmVKFSGYELSCO
      Uz/VEML0wc9k4XArzPkzf8C5VIiSkasnAruVpwyakLsWu0dT9Z/NQAcPNmqbi5HO8lcGcM5B
      ZqnLGhNDIisqKIFClecv9ZElw9ub5e/HBZpdxqe0GNOXz5MQ8/xAFOZJs6PHbiFWmUY4hNlu
      85EbgplbjBS0p0kzlTU4YyiMIc8M0QkTwISkHDOrItPieiBE1Dl8U9GXLrrkqELFu+NbmJ/f
      x48OMGrQmBiYUSTt8M7SBJ/6pk6JczG1XPQWqA1FJox9oBAhZA1aCs5EIglVch5ix9GUgW5m
      mfQEuRGxmRIawbQdrBux/HJY86NfeQb3ImvG0JeabK3LzZ2GGpJlyAx1VDIPoYhoBYUTvPfM
      iohUEvKWQ1lD7sAHj80EP9E0pqoFN3TmRi48so/NXCoZFSuFoehk7DWe4A1oO1ZpCmQoSKZo
      dbwCLDIUBFL+JQa00TbrL6jJsKHibEc480iXDwYVOzfTNKD/KgX4+HW0xTrAMT2DWtO2KPxi
      0oC6xUTZ/KZ+3M2dfnxK0qXPC0CDb9F+Q0Kt6kzxAk1skSvmVgRjsdYg1uKMxWaOfqfDxslH
      WD17nvtxl/LOLjFEVrMua/117soBgzt3kSr53iEm2DalV2LiFzlHHSOZF2IGZRPJ22F8Phqc
      KGIyvI9kFuocbBmxhWNSNWw0ltS3TDDR4zJD5SPdKNy3Ft1U+s7yp+ccJ7+0xHdvjtBdcKXi
      OpZJE+kIVBakTnFAHQTE4EjJPKcQnaB1ILcG79ukWWHRnTlIfZzwf9SauvEigkMYq3AwqvDR
      IC2xUDEtbNPmZmyapjOFwadrkU4zherzXpfJeIw0HuMygkZMU3G+C5wt+NUHQ2Jo3eQoRxXg
      KNHsoydF/n6r5WGLtJ8X2wxwGwxjmSbhJCZMbjpq86MF3zC3QHMzfGxXaklQaKUBGsFqpGNI
      fXliCiAl6uxhRcAhSF+pY0a8v8/24ICRjmAccNZwMl/mwqWnCCs7dGxObhxiDLF1X8q6ph6N
      qeuKajTBkQpopEkQqm+vzyqotdTe08ksZYhktaBOaepU+NN4iBpxQZAso6o9XWuZmICtIuIc
      k6B890ZNvFMiIeey1nzjxR6/O2l5/dUJZRkxcRqPJRcmt0ITGpwxNCYR1oxJcK5KK6AZhCp5
      0xo+XvAPC2ybTlWlYw3rvTQqaXdMC2/O3tUKfzukSx2qkvD/xZYlOo0zknhoVCaj8QwJInrO
      LAln1gvueuXehyUap9Phk3v1MSiQHPvzZ7GS1h65QfMQP/1/6sLw8SZ1mldYPNcYD/9/umJM
      VqEhQZcOwYlQG4GQUBw1c52bvjsNO41U9YjJvQlCpGt6NF3l9vYtNl/ZpZESytQi02lEbI44
      JS/SpPu1jWWKC10CCaWyIkieEaqacjDk4GCfMJqQ2YJJ05C3aUUfBKMBazK8KkVMwbG2DNNR
      9GRq0NQig6hKbg21t3Q1sna+w/dGFfff8cgETouydq7H1e0arSDLhLpRnCloYur5qcakwYHt
      M4hR0ZgacMX4CXzyI88sELBqyAWseHYqqIIhREvqpHH4vSl2S0H0IQhoQWJUUnBspmWIwdFx
      wrkTGXkRGfjArz+sMLGNaaY8tHSmH4cCHb6oT/K6T7NUk51LO3VyVyBNhhGR1iLMxxd93Hqg
      addDznPW6rFFPhtJShHr1LW5cIYaoWnmViehuNIqWYJiM3WcXTvD6EKPu1ffxY9HGDVc6J1G
      HzvBjQ9/B+MaE4RQDhgfHLDfnlJEcRiCESRGsk6ByXLW10/QeXwZYiSUniiQdQqsQlWO2Lmz
      Q4+MTWMxTcBkQukTgjTN0RAiWZZTVtB1kbENvH4rEJzBNjlfPQGPfLHHy7eH6KbgbJNQH+co
      Q0OmSjAB4hSvSb2PjBhisGmDfeBZHh8DLCqCU0euylI3cYH2qpAQJo3pKU+Pu0iLUZLSHf08
      QNsSVDAESXUgp5eU3qple1Syf69ObrVm88z/kfV7xQDxsL06VtA+rZJMNX4GlbWaOhP+FhX4
      LFeUuV8ZQ6onzq1FDNSx7Qna/l207RAxbd0CeAKbg3tU1w1UNdP8+krepT5/lnj3KnYYUnBj
      0vyClB5RnLEEIiak5Fk1KbFVxeZggFxPnys24qOQY/CZ4iRjbf0kpx49B0sNoQ40pSfLHUWn
      w7gcMdneZTgeUY0m5Llh4hUXHcHEtGtr4Gf7QvVfDsgxvLBkeP4LK9zODS//fEh+oESJTCki
      IqZ93olfFIKkALWV1ll8xlR4OaQdi4phTMBZpYzKeKyEmJQfEaKmoSBHl6CJpzIHW2c/SxSi
      WDIazvYzljY67PrItdslRBCTt75Vndyo2SHm5/SZVYQdXenCj6JAxwnwYlZWZ4FPctQjaqaK
      kUhOD3eFPn28slhdpiS4cYKkQhdVlgwEI0yCxfiQknEEUDOLDUb1KHH9ySiWljmIQ97a/ZD4
      8k3EB6ZIYCEZdQd0VIEFH2NK+AG+3V01JqW0aEpQecW5lnZdK9HW7Ny+Q39lhWvvvYnRhHOb
      zNA0gW5eYHpdTp46S+epFXxd4+sGESErMlShGg7ZvbdF1tQ0TeTNgefNVwc03nBOlK+80Gey
      anj5d2PqrYjxnphmX2ExSbDaR6BR0/OJZvZLIdVkS2whaE0ulBOh7xSXWwa1ooFEP5H2u6Yg
      XDTFfGmHl1RJ1w5DnOaRWqiCnhNWVh3SLRiUwt27k0PcHYlt0UtyatM5H5GfPygK9GDe4MEY
      Y8pl0qiItTMHSGXO5puuT4M+fJIVhDSJXiE3BucUDzAVUAsxBmbs13QWGBWWXYeNC5epBtdp
      xttoE1iny8XnXuJ31fuM39tEhjJDhFyEKHF23Ury212boRYfWkp16ksaEQhK11gaE1IQHC0+
      A60jubVMmhK7V3Fnfx+5loy+Me0O3tZLW5ezfGKN/soq1lqauqJuPJ1Oj14u/MYPuf/WDp1B
      xp88WpCdaXj1ZsPedU8WfYq1jKftG58q+EziP6Vy7dQKRiS2e7UhF6WXKeoMu5NEfAwtdTKq
      aRG5JLlRUj14lJjG4SqYoFiSLHQzZamfoQJjjWzu18i+g9wiMbmoZoogen9YRo4Rl39mBTi8
      Pi7GkGkuoI08Z52iVWdma06k++yEf2bGTTLvqkoTlKZK96xvAr0iQ3OblIE5cUJJNIf9UHLw
      wXs0cQSY2e6GJFrutFHvCdPh0le+zq8+/Al6dzzLhWhUjEiqJ/CC2pSFFVJCaXq1hRFKfFvo
      E7GlQTOlCTHlv3Xq2qWept57rLVoVIL3qA/s3BizI3cWXMzkR6tGTJ7T6/ZYu3CeWxsF+wNY
      tRVf/9MlTp3MuLl+kfq7+8j+Hiurwvv3JrhGiLZBgkuESFpKR+vG9YBghUnlCcGlXb3F+lM/
      DWmD2JaFKhETMqxtWOvmrK846soiCINxYGs/ZXYFQ6e/ShXHaOlBwLa12YfiiI9Yf1AF+LiV
      Mq4J/QFQYiq2CdMZYNp6RumxfdS8gvkxH64sDwTNIe1aMWkiEsGJxUpyhQyp9ck0o9eitAB4
      PFIdYKPQ76xR9WFv94Ddt15FFZxmBCPs6BC58jbiJLmnMj+/oMm0B0lVXGngSLoGQ/rZxkht
      lOjBqeBtciesJn85SIJSozEEr4hx+DANANMsg6SYMe3iatpzSO5aLBv2610Gu7vtPUp8rA8+
      iEh0nH5yzGUzxn75LHv7BS+eclw6Cdtl4E4lZGVkKUy4MZ4wub3NWq7ETs7mXoPxUGSRpjHk
      eLKOo54I3UxZO5kz3POcOmE5CA5TeaTos707ZrdUbu1Wqe6izfdOUfRJPWorFdvKr4Vn+kmQ
      Q3f0Fx+3Pms49PDS1pds8eL2goXkawLJ59V52/KPPNqC1fhEa4oOwQxbDho58ErXC6uryppT
      xh1hUmuLg+ssBa+aJmUu9ZexJx3lYB/qSKbC82eeYfu5Ph+++nM2d29iEE5mq1Qnu+xv3cH4
      aSKuLefT9DC1rdGOAAGcU/ZCMo0Bkk9O8rNDCyQkVy4lrmLbwSJdz7Sz9pSs2EbtU5yhvadm
      wXNN1icdN+Vq4LU7O9hbB8lVdMrbEqiCZRXh0Ue7XBtG+trlT771HAMbuXMAl5rI2krGVg6d
      /YCGXd65u8uJQaBajty8U9HLHO/eqYihaeUgYFWomTIEpvKpOOsgT50ejAi2U9BUFdoskOba
      mgFZQFGP1rZ/agvwUUry2cGjC4H69ORbPyABMzL742cdBxw6D2mHb+iU/G2oQqT2AReh0+YO
      YosMiUKNcm9nk3oQMFUrmKLsjncYblfYEBPJKwgvnn2Wvb94hJ//3/8P7M3dKRfbQPBIBlwE
      fLSAQeOcMCAyzTjLoThLHwIMfHrawjQnErBWZ76potReCWIx0TBGefP9kswFjKv5+1e2qSsL
      QVDxBGOQaDAOup0+/fXTyCPLdBTOFENMsGz0uogGxsN9hvf3qSaTBD5oW8rawv118FD6hMy1
      7M+2HdQMjYoJ/KdV+YUE7Hx9pi7QJ3U1PsGR0r9txlY1tmbOtMKfdslPmB741GsmeC0MioKK
      YSyRYRWghmVnMR1omoirJc0nkyS4jdbYSumYnPzEOnujba4PNtE3QppwaXvUjHjlxq+o/+Yt
      OPC0RIMUTLbn8SDWDl4tGubXrovne8wNOZq/+a/ZMAQw0+7EbWCtaltURhEbWclAreOgagjB
      pMJ040ENNiqoh9ow8geMBwOQ0GaZbZvUStVerlPQXVnm1IWLnHj0SWzmiWUgK3KyzFHVFcPt
      PXzwjEdjovfpHGYxI8lTaF3MxCz9g6NAaT0sI3vcShw0YQo1p2KXqe/NzB2YWrlD7VXa9Ul8
      PwB5WI+haWBKTCl45p8bA6CGcQgwTuexZAXNlWENNAnBiKSSR1vkmNISpUGA83adM9/6Gr/5
      4KeMP7yP7FWsa5+1p57g2s472J2SaJKwTLtcTHc0FQhq2xFWOrMAC6d96D5/kp1+0SX4uNY3
      KWHZxhOiJEa/YETp2BSADmMgVHMinyEgMaEyqKCSYg2Zgh1q2tZMAaPzzK6vPMN7YwabW1QR
      br33O1y07aZkyIqcot9jeWONUxfOoVGpJhXGOVyWoaoMDw4Y7O7gJ4lrMW8NNc9j/EEU4NNY
      gKm7kbQ1Qls2Od35Z8oEiNi2Q3mYuUefVPiB9mYfd8JTv1fTa9qPT2OWUpH7tB6jEJlx/m2E
      zCi+pRCUsWJy+2b7sFNIs+1HjN5+g3o8bN0mw7LNefLZz3P7/U3qnRITDEJID0xTl4xE21JU
      cjR4pjTVo1f7aXb4xQ2EIz/rQrC/cHQ8ocX4BatJ+F3iDVLGgPfpdYdRGD1UcipTivoUg5o+
      u3lhbws1t16/BKY5aUNESAXwI7O8CgAABqBJREFUk9EBo53t9DnWoj7McggiQp53WVpbYfnS
      JYyxNFWZing6RarKGw8/OgieJ4ra7w+bnfQZr8VPnfUkatd0lxKRWRfqf77TavcLgSlNeFpu
      mXZgQ6VKXQVEoCOW5Y4yITAspRXeRDoruivUHWWyN2K0eYMsCEW+zKjnuTXc4+bf/Z94DS0M
      2JBpB9tz+FFJNInGrIAlJ/rJQ92/T7vZPMDMXRRUFqwK4EiNBqYslcIoNjc0MTJsYD4QQud3
      Tw4f+4GCqVbRFhVudg7SkiSn4icRcTnWWeqqPPzekPzCZC2TzFTViHJzxO7mnTa/NGUXpK/M
      5Q9pyzk74bkbsvi1eEGffRA6s1Mzn3Za87tIwUj9iEIqd8Qgxv2zIVTT4EmZtnmBBEyGNKyb
      5BJX0bM9iQxL6Ats9A15V/Au0tQlsapbi6JYMXzu0nOcevEJgotEH+l64Y8uvMTyi08zNiXV
      aIJopMcSjUs1y44CdMKDEcKnvabDrs/is1ysupv9XiEzloBQOKGXC95GRqVSVTZlYFMVzUPX
      cZ93KC7RueWQhdchbYTUCnCIceb+mXYY+uF68LSMkvosqUztOckaRYxGQlN+tAK0TKL5V7um
      wihqEj4faAOzBy/g91mHKAp6PBVu/mC0xX/b936GStDertk5RQ7fYFGHiRbTIjNeDSEIMaZW
      jAe1J5aRZRGWOg0Sa4ykrGYtgbduvMnW69cw3kLbkswZR9bPkm8dhb4a/s2f/DvOfedLqbkW
      Ocb6T0X8eLCeYh4QPywumH5PypA252UbcO1Y2lEdaGpD0EhMzV1ImOyDpYuLx/uouOTBZzcF
      IyLWOIr+UuoQUpdYcQlhazyoEnnQmsXWIZIZEnTYW1AeqAf4ZGuevm8fw2zHfvCiDgvMR+ib
      pADJtjXDCVFhboYWjjc9ZnIXBDSkpNHCDvbJoT6T6hGOVZypKRekbXxrpgiMxMMhaPu7iEAU
      SgWCpj79VpgERYOwJIrpCkNvqPwY20Q6tgsbywx37/OLD14jXI+YaIkWRj7wg198n71+2Q7f
      iGDC7F4bVVL+lAd9wel9mtKLZ9Vecxcl3WMzRQvbwDT9Id3fxEeCSEAY1kLjp5mB+R3QaaC0
      6DZ+5H0/5m4f44KLKFYsqNJMxu1OD5Ay8mHxWh74rGkMMaXKz92z6b9/0EzwQ4PO6d+nzhmL
      ppI2ppoL9+H3HN5BPi1VQjXxfB5+QvNjs2gBVB8g9+k0Ep9hlEJAmTSp6N6hkKdBFjYqS0YJ
      ecaK6dO5fIn3mz3YSwHeM0sXsd98mrd+8gO2D+4iQ8OJbJnlx06zLTdAU/Y3tDMJ5nft8Frc
      DJQwE9sUlJv2OuZU4bTbK9YYxCQahg8hddMQm+oDHnovj//L7w2/iiBW6BTJIoYQZm11vPeH
      ns+xb184r6P3ZqoKh+sBjuzQehSR/kMEwfMthWnmbvECHrbL/z7Cn943DbSBIwo6p89OYdl4
      2Hf+2IO31AoSm7EhtetWaac/ZkrlG3b9Np23hixJYGw9EoXdZhduXic2swJOnlm9xMq3v8I7
      P/41RmsiwsrKBgeTPfDh2BM6aoEXi0tM2zVKSFNuEsycmE4hRrSZWmFJhTY4gp+7nQ/48A9Z
      n+TvD0KxgssyggbqcjSL/6bfjxPqo5vkcV7AkRD8oy2ALIQISUim5u3BvUY1QYafhQ9+uCD+
      +Jt3nEVYDJKnU96P5iCOfxjJPB79S6uDCY0QmfmUzF4tD74hfTpMnYSE74GktisGaTvIRYZ1
      ojtEFWJVAsKJ1UdQu8NwNKJ++x1WAO3njOuGX26/ydm/rxANqFgMygnTJXtmlZ03r82EWWd7
      /OJ5te6QSTRsJJJJW6MQUyFNiBDDtHXgAgYkCY5GipRpnqZjH3o/H1wfl2OYrhkrWATnsmRx
      QiL/mdwmukM7zH1a4XXcZ02v+GGfOH3NERg0Ht6Bj7z94y5AWhRgvkOGuTP4idZiEcwsomgT
      JUce6sKFzEvo0ruMMURJHQbSTUhdIVQ01bXq/Nip8EOOdc9Epw6DTTujeiRM61rlcLDeHuto
      SxiZPgWdF/wYSa5HbHMMntS012maMbCvjmZSkiMsZwWPvfBN3tx7A/P+JqYTWd1zXHzhRd7d
      epubmzfJhoYllxGLDKoxtRFMA7k1lAJZ8BhnqAOpY0VMk3Oqdk6WHocnazx8LQKBHOKYtoXH
      pwKiZMFiHLcW/5YVRarZLsfpd8YS1aNVYD5MRQ8d82GKGLXNALfdotteYbPn+/8DpnbV2VIu
      fw4AAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='Historical Data' width='192'>
      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
      AABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Sheet 4 (2)' width='192'>
      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
      aLwcXuW25AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='91' name='Volumn' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAABbCAYAAAAlfYqHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAABTElEQVR4nO3cMY6DQBAAQft0Ef9/66T4CTjxINFVMdIsQWuHwH6f53m+IOrv7gPAnQRA
      mgBIEwBpAiBNAKQJgLTLAGZm4xxwCzcAaQIgTQA/MjNr6+PTZm2+jwBIEwBpAiBNAKQJgDQB
      kCYA0gRAmgBIEwBpAiBNAKQJgLT31R9jzczrOI6t88AqNwBp/9885GeRPNVXAfx6Bdpcs7Zm
      PW3O5qzNOVYg0i4/guHJ3ACkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMA
      aQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAm
      ANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIgTQCkCYA0AZAmANIEQJoASBMAaQIg
      TQCkCYA0AZAmANI+dGtBgG0XKiQAAAAASUVORK5CYII=
    </thumbnail>
    <thumbnail height='192' name='price chart' width='192'>
      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
      a5IrwULX/j/X26kE5y6r7AAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='price chart-day' width='192'>
      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
      hGn/D7a6UVwAqFfLAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='price chart-month' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='price chart-quarter' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAALiUlEQVR4nO3dyXMb6X3G8W83Vm7iJkoUKVqkKIlaxhxp4vLImfgSL1cn5+TiKpcvvvjv
      cZUnlco9B6cqySRekkylYns8oSkNd5GiuIEgQWzEDnS/PlDD8VikptoCMILe53Ohugvs+h30
      sNGNB287xhiDiKXCAMqA2Cr86T8KhcIrH6xerwMQiURe+Vgi7eAEeQtkjMEYg+M4OI4DxuD/
      0XatVsP3feLxeCtnFmkaN8iLG9UiT5484aP//z0A9UqR1bUn/PZ3c/gtGU+ktcJf/JLPROI9
      xFwfnPDp9shAN3XfxTEGz/MwxtBoNFoyrEizBQpAuVhg5OoUmaVFjvNZjFdn56jKvZkpcBxC
      oRC+7xMOBzqsyJcm0FugWDxOan+PyRszhEMhIrFuemOws7vfqvlEWirQRfAX0UWwdJpAZwCR
      N40CIFZTAMRqCoBYTQEQqykAYjUFQKymAIjVAnUW6pUC65u71DzD7L3bNKoFFpbWiXT1cndm
      ulUzirRM4DJcd9ShXDjpfqaTe4xev8PR9hqeynDSgQIFwPM8xq9dJzX/mEajQSQa5bhSwTcG
      V2U46UCBrgHqlRLr6xuMjI6TzxzSNTyBd7zPxcvjOK2aUKSFVIYTq+kukFhNARCrKQBiNQVA
      rKYAiNUUALGaAiBWUwDEagFXhiuxsrzM6vrmyXatzNLiEuub262YTaTlApV23HCM6RvTzD9e
      AKBynIFoD/lcBmOunq4d6vtaKFE6Q6AzgPHrPJ5/zK3bdwCoNxq4roOLg4+WWZfOE+gMUMod
      YSIxkskDqnGIdPXTSO0S6+rBdRxc18X3fVxXlxbSGVSGE6vpT7VYTQEQqykAYjUFQKymAIjV
      FACxmgIgVlMAxGrBAmAM+VyGYrl6uqtUOCZfKDV7LpG2CBSAWrlAvlRjaWkRgGoxy9OdJI1G
      vSXDibRaoC5QtKsXDpJcGBgGIHuYoFSFjY1N+h/MamlE6TiBAnB8tMNWqsyNySGyqSRdA5eI
      FlL4nsFoaUTpQIHKcF6jznGhiBsK0x2P4oaj1ColCEWIRyMqw0nHURtUrKbboGI1BUCspgCI
      1RQAsZoCIFZTAMRqCoBYTQEQqwUrw5WOWVpe5qO5R6f7DnY2+PXHj17yWyKvr2BluO4+xkYG
      2dzPAuDVyqTLPn2xMEbPCZYOFCgAleMUzw4KzN69RaVUJJ89ol6rkUgkuHXnjspw0nECdYGq
      xRxPd/YJx7q5PNhDvHeISMiQzxe4cKFPXSDpOCrDidV0F0ispgCI1RQAsZoCIFZTAMRqCoBY
      TQEQqykAYrVAAfDqFdZWV9jc3nu+XWVtdYWnW7stGU6k1QKeAVympm+SSSWfbztMTt8kd3SI
      ngwsnShQa81xHRYezTFx/TYAbshl4dEcV6dmcNQGlQ4UKACFowRlEyWbSUM5jcGh7EXIZdIM
      D/SqDSodR2U4sZruAonVFACxmgIgVlMAxGoKgFhNARCrKQBiNQVArBYoAMYYEjvPSGXyp9vJ
      vW1yhXJLhhNptUABaFSKdPWPsL25DkDhaJdjL8bm+ipN+zhZpI0ClXbC8W5SK4sMjowBUCoW
      6B+app4/xFMZTjpQoADkD56xfVRmIl4jtb9NfGCUtdVPCEfjhB0HX2U46TAqw4nVdBdIrKYA
      iNUUALGaAiBWUwDEagqAWE0BEKspAGI1BUCsFnhpxEcf/5p08aTrUy1mefT4Ex4vrbZkOJFW
      C1TaCUXifGX8ElX/pD3hew1q9QaOh54TLB3p7AAYn59/8K+MTt1hZnqSSDj0wku8RoPjXIbR
      iWnSO+v4jqOV4aTjnF2GM4bM4S7/+P5PaXSP8O7Dv+KbX5+lXinyZH0DIr2MDMbp7htib+sZ
      sd5+JsYuqwwnHeecAPh8+D//xe3Zr3Gxv4enWztcn7z2hQdTAKTTnPte5WD7KXOP5hm+eo+/
      +9vvtnMmkbY5+y6QMRRNlJmpSQr5o/ZOJNJGLwbA+PzuN//L8NAQpUqN23fe+hLGEmmPM84A
      Djdu3WZtfZP33vsGT1YW2j+VSJu8GADHYWBohIez0/z7f/ySt2bf+RLGEmmPs68BHIeH3/wW
      8QuDvPv2rTaPJNI+51QhDLl8jru3bpLO5ts7kUgbnR0A3+cf3n+f9FGKxIHuAsmb69y3QH3d
      MRKJBOnc8eluY3zWlz8hX/GAky7Qxtoqz3b32zKsSLOd+0HYxaFByrEuUoldYBYAx3EZHuim
      XPe5EA+R3lsnVWxwgRK+ynDSgc4JgCF5lCUcr1DtGT3zFfValUi8m4sj3VSOdvFUhpMOdM5F
      sMv9uzc5OMzx8BsPT/fWK0US6TKZ/R2Oj3PEB68S8/IMXB4j0qaBRZrpnCqEz/xagh//6Af8
      6ucf4Ps+AJF4D3fu3uP2zSmGhi8RCzuMf2WKscsX2zmzSNOcexF85WIP//Jv/0lXyPB/c/o0
      WN5MZ75Z31qZZy9VIOwa7v/lt3nnzmSbxxJpjzMD8MsPf8vff/+HxP0iP/mnf1YA5I115hdi
      tlbm+ODDOUKOz4P3vsOD21/8ZRjQF2Kk8+j5AGI1rQskVlMAxGoKgFgtUAB8r87S49+TK3un
      +4rZQxZWNpo+mEg7BCrtOI7LpaE+Kg2ffkIY32MrcYh5vjKc7/unP0U6QaAzgOOGCIWc0+3U
      3lPypRp7iQQNz+A4zkt+W+T1E+gMUK8U2UlmIQbOQIS+0Ru8e9Vnby9JJOxS8x0cx8F1X/3S
      YmNjg+vXr7/ycUReJlAAIvEe3nr7T78k7zI2dqWJI53IZDJNP6bIn9JdILGaAiBWUwDEagqA
      WE0BEKspAGI1BUCspgCI1QIHoFIuUveef4fGGNKpA3KFUrPnEmmLwM8JXlucJ106WfmtXilS
      M2HWV1dQ/U06UeDnBE+Mj1J9vh2J91BL7NI3OILT5KURfd/XEovScoEC0KiV2d1L0uiJEBoM
      ge+xmSxw/Vo/NHlpRNd1tcSitFywM0A4yvTdB4BDJBLGAb4+MAKqQUuHCvaFGDdEPP75p8bH
      Qy8+RV6kU+g2qFhNARCrKQBiNQVArKYAiNUUALGaAiBWUwDEaoHLcHO/+ZCD4zoA1UKGjz6e
      Y+6RHqEknSlwGW7q2vhpGS57lGTy1luktlZpqAwnHejPbpuVCnli3X2kshlqnkfIcfBVhpMO
      E+gtUL1SJJmrk0/u4hlDz9AYfaEqU9O3UB1OOlHgpRFnZmY+t+/y2ERTBxJpJ90FEqspAGI1
      BUCspgCI1RQAsZoCIFZTAMRqCoBYLVAAjNdgdXmR7cQBAF6jyuryEpvbey0ZTqTVAn0SnE5s
      0Ds6TXpnjYkrlyhlDnF7hsmm9zFXr2DMyZqhn/58Vc06jsh5AgXA87yTgtrz4o+PQ6WQBVx8
      PntYdjMelN2s44i8TKAADF+ZZHF5ga6+QVL724RiPRgvRzgaxf2j5wOHmrBYluu6TTmOyMsE
      +z5AtIuvzs5+bt/g4FBTBxJpJ90FEqspAGI1BUCspgCI1RQAsZoCIFZTAMRqCoBYLVgZzhh2
      tzbJ5Iuf7uBwf5e9g6NWzCbScoECkD94Ri3Sz9bmOgCl3CGHxw36e7tbMpxIqwWqQpRLRS5c
      vkYxvQtAIXdEzYuxuLDI/a+9o6URpeMECsDQpXEeL88TjXeT2t+ma/gqZm2dUCRKyHEwWhpR
      Okyg/2HRngH+4p37n9v34MH9c14t8vrTXSCxmgIgVlMAxGoKgFjttbvNsvuzX2EaHvlShp1n
      GQDG/+avcVxlVZrPMU1ceqFWq+H7PvF4/M8+xs8mvo1XKlP81tv0/GIegO/t/zdu5LXLqrwB
      9GdVrKYAiNUCBsBQKhxTq3uf7fE9ypXqS35H5PUVKAClTJIn20kWFpdO9+1sPmF+Ybnpg4m0
      Q6Ary3wmxfi1eySeLgJQLWapOF30xU5KcM0pw714Te55Hr4eQykt8AdsWBFdioP+RAAAAABJ
      RU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='price chart-year' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABYlAAAWJQFJUiTw
      AAAMHklEQVR4nO3dzW8jdx0G8GfGE9ux43c7ySbZbPYlm9dd2h7aQmkPUDhwoudyAAnBAQ5w
      4p9A4gxSWxDqESSEeCmUcoAKWgpttvE6WW+yeR+/v7/G9vw4hDX7kqjaydgb5/d8pJV2LGf0
      zSRPYs88+Y0ihBAgkpQGAMwAyUq7/59KpWLpjmu1Glwul6X7JLKaBgCKosDj8TzRBwohIISA
      oihQFOWxbQBPvE+iftM++ynHK+bSSGXzODRULM/PopBNIZ0rotESuLk0Z+WMRD1jOgAenw+7
      29twBCcBAP7QKAr5HBz+IAzDgGEYaLfblg1K1AumA1Cp1DG3dAO31++iUHChlNFh91/AeNAL
      VVWhqio0zfTuifpCNfuBTruG/YME5hcWYLPZ4A9F0Chlkc4VrJyPqKeUXl0HKJfLfBNMZ57p
      3wBE5wEDQFJjAEhqDABJjQEgqTEAJDUGgKTGAJDUTHcVCpkkkpk8NOcIrs5MIZfcw146D39g
      DNOTo1bOSNQz5stwfj8O9ARsw0dXe/VMATeWlxGN3oZxIcwyHA0E0wEQsGH2+nVE1zfRbo9B
      U4DDVhuAyjIcDQzTXaBcOoFMvoTQ6AQO62WEA15sbu1iYvoyPC4Hu0A0EFiGI6nxLBBJjQEg
      qTEAJDUGgKTGAJDUGACSGgNAUmMASGqmA1DKpbG2toa9RKa7HYvFoKdzlg1H1GumyzoubwAz
      TgfiWzqmxsNIZzIIhILIZjMYDwcghIBhGFbOSmQ50wGol7LYPMhjaeF697FOqwPgaGFcLrlO
      g8B0ADLZHBxDKlLZPIzDGnxeL9L5IjzeIBRF6TZCic4yluFIavwRTVJjAEhqDABJjQEgqTEA
      JDUGgKTGAJDUGACSmukANGplxON3kC9VAQBGp4XNjThyxaplwxH1mukAGELBzMwlbG/dAwBs
      bcShOT0Ydg5ZNhxRr5nuAmmqwOpqDLPziwCAUqWKyeAo1tfjuLm8wKURaSCYDsBmPA77sBul
      chmFbA0zFyexm0zBNeLh0og0MFiGI6nxLBBJjQEgqTEAJDUGgKTGAJDUGACSGgNAUmMASGqm
      AyCMDhK6jmar032sWa+gfsj6Aw0O0wEo5nNwuoYRi60BAITo4Patf2M/kbdsOKJeM13W8fr9
      iEWjmJi6AgBI7G5hbOoS6h3AMAyW4WggmA7A+qefQHGHoCoCuq5DUTVkUjrKhhdXpyMsw9FA
      MF2Ga7cO0Wp3YNM0qIoCTdMghAEhAFVVWYajgWD+7wGG7NAe+dsXRVGhKKcdiah/eBqUpMYA
      kNQYAJIaA0BSYwBIagwASY0BIKkxACQ10xfC8ukEktk82tCwPD+LfCaJZCaPllBx44E7RxKd
      ZaYDEAiPoVQqQDi8R9uhUZRLRXSGPCzD0cAwHYCdzXU4/BMYC3lRKpVQyujQvOO4GPZBAViG
      o4Fg+jvU4/MjldFhdFpwOzSM+PxIZhJAp4WJsbCVMxL1DJdGJKnxLBBJjQEgqTEAJDUGgKTG
      AJDUGACSGgNAUmMASGqmA1AuZLG2toZE+mgluGa1hGg0ilypZtlwRL1mugrhdHtx7YoL0Tv3
      MB4JYHNrB3MLi1iLrSGwuAAhBHp0kZnIMqYD0KqXsLZ5gOXlJQCAUBTYFAWA6H7zG4Zh1ZxE
      PWE6AAf7OlzDdmRyeRiHNUyNhbAajSI0Otm9T7DNZrNyViLLsQxHUuNZIJIaA0BSYwBIagwA
      SY0BIKkxACQ1BoCkxgCQ1E5xn2ADqXS6u90+bGDj7gZqjZYlgxH1g+kA1ColbO8ddLfvxuO4
      MDWJePyOJYMR9YPpLpDb64dvJNXdHnE7EL9zB3aXj0sj0sA4PgDCwLvv/B7jlxcwd3UGQ9rj
      pbZiLo2DgwO43H7AaKLV6sA+NASj3eqW4bg0Ip11x5fhhEA+vY9fvPkG2q4IXnjxi3j5+ZtP
      tGOW4WgQnPAjWmA1dgevf/eHCPvcuLez19+piPrkxNcoqd17+PjWCkJTS3j9ta/2cyaivjn+
      LJAQqAo75i7PoFLK9ncioj56PADCwEcfvI9QMIha4xDzC8tPYSyi/jjmN4CCa9fnEd/Ywksv
      fR5316P9n4qoTx4PgKLAH4zgxZtX8cc/vYflm889hbGI+uP49wCKghdf/jKc3gBe+BxveEfn
      1wlVCIFiqYjF67PIFUr9nYioj44PgGHgrTffRC6bgZ466SyQQLPZfGBToFop47DF+gMNjhNf
      AnlcDui6jlyxfOxTKsU8/vXxSnc7uXcPd7d2UK7WezIoUS+ceCEsHAyg7hhGRt8H8HgNYsQX
      xGjI393WU1mMTkxid2cXAe88y3A0EE6sQiSzBWjOBpru8WOfUcylkdAT3TLc9NQF7GcKGHa5
      WIajgXHCd6iKZxZn8d4Hq3jt1a8f+wxfMIJXXok89FhwzOrxiHrrhCqEgZW4jh9879v467vv
      cJFbOrdOfBN8IezGb//wZwzbBP7xMa8G0/l07EugnfUVHGQq0FSBZ77wKp5bmOnzWET9cWwA
      3vvbh/jGt74Dp1HFz375awaAzq1jA/ClV57H2z9/CzbFwAsvfaXfMxH1De8PQFLjwlgkNQaA
      pHaKAAjU6w/3fg4bdTRbnVOORNQ/pgNQKebxn1ur3W0hDNxe+RA7es6SwYj6wXRZZ8QXRCSY
      6W6n9rYRnphGU4Arw9HAMB2AerWMXC6HXKGEVrOODhTkMwmUjTquTkdYhrNIsViE0+mEw+F4
      2qOcS6ZPgx42G6g3mtCG7BjSbLDb7RBGBx2hQLOpPA1qkY2NDYRCIfj9/s9+Mj0x0z+i7Q4n
      7A7nQ48pqs38DomeAp4GJakxACQ1BoCkxgCQ1BgAkhoDQFJjAEhqDABJ7RRluBz+/s8Pu9v5
      TBJra2uIrt21ZDCifjhVGe7BleECoVFUK2U0VRfLcBYyDAOdTofHskcsaS5Uq1UU0wcQwyFc
      GQtCAViGs4iqqrDZbDyWPWL6JVAxl0an3cHeQQqHh0043R7UCmnoycxnfzDRGWH6x4ovGIEv
      +MjSiJHj1xElOqt4FoikxgCQ1BgAkhoDQFJjAEhqDABJjQEgqTEAJDXTAaiW8vjok1vd7WIm
      gU9XV7Gf5MpwNDhMXwl2efzwutPd7b1kBstLS4jevo0LET/LcBZhGa63TAdAUZSHtlUF6AgB
      QIGiHP2z2WynnU969285y2PZG6YDUMylUavWsHeQAowmrsxMYz0Ww+T0lW4AHg0JmcNj2Tun
      KsM980gZbmlp6dQDEfUTzwKR1BgAkhoDQFJjAEhqDABJjQEgqTEAJDUGgKRmOgCNShHRaBT5
      8tG9gqulHGKxGNK5kmXDEfWa6SvBm1s7mF9cRCy2jsDSIvb3dUxcvISd7V2EAx4IIWDy/nv0
      gPvHkceyN8wvN6YoUBUVwNEXxm4fQkrXodkd3S+YYRgWjSmv+8eRx7I3TAdgciyM1egqwmMX
      sbe3C6fDgXq5BofbxQajhe4fRx7L3jBfhguP40b4/kpwR4vkcl04GjQ8C0RSYwBIagwASY0B
      IKkxACQ1BoCkxgCQ1M58ABqNBur1+tMeg84p0wEQQqDRaPy/oyIEmo062h1rL9kXCgVks1lL
      90l0n+krwbubd9AUKjqwY/7aJaT1HeTrBiLhCAK+EStnJOoZ0wEoN1pYWlrGajQKANjXk3CN
      eJFMZ+DzuCxbGlH2ew5zacTeMr826JANiVQSqjaMbDaLoN8LzRNGJpnqluGsuLetlfsaRLxP
      cG+Zfg8wc+06VKFgbvYyhoeHcfHKHIbQwfzCnJXzEfWU+cVxVRtGx0YBAC6XCwAQGR2zZiqi
      Pjnzp0GJeokBIKkxACS1M3tq4W5iC+t7G2hWGxCGwEpiHbMTl3F94srTHq0v8ivrqG7uItuo
      oKU5UNGGEHh2Ae6Zyac92rlyZgPwl5X38ePf/BQT7giGFBu2Kwl8/2vflCYAO2//Dptv/AqN
      mzPQ9By0dAnP/uRHDIDF+BKIpMYAkNQYAJKa6QCk97fx6eqn2NpP/e8RgfVbH+DeAe8TTIPD
      9JvgVKGM5eVlRKO3gclRVPIpwO6G0e5YUmAzxOO1aplKcbJ//v1iOgCaAjSbTUDR0Gw2oSdS
      aDaqyFZVXJ2OnLrAdrTs4iOPSVSKk/3z75f/AoUYnnLz75RcAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='vol vs price' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
